// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.2
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="feature_extractor,hls_ip_2015_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.412000,HLS_SYN_LAT=1761897,HLS_SYN_TPT=none,HLS_SYN_MEM=16,HLS_SYN_DSP=31,HLS_SYN_FF=4242,HLS_SYN_LUT=7568}" *)

module feature_extractor (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        A_address0,
        A_ce0,
        A_q0,
        W_address0,
        W_ce0,
        W_q0,
        feature_address0,
        feature_ce0,
        feature_we0,
        feature_d0
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 39'b1;
parameter    ap_ST_st2_fsm_1 = 39'b10;
parameter    ap_ST_st3_fsm_2 = 39'b100;
parameter    ap_ST_st4_fsm_3 = 39'b1000;
parameter    ap_ST_st5_fsm_4 = 39'b10000;
parameter    ap_ST_st6_fsm_5 = 39'b100000;
parameter    ap_ST_st7_fsm_6 = 39'b1000000;
parameter    ap_ST_st8_fsm_7 = 39'b10000000;
parameter    ap_ST_st9_fsm_8 = 39'b100000000;
parameter    ap_ST_st10_fsm_9 = 39'b1000000000;
parameter    ap_ST_st11_fsm_10 = 39'b10000000000;
parameter    ap_ST_st12_fsm_11 = 39'b100000000000;
parameter    ap_ST_st13_fsm_12 = 39'b1000000000000;
parameter    ap_ST_st14_fsm_13 = 39'b10000000000000;
parameter    ap_ST_st15_fsm_14 = 39'b100000000000000;
parameter    ap_ST_st16_fsm_15 = 39'b1000000000000000;
parameter    ap_ST_st17_fsm_16 = 39'b10000000000000000;
parameter    ap_ST_st18_fsm_17 = 39'b100000000000000000;
parameter    ap_ST_st19_fsm_18 = 39'b1000000000000000000;
parameter    ap_ST_st20_fsm_19 = 39'b10000000000000000000;
parameter    ap_ST_st21_fsm_20 = 39'b100000000000000000000;
parameter    ap_ST_st22_fsm_21 = 39'b1000000000000000000000;
parameter    ap_ST_st23_fsm_22 = 39'b10000000000000000000000;
parameter    ap_ST_st24_fsm_23 = 39'b100000000000000000000000;
parameter    ap_ST_st25_fsm_24 = 39'b1000000000000000000000000;
parameter    ap_ST_st26_fsm_25 = 39'b10000000000000000000000000;
parameter    ap_ST_st27_fsm_26 = 39'b100000000000000000000000000;
parameter    ap_ST_st28_fsm_27 = 39'b1000000000000000000000000000;
parameter    ap_ST_st29_fsm_28 = 39'b10000000000000000000000000000;
parameter    ap_ST_st30_fsm_29 = 39'b100000000000000000000000000000;
parameter    ap_ST_st31_fsm_30 = 39'b1000000000000000000000000000000;
parameter    ap_ST_st32_fsm_31 = 39'b10000000000000000000000000000000;
parameter    ap_ST_st33_fsm_32 = 39'b100000000000000000000000000000000;
parameter    ap_ST_st34_fsm_33 = 39'b1000000000000000000000000000000000;
parameter    ap_ST_st35_fsm_34 = 39'b10000000000000000000000000000000000;
parameter    ap_ST_st36_fsm_35 = 39'b100000000000000000000000000000000000;
parameter    ap_ST_st37_fsm_36 = 39'b1000000000000000000000000000000000000;
parameter    ap_ST_st38_fsm_37 = 39'b10000000000000000000000000000000000000;
parameter    ap_ST_st39_fsm_38 = 39'b100000000000000000000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_19 = 32'b11001;
parameter    ap_const_lv32_1A = 32'b11010;
parameter    ap_const_lv32_1B = 32'b11011;
parameter    ap_const_lv32_1C = 32'b11100;
parameter    ap_const_lv32_1D = 32'b11101;
parameter    ap_const_lv32_23 = 32'b100011;
parameter    ap_const_lv32_25 = 32'b100101;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv5_0 = 5'b00000;
parameter    ap_const_lv32_24 = 32'b100100;
parameter    ap_const_lv32_26 = 32'b100110;
parameter    ap_const_lv32_1E = 32'b11110;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv3_6 = 3'b110;
parameter    ap_const_lv3_1 = 3'b1;
parameter    ap_const_lv5_18 = 5'b11000;
parameter    ap_const_lv5_1 = 5'b1;
parameter    ap_const_lv32_80000000 = 32'b10000000000000000000000000000000;
parameter    ap_const_lv32_3F = 32'b111111;
parameter    ap_const_lv32_34 = 32'b110100;
parameter    ap_const_lv32_3E = 32'b111110;
parameter    ap_const_lv12_C01 = 12'b110000000001;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv11_3FF = 11'b1111111111;
parameter    ap_const_lv32_53 = 32'b1010011;
parameter    ap_const_lv64_0 = 64'b0000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] A_address0;
output   A_ce0;
input  [31:0] A_q0;
output  [7:0] W_address0;
output   W_ce0;
input  [31:0] W_q0;
output  [9:0] feature_address0;
output   feature_ce0;
output   feature_we0;
output  [31:0] feature_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg A_ce0;
reg W_ce0;
reg feature_ce0;
reg feature_we0;
(* fsm_encoding = "none" *) reg   [38:0] ap_CS_fsm = 39'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_55;
wire   [2:0] i_1_fu_218_p2;
reg   [2:0] i_1_reg_525;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_bdd_88;
wire   [2:0] j_1_fu_230_p2;
reg   [2:0] j_1_reg_533;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_bdd_97;
wire  signed [9:0] p_addr_cast_fu_266_p1;
reg  signed [9:0] p_addr_cast_reg_538;
wire   [0:0] exitcond1_fu_224_p2;
wire   [4:0] i_2_fu_276_p2;
reg   [4:0] i_2_reg_546;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_bdd_112;
wire  signed [31:0] p_addr2_fu_315_p2;
reg  signed [31:0] p_addr2_reg_551;
wire   [0:0] exitcond1_i_fu_270_p2;
wire   [4:0] j_2_fu_327_p2;
reg   [4:0] j_2_reg_559;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_bdd_126;
wire   [63:0] tmp_5_fu_342_p1;
reg   [63:0] tmp_5_reg_564;
wire   [0:0] exitcond_i_fu_321_p2;
wire   [31:0] C_q0;
reg   [31:0] C_load_reg_574;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_bdd_142;
wire   [63:0] tmp_11_i_fu_204_p1;
reg   [63:0] tmp_11_i_reg_579;
reg    ap_sig_cseq_ST_st8_fsm_7;
reg    ap_sig_bdd_151;
wire   [63:0] grp_fu_207_p2;
reg   [63:0] x_assign_reg_584;
reg    ap_sig_cseq_ST_st26_fsm_25;
reg    ap_sig_bdd_160;
reg   [0:0] p_Result_s_reg_589;
reg    ap_sig_cseq_ST_st27_fsm_26;
reg    ap_sig_bdd_169;
wire   [31:0] p_Val2_4_fu_480_p3;
reg   [31:0] p_Val2_4_reg_594;
wire   [31:0] p_Val2_s_fu_493_p3;
reg   [31:0] p_Val2_s_reg_600;
reg    ap_sig_cseq_ST_st28_fsm_27;
reg    ap_sig_bdd_180;
reg    ap_sig_cseq_ST_st29_fsm_28;
reg    ap_sig_bdd_189;
wire   [31:0] grp_fu_504_p2;
reg   [31:0] tmp_14_i_reg_610;
reg    ap_sig_cseq_ST_st30_fsm_29;
reg    ap_sig_bdd_198;
wire    grp_fu_504_ap_done;
wire   [31:0] grp_fu_201_p1;
reg   [31:0] tmp_15_i_reg_615;
reg    ap_sig_cseq_ST_st36_fsm_35;
reg    ap_sig_bdd_211;
wire   [2:0] k_1_fu_516_p2;
reg   [2:0] k_1_reg_623;
reg    ap_sig_cseq_ST_st38_fsm_37;
reg    ap_sig_bdd_220;
reg   [11:0] C_address0;
reg    C_ce0;
reg    C_we0;
wire   [31:0] C_d0;
reg   [11:0] S_address0;
reg    S_ce0;
reg    S_we0;
wire   [31:0] S_d0;
wire   [31:0] S_q0;
wire    grp_feature_extractor_convolve_fu_177_ap_start;
wire    grp_feature_extractor_convolve_fu_177_ap_done;
wire    grp_feature_extractor_convolve_fu_177_ap_idle;
wire    grp_feature_extractor_convolve_fu_177_ap_ready;
wire   [9:0] grp_feature_extractor_convolve_fu_177_A_address0;
wire    grp_feature_extractor_convolve_fu_177_A_ce0;
wire   [31:0] grp_feature_extractor_convolve_fu_177_A_q0;
wire   [7:0] grp_feature_extractor_convolve_fu_177_B_address0;
wire    grp_feature_extractor_convolve_fu_177_B_ce0;
wire   [31:0] grp_feature_extractor_convolve_fu_177_B_q0;
wire   [2:0] grp_feature_extractor_convolve_fu_177_tmp;
wire   [11:0] grp_feature_extractor_convolve_fu_177_conv_address0;
wire    grp_feature_extractor_convolve_fu_177_conv_ce0;
wire    grp_feature_extractor_convolve_fu_177_conv_we0;
wire   [31:0] grp_feature_extractor_convolve_fu_177_conv_d0;
wire   [31:0] grp_feature_extractor_convolve_fu_177_conv_q0;
wire   [2:0] grp_feature_extractor_convolve_fu_177_tmp1;
wire    grp_feature_extractor_maxpool_fu_190_ap_start;
wire    grp_feature_extractor_maxpool_fu_190_ap_done;
wire    grp_feature_extractor_maxpool_fu_190_ap_idle;
wire    grp_feature_extractor_maxpool_fu_190_ap_ready;
wire   [11:0] grp_feature_extractor_maxpool_fu_190_input_mat_address0;
wire    grp_feature_extractor_maxpool_fu_190_input_mat_ce0;
wire   [31:0] grp_feature_extractor_maxpool_fu_190_input_mat_q0;
wire   [2:0] grp_feature_extractor_maxpool_fu_190_tmp_4;
wire   [9:0] grp_feature_extractor_maxpool_fu_190_output_mat_address0;
wire    grp_feature_extractor_maxpool_fu_190_output_mat_ce0;
wire    grp_feature_extractor_maxpool_fu_190_output_mat_we0;
wire   [31:0] grp_feature_extractor_maxpool_fu_190_output_mat_d0;
wire   [2:0] grp_feature_extractor_maxpool_fu_190_tmp_41;
reg   [2:0] i_reg_120;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_bdd_285;
reg   [2:0] j_reg_132;
wire   [0:0] exitcond2_fu_212_p2;
reg   [4:0] i_i_reg_143;
reg   [4:0] j_i_reg_154;
reg    ap_sig_cseq_ST_st37_fsm_36;
reg    ap_sig_bdd_310;
reg   [2:0] k_reg_165;
reg    ap_sig_cseq_ST_st39_fsm_38;
reg    ap_sig_bdd_319;
reg    grp_feature_extractor_convolve_fu_177_ap_start_ap_start_reg = 1'b0;
reg    grp_feature_extractor_maxpool_fu_190_ap_start_ap_start_reg = 1'b0;
wire   [0:0] exitcond_fu_510_p2;
wire   [31:0] grp_fu_201_p0;
reg    ap_sig_cseq_ST_st31_fsm_30;
reg    ap_sig_bdd_342;
wire   [31:0] tmp_11_i_fu_204_p0;
wire   [63:0] grp_fu_207_p1;
reg    ap_sig_cseq_ST_st9_fsm_8;
reg    ap_sig_bdd_352;
wire   [7:0] tmp_fu_236_p3;
wire   [5:0] tmp_1_fu_248_p3;
wire   [8:0] p_shl_cast_fu_244_p1;
wire   [8:0] p_shl1_cast_fu_256_p1;
wire   [8:0] p_addr_fu_260_p2;
wire   [9:0] tmp_i_trn_cast_fu_282_p1;
wire  signed [9:0] p_addr1_fu_286_p2;
wire   [14:0] tmp_2_fu_291_p3;
wire   [12:0] tmp_3_fu_303_p3;
wire  signed [31:0] p_shl2_fu_299_p1;
wire  signed [31:0] p_shl3_fu_311_p1;
wire   [31:0] tmp_i_trn_fu_333_p1;
wire  signed [31:0] p_addr3_fu_337_p2;
wire   [31:0] tmp_12_to_int_i_fu_347_p1;
wire   [31:0] tmp_12_neg_i_fu_350_p2;
wire   [63:0] p_Val2_1_fu_361_p1;
wire   [51:0] loc_V_1_fu_382_p1;
wire   [52:0] p_Result_1_fu_386_p3;
wire   [10:0] loc_V_fu_372_p4;
wire   [11:0] tmp_i_i_i_i_cast2_fu_398_p1;
wire  signed [11:0] sh_assign_fu_402_p2;
wire   [10:0] tmp_i_i_i_14_fu_416_p2;
wire   [0:0] isNeg_fu_408_p3;
wire  signed [11:0] tmp_i_i_i_cast_fu_422_p1;
wire   [11:0] sh_assign_1_fu_426_p3;
wire  signed [31:0] sh_assign_2_i_cast_fu_434_p1;
wire   [52:0] tmp_9_i_i_i_cast_fu_442_p1;
wire   [135:0] tmp_i_i_i_fu_394_p1;
wire   [135:0] tmp_9_i_i_i_fu_438_p1;
wire   [52:0] tmp_10_i_i_i_fu_446_p2;
wire   [0:0] tmp_10_fu_458_p3;
wire   [135:0] tmp_12_i_i_i_fu_452_p2;
wire   [31:0] tmp_7_fu_466_p1;
wire   [31:0] tmp_8_fu_470_p4;
wire   [31:0] p_Val2_i_i_i_fu_488_p2;
wire   [2:0] grp_fu_504_p0;
wire   [31:0] grp_fu_504_p1;
wire    grp_fu_201_ce;
wire   [63:0] grp_fu_207_p0;
wire    grp_fu_207_ce;
reg    grp_fu_504_ap_start;
wire    grp_fu_504_ce;
reg   [38:0] ap_NS_fsm;


feature_extractor_C #(
    .DataWidth( 32 ),
    .AddressRange( 3456 ),
    .AddressWidth( 12 ))
C_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( C_address0 ),
    .ce0( C_ce0 ),
    .we0( C_we0 ),
    .d0( C_d0 ),
    .q0( C_q0 )
);

feature_extractor_C #(
    .DataWidth( 32 ),
    .AddressRange( 3456 ),
    .AddressWidth( 12 ))
S_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( S_address0 ),
    .ce0( S_ce0 ),
    .we0( S_we0 ),
    .d0( S_d0 ),
    .q0( S_q0 )
);

feature_extractor_convolve grp_feature_extractor_convolve_fu_177(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst ),
    .ap_start( grp_feature_extractor_convolve_fu_177_ap_start ),
    .ap_done( grp_feature_extractor_convolve_fu_177_ap_done ),
    .ap_idle( grp_feature_extractor_convolve_fu_177_ap_idle ),
    .ap_ready( grp_feature_extractor_convolve_fu_177_ap_ready ),
    .A_address0( grp_feature_extractor_convolve_fu_177_A_address0 ),
    .A_ce0( grp_feature_extractor_convolve_fu_177_A_ce0 ),
    .A_q0( grp_feature_extractor_convolve_fu_177_A_q0 ),
    .B_address0( grp_feature_extractor_convolve_fu_177_B_address0 ),
    .B_ce0( grp_feature_extractor_convolve_fu_177_B_ce0 ),
    .B_q0( grp_feature_extractor_convolve_fu_177_B_q0 ),
    .tmp( grp_feature_extractor_convolve_fu_177_tmp ),
    .conv_address0( grp_feature_extractor_convolve_fu_177_conv_address0 ),
    .conv_ce0( grp_feature_extractor_convolve_fu_177_conv_ce0 ),
    .conv_we0( grp_feature_extractor_convolve_fu_177_conv_we0 ),
    .conv_d0( grp_feature_extractor_convolve_fu_177_conv_d0 ),
    .conv_q0( grp_feature_extractor_convolve_fu_177_conv_q0 ),
    .tmp1( grp_feature_extractor_convolve_fu_177_tmp1 )
);

feature_extractor_maxpool grp_feature_extractor_maxpool_fu_190(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst ),
    .ap_start( grp_feature_extractor_maxpool_fu_190_ap_start ),
    .ap_done( grp_feature_extractor_maxpool_fu_190_ap_done ),
    .ap_idle( grp_feature_extractor_maxpool_fu_190_ap_idle ),
    .ap_ready( grp_feature_extractor_maxpool_fu_190_ap_ready ),
    .input_mat_address0( grp_feature_extractor_maxpool_fu_190_input_mat_address0 ),
    .input_mat_ce0( grp_feature_extractor_maxpool_fu_190_input_mat_ce0 ),
    .input_mat_q0( grp_feature_extractor_maxpool_fu_190_input_mat_q0 ),
    .tmp_4( grp_feature_extractor_maxpool_fu_190_tmp_4 ),
    .output_mat_address0( grp_feature_extractor_maxpool_fu_190_output_mat_address0 ),
    .output_mat_ce0( grp_feature_extractor_maxpool_fu_190_output_mat_ce0 ),
    .output_mat_we0( grp_feature_extractor_maxpool_fu_190_output_mat_we0 ),
    .output_mat_d0( grp_feature_extractor_maxpool_fu_190_output_mat_d0 ),
    .tmp_41( grp_feature_extractor_maxpool_fu_190_tmp_41 )
);

feature_extractor_sitofp_32ns_32_6 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
feature_extractor_sitofp_32ns_32_6_U15(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_201_p0 ),
    .ce( grp_fu_201_ce ),
    .dout( grp_fu_201_p1 )
);

feature_extractor_fpext_32ns_64_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
feature_extractor_fpext_32ns_64_1_U16(
    .din0( tmp_11_i_fu_204_p0 ),
    .dout( tmp_11_i_fu_204_p1 )
);

feature_extractor_dexp_64ns_64ns_64_18_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 18 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
feature_extractor_dexp_64ns_64ns_64_18_full_dsp_U17(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_207_p0 ),
    .din1( grp_fu_207_p1 ),
    .ce( grp_fu_207_ce ),
    .dout( grp_fu_207_p2 )
);

feature_extractor_sdiv_3ns_32ns_32_7_seq #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
feature_extractor_sdiv_3ns_32ns_32_7_seq_U18(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .start( grp_fu_504_ap_start ),
    .done( grp_fu_504_ap_done ),
    .din0( grp_fu_504_p0 ),
    .din1( grp_fu_504_p1 ),
    .ce( grp_fu_504_ce ),
    .dout( grp_fu_504_p2 )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// grp_feature_extractor_convolve_fu_177_ap_start_ap_start_reg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_grp_feature_extractor_convolve_fu_177_ap_start_ap_start_reg
    if (ap_rst == 1'b1) begin
        grp_feature_extractor_convolve_fu_177_ap_start_ap_start_reg <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (ap_const_lv1_0 == exitcond2_fu_212_p2))) begin
            grp_feature_extractor_convolve_fu_177_ap_start_ap_start_reg <= ap_const_logic_1;
        end else if ((ap_const_logic_1 == grp_feature_extractor_convolve_fu_177_ap_ready)) begin
            grp_feature_extractor_convolve_fu_177_ap_start_ap_start_reg <= ap_const_logic_0;
        end
    end
end

/// grp_feature_extractor_maxpool_fu_190_ap_start_ap_start_reg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_grp_feature_extractor_maxpool_fu_190_ap_start_ap_start_reg
    if (ap_rst == 1'b1) begin
        grp_feature_extractor_maxpool_fu_190_ap_start_ap_start_reg <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_st38_fsm_37) & (ap_const_lv1_0 == exitcond_fu_510_p2))) begin
            grp_feature_extractor_maxpool_fu_190_ap_start_ap_start_reg <= ap_const_logic_1;
        end else if ((ap_const_logic_1 == grp_feature_extractor_maxpool_fu_190_ap_ready)) begin
            grp_feature_extractor_maxpool_fu_190_ap_start_ap_start_reg <= ap_const_logic_0;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) & ~(ap_const_lv1_0 == exitcond_i_fu_321_p2))) begin
        i_i_reg_143 <= i_2_reg_546;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & (exitcond1_fu_224_p2 == ap_const_lv1_0))) begin
        i_i_reg_143 <= ap_const_lv5_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & ~(ap_const_logic_0 == grp_feature_extractor_convolve_fu_177_ap_done))) begin
        i_reg_120 <= i_1_reg_525;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        i_reg_120 <= ap_const_lv3_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) & (ap_const_lv1_0 == exitcond1_i_fu_270_p2))) begin
        j_i_reg_154 <= ap_const_lv5_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st37_fsm_36)) begin
        j_i_reg_154 <= j_2_reg_559;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) & ~(ap_const_lv1_0 == exitcond1_i_fu_270_p2))) begin
        j_reg_132 <= j_1_reg_533;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(ap_const_lv1_0 == exitcond2_fu_212_p2))) begin
        j_reg_132 <= ap_const_lv3_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & ~(exitcond1_fu_224_p2 == ap_const_lv1_0))) begin
        k_reg_165 <= ap_const_lv3_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st39_fsm_38) & ~(ap_const_logic_0 == grp_feature_extractor_maxpool_fu_190_ap_done))) begin
        k_reg_165 <= k_1_reg_623;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        C_load_reg_574 <= C_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        i_1_reg_525 <= i_1_fu_218_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        i_2_reg_546 <= i_2_fu_276_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        j_1_reg_533 <= j_1_fu_230_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        j_2_reg_559 <= j_2_fu_327_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st38_fsm_37)) begin
        k_1_reg_623 <= k_1_fu_516_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st27_fsm_26)) begin
        p_Result_s_reg_589 <= p_Val2_1_fu_361_p1[ap_const_lv32_3F];
        p_Val2_4_reg_594 <= p_Val2_4_fu_480_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st28_fsm_27)) begin
        p_Val2_s_reg_600 <= p_Val2_s_fu_493_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) & (ap_const_lv1_0 == exitcond1_i_fu_270_p2))) begin
        p_addr2_reg_551[31 : 3] <= p_addr2_fu_315_p2[31 : 3];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & (exitcond1_fu_224_p2 == ap_const_lv1_0))) begin
        p_addr_cast_reg_538[9 : 3] <= p_addr_cast_fu_266_p1[9 : 3];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        tmp_11_i_reg_579 <= tmp_11_i_fu_204_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st30_fsm_29) & ~(ap_const_logic_0 == grp_fu_504_ap_done))) begin
        tmp_14_i_reg_610 <= grp_fu_504_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st36_fsm_35)) begin
        tmp_15_i_reg_615 <= grp_fu_201_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) & (ap_const_lv1_0 == exitcond_i_fu_321_p2))) begin
        tmp_5_reg_564[31 : 0] <= tmp_5_fu_342_p1[31 : 0];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st26_fsm_25)) begin
        x_assign_reg_584 <= grp_fu_207_p2;
    end
end

/// A_ce0 assign process. ///
always @ (grp_feature_extractor_convolve_fu_177_A_ce0 or ap_sig_cseq_ST_st3_fsm_2)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        A_ce0 = grp_feature_extractor_convolve_fu_177_A_ce0;
    end else begin
        A_ce0 = ap_const_logic_0;
    end
end

/// C_address0 assign process. ///
always @ (ap_sig_cseq_ST_st6_fsm_5 or tmp_5_fu_342_p1 or grp_feature_extractor_convolve_fu_177_conv_address0 or ap_sig_cseq_ST_st3_fsm_2)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        C_address0 = tmp_5_fu_342_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        C_address0 = grp_feature_extractor_convolve_fu_177_conv_address0;
    end else begin
        C_address0 = 'bx;
    end
end

/// C_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st6_fsm_5 or grp_feature_extractor_convolve_fu_177_conv_ce0 or ap_sig_cseq_ST_st3_fsm_2)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        C_ce0 = ap_const_logic_1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        C_ce0 = grp_feature_extractor_convolve_fu_177_conv_ce0;
    end else begin
        C_ce0 = ap_const_logic_0;
    end
end

/// C_we0 assign process. ///
always @ (grp_feature_extractor_convolve_fu_177_conv_we0 or ap_sig_cseq_ST_st3_fsm_2)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        C_we0 = grp_feature_extractor_convolve_fu_177_conv_we0;
    end else begin
        C_we0 = ap_const_logic_0;
    end
end

/// S_address0 assign process. ///
always @ (tmp_5_reg_564 or grp_feature_extractor_maxpool_fu_190_input_mat_address0 or ap_sig_cseq_ST_st37_fsm_36 or ap_sig_cseq_ST_st39_fsm_38)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st37_fsm_36)) begin
        S_address0 = tmp_5_reg_564;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st39_fsm_38)) begin
        S_address0 = grp_feature_extractor_maxpool_fu_190_input_mat_address0;
    end else begin
        S_address0 = 'bx;
    end
end

/// S_ce0 assign process. ///
always @ (grp_feature_extractor_maxpool_fu_190_input_mat_ce0 or ap_sig_cseq_ST_st37_fsm_36 or ap_sig_cseq_ST_st39_fsm_38)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st37_fsm_36)) begin
        S_ce0 = ap_const_logic_1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st39_fsm_38)) begin
        S_ce0 = grp_feature_extractor_maxpool_fu_190_input_mat_ce0;
    end else begin
        S_ce0 = ap_const_logic_0;
    end
end

/// S_we0 assign process. ///
always @ (ap_sig_cseq_ST_st37_fsm_36)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st37_fsm_36)) begin
        S_we0 = ap_const_logic_1;
    end else begin
        S_we0 = ap_const_logic_0;
    end
end

/// W_ce0 assign process. ///
always @ (grp_feature_extractor_convolve_fu_177_B_ce0 or ap_sig_cseq_ST_st3_fsm_2)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        W_ce0 = grp_feature_extractor_convolve_fu_177_B_ce0;
    end else begin
        W_ce0 = ap_const_logic_0;
    end
end

/// ap_done assign process. ///
always @ (ap_sig_cseq_ST_st38_fsm_37 or exitcond_fu_510_p2)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st38_fsm_37) & ~(ap_const_lv1_0 == exitcond_fu_510_p2))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_sig_cseq_ST_st38_fsm_37 or exitcond_fu_510_p2)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st38_fsm_37) & ~(ap_const_lv1_0 == exitcond_fu_510_p2))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st1_fsm_0 assign process. ///
always @ (ap_sig_bdd_55)
begin
    if (ap_sig_bdd_55) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st26_fsm_25 assign process. ///
always @ (ap_sig_bdd_160)
begin
    if (ap_sig_bdd_160) begin
        ap_sig_cseq_ST_st26_fsm_25 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st26_fsm_25 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st27_fsm_26 assign process. ///
always @ (ap_sig_bdd_169)
begin
    if (ap_sig_bdd_169) begin
        ap_sig_cseq_ST_st27_fsm_26 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st27_fsm_26 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st28_fsm_27 assign process. ///
always @ (ap_sig_bdd_180)
begin
    if (ap_sig_bdd_180) begin
        ap_sig_cseq_ST_st28_fsm_27 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st28_fsm_27 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st29_fsm_28 assign process. ///
always @ (ap_sig_bdd_189)
begin
    if (ap_sig_bdd_189) begin
        ap_sig_cseq_ST_st29_fsm_28 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st29_fsm_28 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st2_fsm_1 assign process. ///
always @ (ap_sig_bdd_88)
begin
    if (ap_sig_bdd_88) begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st30_fsm_29 assign process. ///
always @ (ap_sig_bdd_198)
begin
    if (ap_sig_bdd_198) begin
        ap_sig_cseq_ST_st30_fsm_29 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st30_fsm_29 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st31_fsm_30 assign process. ///
always @ (ap_sig_bdd_342)
begin
    if (ap_sig_bdd_342) begin
        ap_sig_cseq_ST_st31_fsm_30 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st31_fsm_30 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st36_fsm_35 assign process. ///
always @ (ap_sig_bdd_211)
begin
    if (ap_sig_bdd_211) begin
        ap_sig_cseq_ST_st36_fsm_35 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st36_fsm_35 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st37_fsm_36 assign process. ///
always @ (ap_sig_bdd_310)
begin
    if (ap_sig_bdd_310) begin
        ap_sig_cseq_ST_st37_fsm_36 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st37_fsm_36 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st38_fsm_37 assign process. ///
always @ (ap_sig_bdd_220)
begin
    if (ap_sig_bdd_220) begin
        ap_sig_cseq_ST_st38_fsm_37 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st38_fsm_37 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st39_fsm_38 assign process. ///
always @ (ap_sig_bdd_319)
begin
    if (ap_sig_bdd_319) begin
        ap_sig_cseq_ST_st39_fsm_38 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st39_fsm_38 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st3_fsm_2 assign process. ///
always @ (ap_sig_bdd_285)
begin
    if (ap_sig_bdd_285) begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st4_fsm_3 assign process. ///
always @ (ap_sig_bdd_97)
begin
    if (ap_sig_bdd_97) begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st5_fsm_4 assign process. ///
always @ (ap_sig_bdd_112)
begin
    if (ap_sig_bdd_112) begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st6_fsm_5 assign process. ///
always @ (ap_sig_bdd_126)
begin
    if (ap_sig_bdd_126) begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st7_fsm_6 assign process. ///
always @ (ap_sig_bdd_142)
begin
    if (ap_sig_bdd_142) begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st8_fsm_7 assign process. ///
always @ (ap_sig_bdd_151)
begin
    if (ap_sig_bdd_151) begin
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st9_fsm_8 assign process. ///
always @ (ap_sig_bdd_352)
begin
    if (ap_sig_bdd_352) begin
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_0;
    end
end

/// feature_ce0 assign process. ///
always @ (grp_feature_extractor_maxpool_fu_190_output_mat_ce0 or ap_sig_cseq_ST_st39_fsm_38)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st39_fsm_38)) begin
        feature_ce0 = grp_feature_extractor_maxpool_fu_190_output_mat_ce0;
    end else begin
        feature_ce0 = ap_const_logic_0;
    end
end

/// feature_we0 assign process. ///
always @ (grp_feature_extractor_maxpool_fu_190_output_mat_we0 or ap_sig_cseq_ST_st39_fsm_38)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st39_fsm_38)) begin
        feature_we0 = grp_feature_extractor_maxpool_fu_190_output_mat_we0;
    end else begin
        feature_we0 = ap_const_logic_0;
    end
end

/// grp_fu_504_ap_start assign process. ///
always @ (ap_sig_cseq_ST_st29_fsm_28)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_28)) begin
        grp_fu_504_ap_start = ap_const_logic_1;
    end else begin
        grp_fu_504_ap_start = ap_const_logic_0;
    end
end
/// the next state (ap_NS_fsm) of the state machine. ///
always @ (ap_start or ap_CS_fsm or exitcond1_fu_224_p2 or exitcond1_i_fu_270_p2 or exitcond_i_fu_321_p2 or grp_fu_504_ap_done or grp_feature_extractor_convolve_fu_177_ap_done or grp_feature_extractor_maxpool_fu_190_ap_done or exitcond2_fu_212_p2 or exitcond_fu_510_p2)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            if (~(ap_const_lv1_0 == exitcond2_fu_212_p2)) begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_st3_fsm_2 : 
        begin
            if (~(ap_const_logic_0 == grp_feature_extractor_convolve_fu_177_ap_done)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_st4_fsm_3 : 
        begin
            if ((exitcond1_fu_224_p2 == ap_const_lv1_0)) begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end else begin
                ap_NS_fsm = ap_ST_st38_fsm_37;
            end
        end
        ap_ST_st5_fsm_4 : 
        begin
            if ((ap_const_lv1_0 == exitcond1_i_fu_270_p2)) begin
                ap_NS_fsm = ap_ST_st6_fsm_5;
            end else begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end
        end
        ap_ST_st6_fsm_5 : 
        begin
            if ((ap_const_lv1_0 == exitcond_i_fu_321_p2)) begin
                ap_NS_fsm = ap_ST_st7_fsm_6;
            end else begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end
        end
        ap_ST_st7_fsm_6 : 
        begin
            ap_NS_fsm = ap_ST_st8_fsm_7;
        end
        ap_ST_st8_fsm_7 : 
        begin
            ap_NS_fsm = ap_ST_st9_fsm_8;
        end
        ap_ST_st9_fsm_8 : 
        begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st10_fsm_9 : 
        begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st11_fsm_10 : 
        begin
            ap_NS_fsm = ap_ST_st12_fsm_11;
        end
        ap_ST_st12_fsm_11 : 
        begin
            ap_NS_fsm = ap_ST_st13_fsm_12;
        end
        ap_ST_st13_fsm_12 : 
        begin
            ap_NS_fsm = ap_ST_st14_fsm_13;
        end
        ap_ST_st14_fsm_13 : 
        begin
            ap_NS_fsm = ap_ST_st15_fsm_14;
        end
        ap_ST_st15_fsm_14 : 
        begin
            ap_NS_fsm = ap_ST_st16_fsm_15;
        end
        ap_ST_st16_fsm_15 : 
        begin
            ap_NS_fsm = ap_ST_st17_fsm_16;
        end
        ap_ST_st17_fsm_16 : 
        begin
            ap_NS_fsm = ap_ST_st18_fsm_17;
        end
        ap_ST_st18_fsm_17 : 
        begin
            ap_NS_fsm = ap_ST_st19_fsm_18;
        end
        ap_ST_st19_fsm_18 : 
        begin
            ap_NS_fsm = ap_ST_st20_fsm_19;
        end
        ap_ST_st20_fsm_19 : 
        begin
            ap_NS_fsm = ap_ST_st21_fsm_20;
        end
        ap_ST_st21_fsm_20 : 
        begin
            ap_NS_fsm = ap_ST_st22_fsm_21;
        end
        ap_ST_st22_fsm_21 : 
        begin
            ap_NS_fsm = ap_ST_st23_fsm_22;
        end
        ap_ST_st23_fsm_22 : 
        begin
            ap_NS_fsm = ap_ST_st24_fsm_23;
        end
        ap_ST_st24_fsm_23 : 
        begin
            ap_NS_fsm = ap_ST_st25_fsm_24;
        end
        ap_ST_st25_fsm_24 : 
        begin
            ap_NS_fsm = ap_ST_st26_fsm_25;
        end
        ap_ST_st26_fsm_25 : 
        begin
            ap_NS_fsm = ap_ST_st27_fsm_26;
        end
        ap_ST_st27_fsm_26 : 
        begin
            ap_NS_fsm = ap_ST_st28_fsm_27;
        end
        ap_ST_st28_fsm_27 : 
        begin
            ap_NS_fsm = ap_ST_st29_fsm_28;
        end
        ap_ST_st29_fsm_28 : 
        begin
            ap_NS_fsm = ap_ST_st30_fsm_29;
        end
        ap_ST_st30_fsm_29 : 
        begin
            if (~(ap_const_logic_0 == grp_fu_504_ap_done)) begin
                ap_NS_fsm = ap_ST_st31_fsm_30;
            end else begin
                ap_NS_fsm = ap_ST_st30_fsm_29;
            end
        end
        ap_ST_st31_fsm_30 : 
        begin
            ap_NS_fsm = ap_ST_st32_fsm_31;
        end
        ap_ST_st32_fsm_31 : 
        begin
            ap_NS_fsm = ap_ST_st33_fsm_32;
        end
        ap_ST_st33_fsm_32 : 
        begin
            ap_NS_fsm = ap_ST_st34_fsm_33;
        end
        ap_ST_st34_fsm_33 : 
        begin
            ap_NS_fsm = ap_ST_st35_fsm_34;
        end
        ap_ST_st35_fsm_34 : 
        begin
            ap_NS_fsm = ap_ST_st36_fsm_35;
        end
        ap_ST_st36_fsm_35 : 
        begin
            ap_NS_fsm = ap_ST_st37_fsm_36;
        end
        ap_ST_st37_fsm_36 : 
        begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st38_fsm_37 : 
        begin
            if (~(ap_const_lv1_0 == exitcond_fu_510_p2)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st39_fsm_38;
            end
        end
        ap_ST_st39_fsm_38 : 
        begin
            if (~(ap_const_logic_0 == grp_feature_extractor_maxpool_fu_190_ap_done)) begin
                ap_NS_fsm = ap_ST_st38_fsm_37;
            end else begin
                ap_NS_fsm = ap_ST_st39_fsm_38;
            end
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign A_address0 = grp_feature_extractor_convolve_fu_177_A_address0;
assign C_d0 = grp_feature_extractor_convolve_fu_177_conv_d0;
assign S_d0 = tmp_15_i_reg_615;
assign W_address0 = grp_feature_extractor_convolve_fu_177_B_address0;

/// ap_sig_bdd_112 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_112 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4]);
end

/// ap_sig_bdd_126 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_126 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5]);
end

/// ap_sig_bdd_142 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_142 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_6]);
end

/// ap_sig_bdd_151 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_151 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_7]);
end

/// ap_sig_bdd_160 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_160 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_19]);
end

/// ap_sig_bdd_169 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_169 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1A]);
end

/// ap_sig_bdd_180 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_180 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1B]);
end

/// ap_sig_bdd_189 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_189 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1C]);
end

/// ap_sig_bdd_198 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_198 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1D]);
end

/// ap_sig_bdd_211 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_211 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_23]);
end

/// ap_sig_bdd_220 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_220 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_25]);
end

/// ap_sig_bdd_285 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_285 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end

/// ap_sig_bdd_310 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_310 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_24]);
end

/// ap_sig_bdd_319 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_319 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_26]);
end

/// ap_sig_bdd_342 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_342 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1E]);
end

/// ap_sig_bdd_352 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_352 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_8]);
end

/// ap_sig_bdd_55 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_55 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end

/// ap_sig_bdd_88 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_88 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end

/// ap_sig_bdd_97 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_97 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3]);
end
assign exitcond1_fu_224_p2 = (j_reg_132 == ap_const_lv3_6? 1'b1: 1'b0);
assign exitcond1_i_fu_270_p2 = (i_i_reg_143 == ap_const_lv5_18? 1'b1: 1'b0);
assign exitcond2_fu_212_p2 = (i_reg_120 == ap_const_lv3_6? 1'b1: 1'b0);
assign exitcond_fu_510_p2 = (k_reg_165 == ap_const_lv3_6? 1'b1: 1'b0);
assign exitcond_i_fu_321_p2 = (j_i_reg_154 == ap_const_lv5_18? 1'b1: 1'b0);
assign feature_address0 = grp_feature_extractor_maxpool_fu_190_output_mat_address0;
assign feature_d0 = grp_feature_extractor_maxpool_fu_190_output_mat_d0;
assign grp_feature_extractor_convolve_fu_177_A_q0 = A_q0;
assign grp_feature_extractor_convolve_fu_177_B_q0 = W_q0;
assign grp_feature_extractor_convolve_fu_177_ap_start = grp_feature_extractor_convolve_fu_177_ap_start_ap_start_reg;
assign grp_feature_extractor_convolve_fu_177_conv_q0 = C_q0;
assign grp_feature_extractor_convolve_fu_177_tmp = i_reg_120;
assign grp_feature_extractor_convolve_fu_177_tmp1 = i_reg_120;
assign grp_feature_extractor_maxpool_fu_190_ap_start = grp_feature_extractor_maxpool_fu_190_ap_start_ap_start_reg;
assign grp_feature_extractor_maxpool_fu_190_input_mat_q0 = S_q0;
assign grp_feature_extractor_maxpool_fu_190_tmp_4 = k_reg_165;
assign grp_feature_extractor_maxpool_fu_190_tmp_41 = k_reg_165;
assign grp_fu_201_ce = ap_const_logic_1;
assign grp_fu_201_p0 = tmp_14_i_reg_610;
assign grp_fu_207_ce = ap_const_logic_1;
assign grp_fu_207_p0 = ap_const_lv64_0;
assign grp_fu_207_p1 = tmp_11_i_reg_579;
assign grp_fu_504_ce = ap_const_logic_1;
assign grp_fu_504_p0 = ap_const_lv32_1;
assign grp_fu_504_p1 = (ap_const_lv32_1 + p_Val2_s_reg_600);
assign i_1_fu_218_p2 = (i_reg_120 + ap_const_lv3_1);
assign i_2_fu_276_p2 = (i_i_reg_143 + ap_const_lv5_1);
assign isNeg_fu_408_p3 = sh_assign_fu_402_p2[ap_const_lv32_B];
assign j_1_fu_230_p2 = (j_reg_132 + ap_const_lv3_1);
assign j_2_fu_327_p2 = (j_i_reg_154 + ap_const_lv5_1);
assign k_1_fu_516_p2 = (k_reg_165 + ap_const_lv3_1);
assign loc_V_1_fu_382_p1 = p_Val2_1_fu_361_p1[51:0];
assign loc_V_fu_372_p4 = {{p_Val2_1_fu_361_p1[ap_const_lv32_3E : ap_const_lv32_34]}};
assign p_Result_1_fu_386_p3 = {{ap_const_lv1_1}, {loc_V_1_fu_382_p1}};
assign p_Val2_1_fu_361_p1 = x_assign_reg_584;
assign p_Val2_4_fu_480_p3 = ((isNeg_fu_408_p3[0:0]===1'b1)? tmp_7_fu_466_p1: tmp_8_fu_470_p4);
assign p_Val2_i_i_i_fu_488_p2 = (ap_const_lv32_0 - p_Val2_4_reg_594);
assign p_Val2_s_fu_493_p3 = ((p_Result_s_reg_589[0:0]===1'b1)? p_Val2_i_i_i_fu_488_p2: p_Val2_4_reg_594);
assign p_addr1_fu_286_p2 = ($signed(p_addr_cast_reg_538) + $signed(tmp_i_trn_cast_fu_282_p1));
assign p_addr2_fu_315_p2 = ($signed(p_shl2_fu_299_p1) - $signed(p_shl3_fu_311_p1));
assign p_addr3_fu_337_p2 = ($signed(tmp_i_trn_fu_333_p1) + $signed(p_addr2_reg_551));
assign p_addr_cast_fu_266_p1 = $signed(p_addr_fu_260_p2);
assign p_addr_fu_260_p2 = (p_shl_cast_fu_244_p1 - p_shl1_cast_fu_256_p1);
assign p_shl1_cast_fu_256_p1 = tmp_1_fu_248_p3;
assign p_shl2_fu_299_p1 = $signed(tmp_2_fu_291_p3);
assign p_shl3_fu_311_p1 = $signed(tmp_3_fu_303_p3);
assign p_shl_cast_fu_244_p1 = tmp_fu_236_p3;
assign sh_assign_1_fu_426_p3 = ((isNeg_fu_408_p3[0:0]===1'b1)? tmp_i_i_i_cast_fu_422_p1: sh_assign_fu_402_p2);
assign sh_assign_2_i_cast_fu_434_p1 = $signed(sh_assign_1_fu_426_p3);
assign sh_assign_fu_402_p2 = ($signed(ap_const_lv12_C01) + $signed(tmp_i_i_i_i_cast2_fu_398_p1));
assign tmp_10_fu_458_p3 = tmp_10_i_i_i_fu_446_p2[ap_const_lv32_34];
assign tmp_10_i_i_i_fu_446_p2 = p_Result_1_fu_386_p3 >> tmp_9_i_i_i_cast_fu_442_p1;
assign tmp_11_i_fu_204_p0 = tmp_12_neg_i_fu_350_p2;
assign tmp_12_i_i_i_fu_452_p2 = tmp_i_i_i_fu_394_p1 << tmp_9_i_i_i_fu_438_p1;
assign tmp_12_neg_i_fu_350_p2 = (tmp_12_to_int_i_fu_347_p1 ^ ap_const_lv32_80000000);
assign tmp_12_to_int_i_fu_347_p1 = C_load_reg_574;
assign tmp_1_fu_248_p3 = {{j_reg_132}, {ap_const_lv3_0}};
assign tmp_2_fu_291_p3 = {{p_addr1_fu_286_p2}, {ap_const_lv5_0}};
assign tmp_3_fu_303_p3 = {{p_addr1_fu_286_p2}, {ap_const_lv3_0}};
assign tmp_5_fu_342_p1 = $unsigned(p_addr3_fu_337_p2);
assign tmp_7_fu_466_p1 = tmp_10_fu_458_p3;
assign tmp_8_fu_470_p4 = {{tmp_12_i_i_i_fu_452_p2[ap_const_lv32_53 : ap_const_lv32_34]}};
assign tmp_9_i_i_i_cast_fu_442_p1 = $unsigned(sh_assign_2_i_cast_fu_434_p1);
assign tmp_9_i_i_i_fu_438_p1 = $unsigned(sh_assign_2_i_cast_fu_434_p1);
assign tmp_fu_236_p3 = {{j_reg_132}, {ap_const_lv5_0}};
assign tmp_i_i_i_14_fu_416_p2 = (ap_const_lv11_3FF - loc_V_fu_372_p4);
assign tmp_i_i_i_cast_fu_422_p1 = $signed(tmp_i_i_i_14_fu_416_p2);
assign tmp_i_i_i_fu_394_p1 = p_Result_1_fu_386_p3;
assign tmp_i_i_i_i_cast2_fu_398_p1 = loc_V_fu_372_p4;
assign tmp_i_trn_cast_fu_282_p1 = i_i_reg_143;
assign tmp_i_trn_fu_333_p1 = j_i_reg_154;
always @ (posedge ap_clk)
begin
    p_addr_cast_reg_538[2:0] <= 3'b000;
    p_addr2_reg_551[2:0] <= 3'b000;
    tmp_5_reg_564[63:32] <= 32'b00000000000000000000000000000000;
end



endmodule //feature_extractor

