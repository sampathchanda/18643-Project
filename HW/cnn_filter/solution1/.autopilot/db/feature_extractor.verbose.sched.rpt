

================================================================
== Vivado HLS Report for 'feature_extractor'
================================================================
* Date:           Mon Nov 21 06:15:02 2016

* Version:        2015.2 (Build 1266856 on Fri Jun 26 16:57:37 PM 2015)
* Project:        cnn_filter
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      8.41|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +---------+---------+---------+---------+---------+
    |      Latency      |      Interval     | Pipeline|
    |   min   |   max   |   min   |   max   |   Type  |
    +---------+---------+---------+---------+---------+
    |  1761897|  1761897|  1761898|  1761898|   none  |
    +---------+---------+---------+---------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +--------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                    |      Latency      | Iteration|  Initiation Interval  | Trip |          |
        |      Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +--------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- Convolve          |  1600728|  1600728|    266788|          -|          -|     6|    no    |
        |- Threshold         |   128172|   128172|     21362|          -|          -|     6|    no    |
        | + Threshold.1      |    21360|    21360|       890|          -|          -|    24|    no    |
        |  ++ Threshold.1.1  |      888|      888|        37|          -|          -|    24|    no    |
        |- Pool              |    32994|    32994|      5499|          -|          -|     6|    no    |
        +--------------------+---------+---------+----------+-----------+-----------+------+----------+



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-------+--------+-------+
|       Name      | BRAM_18K| DSP48E|   FF   |  LUT  |
+-----------------+---------+-------+--------+-------+
|Expression       |        -|      -|       -|      -|
|FIFO             |        -|      -|       -|      -|
|Instance         |        -|      -|       -|      -|
|Memory           |        -|      -|       -|      -|
|Multiplexer      |        -|      -|       -|      -|
|Register         |        -|      -|       -|      -|
+-----------------+---------+-------+--------+-------+
|Total            |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+
|Available        |      280|    220|  106400|  53200|
+-----------------+---------+-------+--------+-------+
|Utilization (%)  |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+

+ Detail: 
    * Instance: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Expression: 
    N/A

    * Multiplexer: 
    N/A

    * Register: 
    N/A



================================================================
== Interface
================================================================
* Summary: 
N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 39
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (!exitcond2)
	4  / (exitcond2)
3 --> 
	2  / true
4 --> 
	38  / (exitcond1)
	5  / (!exitcond1)
5 --> 
	4  / (exitcond1_i)
	6  / (!exitcond1_i)
6 --> 
	5  / (exitcond_i)
	7  / (!exitcond_i)
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	20  / true
20 --> 
	21  / true
21 --> 
	22  / true
22 --> 
	23  / true
23 --> 
	24  / true
24 --> 
	25  / true
25 --> 
	26  / true
26 --> 
	27  / true
27 --> 
	28  / true
28 --> 
	29  / true
29 --> 
	30  / true
30 --> 
	31  / true
31 --> 
	32  / true
32 --> 
	33  / true
33 --> 
	34  / true
34 --> 
	35  / true
35 --> 
	36  / true
36 --> 
	37  / true
37 --> 
	6  / true
38 --> 
	39  / (!exitcond)
39 --> 
	38  / true
* FSM state operations: 

 <State 1>: 1.57ns
ST_1: stg_40 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecBitsMap([784 x i32]* %A) nounwind, !map !7

ST_1: stg_41 [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecBitsMap([150 x float]* %W) nounwind, !map !13

ST_1: stg_42 [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_SpecBitsMap([864 x i32]* %feature) nounwind, !map !20

ST_1: stg_43 [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_SpecTopModule([18 x i8]* @feature_extractor_str) nounwind

ST_1: C [1/1] 0.00ns
:4  %C = alloca [3456 x float], align 4

ST_1: S [1/1] 0.00ns
:5  %S = alloca [3456 x float], align 4

ST_1: stg_46 [1/1] 1.57ns
:6  br label %1


 <State 2>: 3.19ns
ST_2: i [1/1] 0.00ns
:0  %i = phi i3 [ 0, %0 ], [ %i_1, %2 ]

ST_2: exitcond2 [1/1] 1.62ns
:1  %exitcond2 = icmp eq i3 %i, -2

ST_2: empty [1/1] 0.00ns
:2  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 6, i64 6, i64 6) nounwind

ST_2: i_1 [1/1] 0.80ns
:3  %i_1 = add i3 %i, 1

ST_2: stg_51 [1/1] 1.57ns
:4  br i1 %exitcond2, label %.preheader3, label %2

ST_2: stg_52 [2/2] 1.72ns
:1  call fastcc void @feature_extractor_convolve([784 x i32]* nocapture %A, [150 x float]* nocapture %W, i3 %i, [3456 x float]* nocapture %C, i3 %i) nounwind


 <State 3>: 0.00ns
ST_3: stg_53 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecLoopName([9 x i8]* @p_str) nounwind

ST_3: stg_54 [1/2] 0.00ns
:1  call fastcc void @feature_extractor_convolve([784 x i32]* nocapture %A, [150 x float]* nocapture %W, i3 %i, [3456 x float]* nocapture %C, i3 %i) nounwind

ST_3: stg_55 [1/1] 0.00ns
:2  br label %1


 <State 4>: 3.19ns
ST_4: j [1/1] 0.00ns
.preheader3:0  %j = phi i3 [ 0, %1 ], [ %j_1, %.loopexit ]

ST_4: exitcond1 [1/1] 1.62ns
.preheader3:1  %exitcond1 = icmp eq i3 %j, -2

ST_4: empty_11 [1/1] 0.00ns
.preheader3:2  %empty_11 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 6, i64 6, i64 6) nounwind

ST_4: j_1 [1/1] 0.80ns
.preheader3:3  %j_1 = add i3 %j, 1

ST_4: stg_60 [1/1] 1.57ns
.preheader3:4  br i1 %exitcond1, label %.preheader, label %3

ST_4: stg_61 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecLoopName([10 x i8]* @p_str1) nounwind

ST_4: tmp [1/1] 0.00ns
:1  %tmp = call i8 @_ssdm_op_BitConcatenate.i8.i3.i5(i3 %j, i5 0)

ST_4: p_shl_cast [1/1] 0.00ns
:2  %p_shl_cast = zext i8 %tmp to i9

ST_4: tmp_1 [1/1] 0.00ns
:3  %tmp_1 = call i6 @_ssdm_op_BitConcatenate.i6.i3.i3(i3 %j, i3 0)

ST_4: p_shl1_cast [1/1] 0.00ns
:4  %p_shl1_cast = zext i6 %tmp_1 to i9

ST_4: p_addr [1/1] 1.72ns
:5  %p_addr = sub i9 %p_shl_cast, %p_shl1_cast

ST_4: p_addr_cast [1/1] 0.00ns
:6  %p_addr_cast = sext i9 %p_addr to i10

ST_4: stg_68 [1/1] 1.57ns
:7  br label %.loopexit


 <State 5>: 3.80ns
ST_5: i_i [1/1] 0.00ns
.loopexit:0  %i_i = phi i5 [ 0, %3 ], [ %i_2, %.preheader.i ]

ST_5: exitcond1_i [1/1] 1.91ns
.loopexit:1  %exitcond1_i = icmp eq i5 %i_i, -8

ST_5: empty_12 [1/1] 0.00ns
.loopexit:2  %empty_12 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 24, i64 24, i64 24) nounwind

ST_5: i_2 [1/1] 1.72ns
.loopexit:3  %i_2 = add i5 %i_i, 1

ST_5: stg_73 [1/1] 0.00ns
.loopexit:4  br i1 %exitcond1_i, label %.preheader3, label %.preheader.i.preheader

ST_5: tmp_i_trn_cast [1/1] 0.00ns
.preheader.i.preheader:0  %tmp_i_trn_cast = zext i5 %i_i to i10

ST_5: p_addr1 [1/1] 1.84ns
.preheader.i.preheader:1  %p_addr1 = add i10 %p_addr_cast, %tmp_i_trn_cast

ST_5: tmp_2 [1/1] 0.00ns
.preheader.i.preheader:2  %tmp_2 = call i15 @_ssdm_op_BitConcatenate.i15.i10.i5(i10 %p_addr1, i5 0)

ST_5: p_shl2 [1/1] 0.00ns
.preheader.i.preheader:3  %p_shl2 = sext i15 %tmp_2 to i32

ST_5: tmp_3 [1/1] 0.00ns
.preheader.i.preheader:4  %tmp_3 = call i13 @_ssdm_op_BitConcatenate.i13.i10.i3(i10 %p_addr1, i3 0)

ST_5: p_shl3 [1/1] 0.00ns
.preheader.i.preheader:5  %p_shl3 = sext i13 %tmp_3 to i32

ST_5: p_addr2 [1/1] 1.96ns
.preheader.i.preheader:6  %p_addr2 = sub i32 %p_shl2, %p_shl3

ST_5: stg_81 [1/1] 1.57ns
.preheader.i.preheader:7  br label %.preheader.i


 <State 6>: 4.67ns
ST_6: j_i [1/1] 0.00ns
.preheader.i:0  %j_i = phi i5 [ %j_2, %_ifconv.i ], [ 0, %.preheader.i.preheader ]

ST_6: exitcond_i [1/1] 1.91ns
.preheader.i:1  %exitcond_i = icmp eq i5 %j_i, -8

ST_6: empty_13 [1/1] 0.00ns
.preheader.i:2  %empty_13 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 24, i64 24, i64 24) nounwind

ST_6: j_2 [1/1] 1.72ns
.preheader.i:3  %j_2 = add i5 %j_i, 1

ST_6: stg_86 [1/1] 0.00ns
.preheader.i:4  br i1 %exitcond_i, label %.loopexit, label %_ifconv.i

ST_6: tmp_i_trn [1/1] 0.00ns
_ifconv.i:0  %tmp_i_trn = zext i5 %j_i to i32

ST_6: p_addr3 [1/1] 1.96ns
_ifconv.i:1  %p_addr3 = add i32 %tmp_i_trn, %p_addr2

ST_6: tmp_5 [1/1] 0.00ns
_ifconv.i:2  %tmp_5 = zext i32 %p_addr3 to i64

ST_6: C_addr [1/1] 0.00ns
_ifconv.i:3  %C_addr = getelementptr [3456 x float]* %C, i64 0, i64 %tmp_5

ST_6: C_load [2/2] 2.71ns
_ifconv.i:4  %C_load = load float* %C_addr, align 4


 <State 7>: 2.71ns
ST_7: C_load [1/2] 2.71ns
_ifconv.i:4  %C_load = load float* %C_addr, align 4


 <State 8>: 6.92ns
ST_8: tmp_12_to_int_i [1/1] 0.00ns
_ifconv.i:5  %tmp_12_to_int_i = bitcast float %C_load to i32

ST_8: tmp_12_neg_i [1/1] 1.37ns
_ifconv.i:6  %tmp_12_neg_i = xor i32 %tmp_12_to_int_i, -2147483648

ST_8: tmp_10_i [1/1] 0.00ns
_ifconv.i:7  %tmp_10_i = bitcast i32 %tmp_12_neg_i to float

ST_8: tmp_11_i [1/1] 5.55ns
_ifconv.i:8  %tmp_11_i = fpext float %tmp_10_i to double


 <State 9>: 7.32ns
ST_9: x_assign [18/18] 7.32ns
_ifconv.i:9  %x_assign = call double @llvm.exp.f64(double %tmp_11_i) nounwind


 <State 10>: 7.32ns
ST_10: x_assign [17/18] 7.32ns
_ifconv.i:9  %x_assign = call double @llvm.exp.f64(double %tmp_11_i) nounwind


 <State 11>: 7.32ns
ST_11: x_assign [16/18] 7.32ns
_ifconv.i:9  %x_assign = call double @llvm.exp.f64(double %tmp_11_i) nounwind


 <State 12>: 7.32ns
ST_12: x_assign [15/18] 7.32ns
_ifconv.i:9  %x_assign = call double @llvm.exp.f64(double %tmp_11_i) nounwind


 <State 13>: 7.32ns
ST_13: x_assign [14/18] 7.32ns
_ifconv.i:9  %x_assign = call double @llvm.exp.f64(double %tmp_11_i) nounwind


 <State 14>: 7.32ns
ST_14: x_assign [13/18] 7.32ns
_ifconv.i:9  %x_assign = call double @llvm.exp.f64(double %tmp_11_i) nounwind


 <State 15>: 7.32ns
ST_15: x_assign [12/18] 7.32ns
_ifconv.i:9  %x_assign = call double @llvm.exp.f64(double %tmp_11_i) nounwind


 <State 16>: 7.32ns
ST_16: x_assign [11/18] 7.32ns
_ifconv.i:9  %x_assign = call double @llvm.exp.f64(double %tmp_11_i) nounwind


 <State 17>: 7.32ns
ST_17: x_assign [10/18] 7.32ns
_ifconv.i:9  %x_assign = call double @llvm.exp.f64(double %tmp_11_i) nounwind


 <State 18>: 7.32ns
ST_18: x_assign [9/18] 7.32ns
_ifconv.i:9  %x_assign = call double @llvm.exp.f64(double %tmp_11_i) nounwind


 <State 19>: 7.32ns
ST_19: x_assign [8/18] 7.32ns
_ifconv.i:9  %x_assign = call double @llvm.exp.f64(double %tmp_11_i) nounwind


 <State 20>: 7.32ns
ST_20: x_assign [7/18] 7.32ns
_ifconv.i:9  %x_assign = call double @llvm.exp.f64(double %tmp_11_i) nounwind


 <State 21>: 7.32ns
ST_21: x_assign [6/18] 7.32ns
_ifconv.i:9  %x_assign = call double @llvm.exp.f64(double %tmp_11_i) nounwind


 <State 22>: 7.32ns
ST_22: x_assign [5/18] 7.32ns
_ifconv.i:9  %x_assign = call double @llvm.exp.f64(double %tmp_11_i) nounwind


 <State 23>: 7.32ns
ST_23: x_assign [4/18] 7.32ns
_ifconv.i:9  %x_assign = call double @llvm.exp.f64(double %tmp_11_i) nounwind


 <State 24>: 7.32ns
ST_24: x_assign [3/18] 7.32ns
_ifconv.i:9  %x_assign = call double @llvm.exp.f64(double %tmp_11_i) nounwind


 <State 25>: 7.32ns
ST_25: x_assign [2/18] 7.32ns
_ifconv.i:9  %x_assign = call double @llvm.exp.f64(double %tmp_11_i) nounwind


 <State 26>: 7.32ns
ST_26: x_assign [1/18] 7.32ns
_ifconv.i:9  %x_assign = call double @llvm.exp.f64(double %tmp_11_i) nounwind


 <State 27>: 8.14ns
ST_27: p_Val2_1 [1/1] 0.00ns
_ifconv.i:10  %p_Val2_1 = bitcast double %x_assign to i64

ST_27: p_Result_s [1/1] 0.00ns
_ifconv.i:11  %p_Result_s = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %p_Val2_1, i32 63)

ST_27: loc_V [1/1] 0.00ns
_ifconv.i:12  %loc_V = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %p_Val2_1, i32 52, i32 62) nounwind

ST_27: loc_V_1 [1/1] 0.00ns
_ifconv.i:13  %loc_V_1 = trunc i64 %p_Val2_1 to i52

ST_27: p_Result_1 [1/1] 0.00ns
_ifconv.i:14  %p_Result_1 = call i53 @_ssdm_op_BitConcatenate.i53.i1.i52(i1 true, i52 %loc_V_1) nounwind

ST_27: tmp_i_i_i [1/1] 0.00ns
_ifconv.i:15  %tmp_i_i_i = zext i53 %p_Result_1 to i136

ST_27: tmp_i_i_i_i_cast2 [1/1] 0.00ns
_ifconv.i:16  %tmp_i_i_i_i_cast2 = zext i11 %loc_V to i12

ST_27: sh_assign [1/1] 1.84ns
_ifconv.i:17  %sh_assign = add i12 -1023, %tmp_i_i_i_i_cast2

ST_27: isNeg [1/1] 0.00ns
_ifconv.i:18  %isNeg = call i1 @_ssdm_op_BitSelect.i1.i12.i32(i12 %sh_assign, i32 11)

ST_27: tmp_i_i_i_14 [1/1] 1.84ns
_ifconv.i:19  %tmp_i_i_i_14 = sub i11 1023, %loc_V

ST_27: tmp_i_i_i_cast [1/1] 0.00ns
_ifconv.i:20  %tmp_i_i_i_cast = sext i11 %tmp_i_i_i_14 to i12

ST_27: sh_assign_1 [1/1] 1.37ns
_ifconv.i:21  %sh_assign_1 = select i1 %isNeg, i12 %tmp_i_i_i_cast, i12 %sh_assign

ST_27: sh_assign_2_i_cast [1/1] 0.00ns
_ifconv.i:22  %sh_assign_2_i_cast = sext i12 %sh_assign_1 to i32

ST_27: tmp_9_i_i_i [1/1] 0.00ns
_ifconv.i:23  %tmp_9_i_i_i = zext i32 %sh_assign_2_i_cast to i136

ST_27: tmp_9_i_i_i_cast [1/1] 0.00ns
_ifconv.i:24  %tmp_9_i_i_i_cast = zext i32 %sh_assign_2_i_cast to i53

ST_27: tmp_10_i_i_i [1/1] 3.56ns
_ifconv.i:25  %tmp_10_i_i_i = lshr i53 %p_Result_1, %tmp_9_i_i_i_cast

ST_27: tmp_12_i_i_i [1/1] 3.56ns
_ifconv.i:26  %tmp_12_i_i_i = shl i136 %tmp_i_i_i, %tmp_9_i_i_i

ST_27: tmp_10 [1/1] 0.00ns
_ifconv.i:27  %tmp_10 = call i1 @_ssdm_op_BitSelect.i1.i53.i32(i53 %tmp_10_i_i_i, i32 52)

ST_27: tmp_7 [1/1] 0.00ns
_ifconv.i:28  %tmp_7 = zext i1 %tmp_10 to i32

ST_27: tmp_8 [1/1] 0.00ns
_ifconv.i:29  %tmp_8 = call i32 @_ssdm_op_PartSelect.i32.i136.i32.i32(i136 %tmp_12_i_i_i, i32 52, i32 83)

ST_27: p_Val2_4 [1/1] 1.37ns
_ifconv.i:30  %p_Val2_4 = select i1 %isNeg, i32 %tmp_7, i32 %tmp_8


 <State 28>: 3.81ns
ST_28: p_Val2_i_i_i [1/1] 2.44ns
_ifconv.i:31  %p_Val2_i_i_i = sub i32 0, %p_Val2_4

ST_28: p_Val2_s [1/1] 1.37ns
_ifconv.i:32  %p_Val2_s = select i1 %p_Result_s, i32 %p_Val2_i_i_i, i32 %p_Val2_4


 <State 29>: 7.85ns
ST_29: tmp_13_i [1/1] 2.44ns
_ifconv.i:33  %tmp_13_i = add nsw i32 1, %p_Val2_s

ST_29: tmp_14_i [7/7] 5.41ns
_ifconv.i:34  %tmp_14_i = sdiv i32 1, %tmp_13_i


 <State 30>: 5.41ns
ST_30: tmp_14_i [1/7] 5.41ns
_ifconv.i:34  %tmp_14_i = sdiv i32 1, %tmp_13_i


 <State 31>: 6.41ns
ST_31: tmp_15_i [6/6] 6.41ns
_ifconv.i:35  %tmp_15_i = sitofp i32 %tmp_14_i to float


 <State 32>: 6.41ns
ST_32: tmp_15_i [5/6] 6.41ns
_ifconv.i:35  %tmp_15_i = sitofp i32 %tmp_14_i to float


 <State 33>: 6.41ns
ST_33: tmp_15_i [4/6] 6.41ns
_ifconv.i:35  %tmp_15_i = sitofp i32 %tmp_14_i to float


 <State 34>: 6.41ns
ST_34: tmp_15_i [3/6] 6.41ns
_ifconv.i:35  %tmp_15_i = sitofp i32 %tmp_14_i to float


 <State 35>: 6.41ns
ST_35: tmp_15_i [2/6] 6.41ns
_ifconv.i:35  %tmp_15_i = sitofp i32 %tmp_14_i to float


 <State 36>: 6.41ns
ST_36: tmp_15_i [1/6] 6.41ns
_ifconv.i:35  %tmp_15_i = sitofp i32 %tmp_14_i to float


 <State 37>: 2.71ns
ST_37: S_addr [1/1] 0.00ns
_ifconv.i:36  %S_addr = getelementptr [3456 x float]* %S, i64 0, i64 %tmp_5

ST_37: stg_148 [1/1] 2.71ns
_ifconv.i:37  store float %tmp_15_i, float* %S_addr, align 4

ST_37: stg_149 [1/1] 0.00ns
_ifconv.i:38  br label %.preheader.i


 <State 38>: 1.72ns
ST_38: k [1/1] 0.00ns
.preheader:0  %k = phi i3 [ %k_1, %4 ], [ 0, %.preheader3 ]

ST_38: exitcond [1/1] 1.62ns
.preheader:1  %exitcond = icmp eq i3 %k, -2

ST_38: empty_15 [1/1] 0.00ns
.preheader:2  %empty_15 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 6, i64 6, i64 6) nounwind

ST_38: k_1 [1/1] 0.80ns
.preheader:3  %k_1 = add i3 %k, 1

ST_38: stg_154 [1/1] 0.00ns
.preheader:4  br i1 %exitcond, label %5, label %4

ST_38: stg_155 [2/2] 1.72ns
:1  call fastcc void @feature_extractor_maxpool([3456 x float]* nocapture %S, i3 %k, [864 x i32]* nocapture %feature, i3 %k) nounwind

ST_38: stg_156 [1/1] 0.00ns
:0  ret void


 <State 39>: 0.00ns
ST_39: stg_157 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecLoopName([5 x i8]* @p_str2) nounwind

ST_39: stg_158 [1/2] 0.00ns
:1  call fastcc void @feature_extractor_maxpool([3456 x float]* nocapture %S, i3 %k, [864 x i32]* nocapture %feature, i3 %k) nounwind

ST_39: stg_159 [1/1] 0.00ns
:2  br label %.preheader



============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
