#include "hls_design_meta.h"
const Port_Property HLS_Design_Meta::port_props[]={
	Port_Property("image_V_TDATA", 8, hls_in, 0, "axis", "in_data", 1),
	Port_Property("weights_Addr_A", 32, hls_out, 1, "bram", "mem_address", 1),
	Port_Property("weights_EN_A", 1, hls_out, 1, "bram", "mem_ce", 1),
	Port_Property("weights_Din_A", 32, hls_out, 1, "bram", "mem_din", 1),
	Port_Property("weights_Dout_A", 32, hls_in, 1, "bram", "mem_dout", 1),
	Port_Property("weights_WEN_A", 4, hls_out, 1, "bram", "mem_we", 1),
	Port_Property("weights_Clk_A", 1, hls_out, 1, "bram", "mem_clk", 1),
	Port_Property("ap_clk", 1, hls_in, -1, "", "", 1),
	Port_Property("weights_Rst_A", 1, hls_out, 1, "bram", "mem_rst", 1),
	Port_Property("ap_rst_n", 1, hls_in, -1, "", "", 1),
	Port_Property("weights_Addr_B", 32, hls_out, 1, "bram", "mem_address", 1),
	Port_Property("weights_EN_B", 1, hls_out, 1, "bram", "mem_ce", 1),
	Port_Property("weights_Din_B", 32, hls_out, 1, "bram", "mem_din", 1),
	Port_Property("weights_Dout_B", 32, hls_in, 1, "bram", "mem_dout", 1),
	Port_Property("weights_WEN_B", 4, hls_out, 1, "bram", "mem_we", 1),
	Port_Property("weights_Clk_B", 1, hls_out, 1, "bram", "mem_clk", 1),
	Port_Property("weights_Rst_B", 1, hls_out, 1, "bram", "mem_rst", 1),
	Port_Property("conv_output_V_TDATA", 8, hls_out, 2, "axis", "out_data", 1),
	Port_Property("done", 1, hls_out, 3, "ap_none", "out_data", 1),
	Port_Property("image_V_TVALID", 1, hls_in, 0, "axis", "in_vld", 1),
	Port_Property("image_V_TREADY", 1, hls_out, 0, "axis", "in_acc", 1),
	Port_Property("conv_output_V_TVALID", 1, hls_out, 2, "axis", "out_vld", 1),
	Port_Property("conv_output_V_TREADY", 1, hls_in, 2, "axis", "out_acc", 1),
	Port_Property("ap_done", 1, hls_out, -1, "", "", 1),
	Port_Property("ap_start", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_idle", 1, hls_out, -1, "", "", 1),
	Port_Property("ap_ready", 1, hls_out, -1, "", "", 1),
};
const char* HLS_Design_Meta::dut_name = "convolve";
