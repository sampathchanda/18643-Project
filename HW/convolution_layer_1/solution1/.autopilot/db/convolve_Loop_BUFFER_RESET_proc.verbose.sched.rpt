

================================================================
== Vivado HLS Report for 'convolve_Loop_BUFFER_RESET_proc'
================================================================
* Date:           Sat Nov 26 05:43:31 2016

* Version:        2015.2 (Build 1266856 on Fri Jun 26 16:57:37 PM 2015)
* Project:        convolution_layer_1
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      8.61|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +--------+--------+--------+--------+---------+
    |     Latency     |     Interval    | Pipeline|
    |   min  |   max  |   min  |   max  |   Type  |
    +--------+--------+--------+--------+---------+
    |  299607|  300391|  299607|  300391|   none  |
    +--------+--------+--------+--------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-----------------+--------+--------+-----------+-----------+-----------+------+----------+
        |                 |     Latency     | Iteration |  Initiation Interval  | Trip |          |
        |    Loop Name    |   min  |   max  |  Latency  |  achieved |   target  | Count| Pipelined|
        +-----------------+--------+--------+-----------+-----------+-----------+------+----------+
        |- BUFFER_RESET   |     117|     117|          1|          1|          1|   117|    yes   |
        |- SCAN_LINE      |  299488|  300272| 382 ~ 383 |          -|          -|   784|    no    |
        | + BUFFER_SHIFT  |     234|     234|          2|          2|          2|   117|    yes   |
        | + SCAN_LINE.2   |     136|     136|         17|          5|          1|    25|    yes   |
        +-----------------+--------+--------+-----------+-----------+-----------+------+----------+



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-------+--------+-------+
|       Name      | BRAM_18K| DSP48E|   FF   |  LUT  |
+-----------------+---------+-------+--------+-------+
|Expression       |        -|      -|       -|      -|
|FIFO             |        -|      -|       -|      -|
|Instance         |        -|      -|       -|      -|
|Memory           |        -|      -|       -|      -|
|Multiplexer      |        -|      -|       -|      -|
|Register         |        -|      -|       -|      -|
+-----------------+---------+-------+--------+-------+
|Total            |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+
|Available        |      280|    220|  106400|  53200|
+-----------------+---------+-------+--------+-------+
|Utilization (%)  |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+

+ Detail: 
    * Instance: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Expression: 
    N/A

    * Multiplexer: 
    N/A

    * Register: 
    N/A



================================================================
== Interface
================================================================
* Summary: 
N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 1
  * Pipeline-1: initiation interval (II) = 2, depth = 2
  * Pipeline-2: initiation interval (II) = 5, depth = 17


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 32
* Pipeline: 3
  Pipeline-0: II = 1, D = 1, States = { 2 }
  Pipeline-1: II = 2, D = 2, States = { 4 5 }
  Pipeline-2: II = 5, D = 17, States = { 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (exitcond7_i_i)
	2  / (!exitcond7_i_i)
3 --> 
	4  / (!exitcond6)
4 --> 
	6  / (exitcond5)
	5  / (!exitcond5)
5 --> 
	4  / true
6 --> 
	23  / (exitcond_flatten)
	7  / (!exitcond_flatten)
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	20  / true
20 --> 
	21  / true
21 --> 
	22  / true
22 --> 
	6  / true
23 --> 
	24  / true
24 --> 
	25  / true
25 --> 
	26  / true
26 --> 
	27  / true
27 --> 
	28  / true
28 --> 
	29  / true
29 --> 
	30  / true
30 --> 
	31  / (or_cond)
	32  / (!or_cond)
31 --> 
	32  / true
32 --> 
	3  / true
* FSM state operations: 

 <State 1>: 1.57ns
ST_1: stg_33 [1/1] 0.00ns
newFuncRoot:0  call void (...)* @_ssdm_op_SpecInterface([25 x float]* %weights, [10 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1)

ST_1: stg_34 [1/1] 0.00ns
newFuncRoot:1  call void (...)* @_ssdm_op_SpecInterface(i8* %image_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str25, [1 x i8]* @p_str25, [8 x i8]* @ap_fifo_str)

ST_1: stg_35 [1/1] 0.00ns
newFuncRoot:2  call void (...)* @_ssdm_op_SpecInterface(i8* %conv_output_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str26, [1 x i8]* @p_str26, [8 x i8]* @ap_fifo_str)

ST_1: linebuff [1/1] 0.00ns
newFuncRoot:3  %linebuff = alloca [117 x i8], align 16

ST_1: stg_37 [1/1] 1.57ns
newFuncRoot:4  br label %0


 <State 2>: 3.54ns
ST_2: pos_0_i_i [1/1] 0.00ns
:0  %pos_0_i_i = phi i7 [ 0, %newFuncRoot ], [ %pos, %1 ]

ST_2: exitcond7_i_i [1/1] 1.97ns
:1  %exitcond7_i_i = icmp eq i7 %pos_0_i_i, -11

ST_2: pos [1/1] 1.72ns
:2  %pos = add i7 %pos_0_i_i, 1

ST_2: stg_41 [1/1] 1.57ns
:3  br i1 %exitcond7_i_i, label %.preheader9, label %1

ST_2: empty [1/1] 0.00ns
:0  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 117, i64 117, i64 117)

ST_2: stg_43 [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecLoopName([13 x i8]* @p_str3) nounwind

ST_2: tmp [1/1] 0.00ns
:2  %tmp = call i32 (...)* @_ssdm_op_SpecRegionBegin([13 x i8]* @p_str3)

ST_2: stg_45 [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind

ST_2: tmp_i [1/1] 0.00ns
:4  %tmp_i = zext i7 %pos_0_i_i to i64

ST_2: linebuff_addr [1/1] 0.00ns
:5  %linebuff_addr = getelementptr inbounds [117 x i8]* %linebuff, i64 0, i64 %tmp_i

ST_2: stg_48 [1/1] 2.39ns
:6  store i8 0, i8* %linebuff_addr, align 1

ST_2: empty_12 [1/1] 0.00ns
:7  %empty_12 = call i32 (...)* @_ssdm_op_SpecRegionEnd([13 x i8]* @p_str3, i32 %tmp)

ST_2: stg_50 [1/1] 0.00ns
:8  br label %0


 <State 3>: 6.33ns
ST_3: t [1/1] 0.00ns
.preheader9:0  %t = phi i32 [ %p_t, %._crit_edge10 ], [ 0, %0 ]

ST_3: pixels_read [1/1] 0.00ns
.preheader9:1  %pixels_read = phi i10 [ %pixels_read_1, %._crit_edge10 ], [ 0, %0 ]

ST_3: exitcond6 [1/1] 2.07ns
.preheader9:2  %exitcond6 = icmp eq i10 %pixels_read, -240

ST_3: pixels_read_1 [1/1] 1.84ns
.preheader9:3  %pixels_read_1 = add i10 %pixels_read, 1

ST_3: stg_55 [1/1] 0.00ns
.preheader9:4  br i1 %exitcond6, label %.exitStub, label %4

ST_3: pixels_read_cast9 [1/1] 0.00ns
:0  %pixels_read_cast9 = zext i10 %pixels_read to i32

ST_3: empty_16 [1/1] 0.00ns
:1  %empty_16 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 784, i64 784, i64 784)

ST_3: stg_58 [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_SpecLoopName([10 x i8]* @p_str4) nounwind

ST_3: tmp_2 [1/1] 0.00ns
:3  %tmp_2 = call i32 (...)* @_ssdm_op_SpecRegionBegin([10 x i8]* @p_str4)

ST_3: read [1/1] 4.38ns
:4  %read = call i8 @_ssdm_op_Read.ap_fifo.volatile.i8P(i8* %image_V)

ST_3: m [1/1] 2.44ns
:5  %m = sub nsw i32 %pixels_read_cast9, %t

ST_3: tmp_4 [1/1] 2.52ns
:6  %tmp_4 = icmp sgt i32 %m, 27

ST_3: t_1 [1/1] 2.44ns
:7  %t_1 = add nsw i32 %t, 28

ST_3: p_t [1/1] 1.37ns
:8  %p_t = select i1 %tmp_4, i32 %t_1, i32 %t

ST_3: stg_65 [1/1] 1.57ns
:9  br label %3

ST_3: stg_66 [1/1] 0.00ns
.exitStub:0  ret void


 <State 4>: 4.11ns
ST_4: pos1 [1/1] 0.00ns
:0  %pos1 = phi i7 [ 0, %4 ], [ %pos_1, %_ifconv ]

ST_4: exitcond5 [1/1] 1.97ns
:1  %exitcond5 = icmp eq i7 %pos1, -11

ST_4: pos_1 [1/1] 1.72ns
:2  %pos_1 = add i7 %pos1, 1

ST_4: stg_70 [1/1] 1.57ns
:3  br i1 %exitcond5, label %.preheader, label %_ifconv

ST_4: tmp_8 [1/1] 0.00ns
_ifconv:5  %tmp_8 = zext i7 %pos_1 to i64

ST_4: linebuff_addr_1 [1/1] 0.00ns
_ifconv:6  %linebuff_addr_1 = getelementptr inbounds [117 x i8]* %linebuff, i64 0, i64 %tmp_8

ST_4: linebuff_load [2/2] 2.39ns
_ifconv:7  %linebuff_load = load i8* %linebuff_addr_1, align 1


 <State 5>: 6.15ns
ST_5: empty_17 [1/1] 0.00ns
_ifconv:0  %empty_17 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 117, i64 117, i64 117)

ST_5: stg_75 [1/1] 0.00ns
_ifconv:1  call void (...)* @_ssdm_op_SpecLoopName([13 x i8]* @p_str5) nounwind

ST_5: tmp_3 [1/1] 0.00ns
_ifconv:2  %tmp_3 = call i32 (...)* @_ssdm_op_SpecRegionBegin([13 x i8]* @p_str5)

ST_5: stg_77 [1/1] 0.00ns
_ifconv:3  call void (...)* @_ssdm_op_SpecPipeline(i32 2, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind

ST_5: tmp_6 [1/1] 1.97ns
_ifconv:4  %tmp_6 = icmp ult i7 %pos1, -12

ST_5: linebuff_load [1/2] 2.39ns
_ifconv:7  %linebuff_load = load i8* %linebuff_addr_1, align 1

ST_5: tmp_9 [1/1] 1.37ns
_ifconv:8  %tmp_9 = select i1 %tmp_6, i8 %linebuff_load, i8 %read

ST_5: tmp_s [1/1] 0.00ns
_ifconv:9  %tmp_s = zext i7 %pos1 to i64

ST_5: linebuff_addr_2 [1/1] 0.00ns
_ifconv:10  %linebuff_addr_2 = getelementptr inbounds [117 x i8]* %linebuff, i64 0, i64 %tmp_s

ST_5: stg_83 [1/1] 2.39ns
_ifconv:11  store i8 %tmp_9, i8* %linebuff_addr_2, align 1

ST_5: empty_18 [1/1] 0.00ns
_ifconv:12  %empty_18 = call i32 (...)* @_ssdm_op_SpecRegionEnd([13 x i8]* @p_str5, i32 %tmp_3)

ST_5: stg_85 [1/1] 0.00ns
_ifconv:13  br label %3


 <State 6>: 8.12ns
ST_6: indvar_flatten [1/1] 0.00ns
.preheader:0  %indvar_flatten = phi i5 [ %indvar_flatten_next, %.preheader8 ], [ 0, %3 ]

ST_6: inner_loop [1/1] 0.00ns
.preheader:1  %inner_loop = phi i3 [ %inner_loop_mid2, %.preheader8 ], [ 0, %3 ]

ST_6: output_1 [1/1] 0.00ns
.preheader:2  %output_1 = phi float [ %output, %.preheader8 ], [ 0.000000e+00, %3 ]

ST_6: outer_loop [1/1] 0.00ns
.preheader:3  %outer_loop = phi i3 [ %outer_loop_1, %.preheader8 ], [ 0, %3 ]

ST_6: exitcond_flatten [1/1] 1.91ns
.preheader:4  %exitcond_flatten = icmp eq i5 %indvar_flatten, -7

ST_6: indvar_flatten_next [1/1] 1.72ns
.preheader:5  %indvar_flatten_next = add i5 %indvar_flatten, 1

ST_6: stg_92 [1/1] 0.00ns
.preheader:6  br i1 %exitcond_flatten, label %2, label %.preheader8

ST_6: exitcond [1/1] 1.62ns
.preheader8:1  %exitcond = icmp eq i3 %outer_loop, -3

ST_6: outer_loop_mid2 [1/1] 1.37ns
.preheader8:2  %outer_loop_mid2 = select i1 %exitcond, i3 0, i3 %outer_loop

ST_6: inner_loop_s [1/1] 0.80ns
.preheader8:3  %inner_loop_s = add i3 %inner_loop, 1

ST_6: inner_loop_mid2 [1/1] 1.37ns
.preheader8:4  %inner_loop_mid2 = select i1 %exitcond, i3 %inner_loop_s, i3 %inner_loop

ST_6: inner_loop_cast7_cast [1/1] 0.00ns
.preheader8:5  %inner_loop_cast7_cast = zext i3 %inner_loop_mid2 to i4

ST_6: p_shl2 [1/1] 0.00ns
.preheader8:6  %p_shl2 = call i8 @_ssdm_op_BitConcatenate.i8.i3.i5(i3 %inner_loop_mid2, i5 0)

ST_6: p_shl2_cast [1/1] 0.00ns
.preheader8:7  %p_shl2_cast = zext i8 %p_shl2 to i9

ST_6: p_shl3 [1/1] 0.00ns
.preheader8:8  %p_shl3 = call i5 @_ssdm_op_BitConcatenate.i5.i3.i2(i3 %inner_loop_mid2, i2 0)

ST_6: p_shl3_cast [1/1] 0.00ns
.preheader8:9  %p_shl3_cast = zext i5 %p_shl3 to i9

ST_6: tmp_12 [1/1] 1.37ns
.preheader8:10  %tmp_12 = sub i9 %p_shl2_cast, %p_shl3_cast

ST_6: outer_loop_cast4_cast [1/1] 0.00ns
.preheader8:11  %outer_loop_cast4_cast = zext i3 %outer_loop_mid2 to i4

ST_6: outer_loop_cast5 [1/1] 0.00ns
.preheader8:12  %outer_loop_cast5 = zext i3 %outer_loop_mid2 to i9

ST_6: tmp_16 [1/1] 1.37ns
.preheader8:15  %tmp_16 = add i9 %outer_loop_cast5, %tmp_12

ST_6: tmp_16_cast [1/1] 0.00ns
.preheader8:16  %tmp_16_cast = sext i9 %tmp_16 to i32

ST_6: tmp_17 [1/1] 0.00ns
.preheader8:17  %tmp_17 = zext i32 %tmp_16_cast to i64

ST_6: linebuff_addr_3 [1/1] 0.00ns
.preheader8:18  %linebuff_addr_3 = getelementptr inbounds [117 x i8]* %linebuff, i64 0, i64 %tmp_17

ST_6: linebuff_load_1 [2/2] 2.39ns
.preheader8:19  %linebuff_load_1 = load i8* %linebuff_addr_3, align 1

ST_6: tmp22 [1/1] 0.80ns
.preheader8:22  %tmp22 = add i4 %outer_loop_cast4_cast, %inner_loop_cast7_cast

ST_6: tmp22_cast [1/1] 0.00ns
.preheader8:23  %tmp22_cast = zext i4 %tmp22 to i5

ST_6: tmp_20 [1/1] 1.72ns
.preheader8:24  %tmp_20 = add i5 %p_shl3, %tmp22_cast

ST_6: outer_loop_1 [1/1] 0.80ns
.preheader8:31  %outer_loop_1 = add i3 %outer_loop_mid2, 1


 <State 7>: 2.39ns
ST_7: linebuff_load_1 [1/2] 2.39ns
.preheader8:19  %linebuff_load_1 = load i8* %linebuff_addr_3, align 1


 <State 8>: 6.41ns
ST_8: tmp_18 [1/1] 0.00ns
.preheader8:20  %tmp_18 = zext i8 %linebuff_load_1 to i32

ST_8: tmp_19 [6/6] 6.41ns
.preheader8:21  %tmp_19 = sitofp i32 %tmp_18 to float


 <State 9>: 6.41ns
ST_9: tmp_19 [5/6] 6.41ns
.preheader8:21  %tmp_19 = sitofp i32 %tmp_18 to float


 <State 10>: 6.41ns
ST_10: tmp_19 [4/6] 6.41ns
.preheader8:21  %tmp_19 = sitofp i32 %tmp_18 to float


 <State 11>: 6.41ns
ST_11: tmp_19 [3/6] 6.41ns
.preheader8:21  %tmp_19 = sitofp i32 %tmp_18 to float


 <State 12>: 6.41ns
ST_12: tmp_19 [2/6] 6.41ns
.preheader8:21  %tmp_19 = sitofp i32 %tmp_18 to float


 <State 13>: 6.41ns
ST_13: tmp_19 [1/6] 6.41ns
.preheader8:21  %tmp_19 = sitofp i32 %tmp_18 to float

ST_13: tmp_21 [1/1] 0.00ns
.preheader8:25  %tmp_21 = zext i5 %tmp_20 to i64

ST_13: weights_addr [1/1] 0.00ns
.preheader8:26  %weights_addr = getelementptr [25 x float]* %weights, i64 0, i64 %tmp_21

ST_13: weights_load [2/2] 2.39ns
.preheader8:27  %weights_load = load float* %weights_addr, align 4


 <State 14>: 8.09ns
ST_14: weights_load [1/2] 2.39ns
.preheader8:27  %weights_load = load float* %weights_addr, align 4

ST_14: tmp_22 [4/4] 5.70ns
.preheader8:28  %tmp_22 = fmul float %tmp_19, %weights_load


 <State 15>: 5.70ns
ST_15: tmp_22 [3/4] 5.70ns
.preheader8:28  %tmp_22 = fmul float %tmp_19, %weights_load


 <State 16>: 5.70ns
ST_16: tmp_22 [2/4] 5.70ns
.preheader8:28  %tmp_22 = fmul float %tmp_19, %weights_load


 <State 17>: 5.70ns
ST_17: tmp_22 [1/4] 5.70ns
.preheader8:28  %tmp_22 = fmul float %tmp_19, %weights_load


 <State 18>: 7.26ns
ST_18: output [5/5] 7.26ns
.preheader8:29  %output = fadd float %output_1, %tmp_22


 <State 19>: 7.26ns
ST_19: output [4/5] 7.26ns
.preheader8:29  %output = fadd float %output_1, %tmp_22


 <State 20>: 7.26ns
ST_20: output [3/5] 7.26ns
.preheader8:29  %output = fadd float %output_1, %tmp_22


 <State 21>: 7.26ns
ST_21: output [2/5] 7.26ns
.preheader8:29  %output = fadd float %output_1, %tmp_22


 <State 22>: 7.26ns
ST_22: empty_14 [1/1] 0.00ns
.preheader8:0  %empty_14 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 25, i64 25, i64 25)

ST_22: tmp_25 [1/1] 0.00ns
.preheader8:13  %tmp_25 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str6)

ST_22: stg_136 [1/1] 0.00ns
.preheader8:14  call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind

ST_22: output [1/5] 7.26ns
.preheader8:29  %output = fadd float %output_1, %tmp_22

ST_22: empty_15 [1/1] 0.00ns
.preheader8:30  %empty_15 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str6, i32 %tmp_25)

ST_22: stg_139 [1/1] 0.00ns
.preheader8:32  br label %.preheader


 <State 23>: 8.16ns
ST_23: input_assign_to_int [1/1] 0.00ns
:0  %input_assign_to_int = bitcast float %output_1 to i32

ST_23: tmp_7 [1/1] 0.00ns
:1  %tmp_7 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %input_assign_to_int, i32 23, i32 30)

ST_23: tmp_1 [1/1] 0.00ns
:2  %tmp_1 = trunc i32 %input_assign_to_int to i23

ST_23: notlhs [1/1] 2.00ns
:3  %notlhs = icmp ne i8 %tmp_7, -1

ST_23: notrhs [1/1] 2.39ns
:4  %notrhs = icmp eq i23 %tmp_1, 0

ST_23: tmp_10 [1/1] 1.37ns
:5  %tmp_10 = or i1 %notrhs, %notlhs

ST_23: tmp_11 [1/1] 6.79ns
:6  %tmp_11 = fcmp ogt float %output_1, 0.000000e+00

ST_23: tmp_13 [1/1] 1.37ns
:7  %tmp_13 = and i1 %tmp_10, %tmp_11

ST_23: tmp_5 [1/1] 2.07ns
:29  %tmp_5 = icmp ugt i10 %pixels_read, 116

ST_23: tmp_24 [1/1] 0.00ns
:30  %tmp_24 = call i30 @_ssdm_op_PartSelect.i30.i32.i32.i32(i32 %m, i32 2, i32 31)

ST_23: icmp [1/1] 2.49ns
:31  %icmp = icmp sgt i30 %tmp_24, 0

ST_23: not_s [1/1] 1.37ns
:32  %not_s = xor i1 %tmp_4, true

ST_23: tmp21 [1/1] 1.37ns
:33  %tmp21 = and i1 %tmp_5, %not_s

ST_23: or_cond [1/1] 1.37ns
:34  %or_cond = and i1 %tmp21, %icmp


 <State 24>: 8.61ns
ST_24: p_Val2_s [1/1] 1.37ns
:8  %p_Val2_s = select i1 %tmp_13, i32 %input_assign_to_int, i32 0

ST_24: loc_V [1/1] 0.00ns
:9  %loc_V = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %p_Val2_s, i32 23, i32 30) nounwind

ST_24: loc_V_1 [1/1] 0.00ns
:10  %loc_V_1 = trunc i32 %p_Val2_s to i23

ST_24: p_Result_s [1/1] 0.00ns
:11  %p_Result_s = call i24 @_ssdm_op_BitConcatenate.i24.i1.i23(i1 true, i23 %loc_V_1) nounwind

ST_24: tmp_i_cast_i [1/1] 0.00ns
:12  %tmp_i_cast_i = zext i24 %p_Result_s to i31

ST_24: tmp_i_i_cast_i [1/1] 0.00ns
:13  %tmp_i_i_cast_i = zext i8 %loc_V to i9

ST_24: sh_assign [1/1] 1.72ns
:14  %sh_assign = add i9 -127, %tmp_i_i_cast_i

ST_24: isNeg [1/1] 0.00ns
:15  %isNeg = call i1 @_ssdm_op_BitSelect.i1.i9.i32(i9 %sh_assign, i32 8)

ST_24: tmp_1_i_i [1/1] 1.72ns
:16  %tmp_1_i_i = sub i8 127, %loc_V

ST_24: tmp_1_i_cast_i [1/1] 0.00ns
:17  %tmp_1_i_cast_i = sext i8 %tmp_1_i_i to i9

ST_24: sh_assign_1 [1/1] 1.37ns
:18  %sh_assign_1 = select i1 %isNeg, i9 %tmp_1_i_cast_i, i9 %sh_assign

ST_24: sh_assign_1_i_cast_i_cast [1/1] 0.00ns
:19  %sh_assign_1_i_cast_i_cast = sext i9 %sh_assign_1 to i24

ST_24: tmp_3_i_i [1/1] 2.78ns
:20  %tmp_3_i_i = lshr i24 %p_Result_s, %sh_assign_1_i_cast_i_cast

ST_24: tmp_4_i_cast_i [1/1] 0.00ns
:21  %tmp_4_i_cast_i = zext i9 %sh_assign_1 to i31

ST_24: tmp_5_i_i [1/1] 2.78ns
:22  %tmp_5_i_i = shl i31 %tmp_i_cast_i, %tmp_4_i_cast_i

ST_24: tmp_23 [1/1] 0.00ns
:23  %tmp_23 = call i1 @_ssdm_op_BitSelect.i1.i24.i32(i24 %tmp_3_i_i, i32 23)

ST_24: tmp_14 [1/1] 0.00ns
:24  %tmp_14 = zext i1 %tmp_23 to i8

ST_24: tmp_15 [1/1] 0.00ns
:25  %tmp_15 = call i8 @_ssdm_op_PartSelect.i8.i31.i32.i32(i31 %tmp_5_i_i, i32 23, i32 30)

ST_24: result_V [1/1] 1.37ns
:26  %result_V = select i1 %isNeg, i8 %tmp_14, i8 %tmp_15


 <State 25>: 6.41ns
ST_25: output1 [1/1] 0.00ns
:27  %output1 = zext i8 %result_V to i32

ST_25: output_2 [6/6] 6.41ns
:28  %output_2 = sitofp i32 %output1 to float


 <State 26>: 6.41ns
ST_26: output_2 [5/6] 6.41ns
:28  %output_2 = sitofp i32 %output1 to float


 <State 27>: 6.41ns
ST_27: output_2 [4/6] 6.41ns
:28  %output_2 = sitofp i32 %output1 to float


 <State 28>: 6.41ns
ST_28: output_2 [3/6] 6.41ns
:28  %output_2 = sitofp i32 %output1 to float


 <State 29>: 6.41ns
ST_29: output_2 [2/6] 6.41ns
:28  %output_2 = sitofp i32 %output1 to float


 <State 30>: 6.41ns
ST_30: output_2 [1/6] 6.41ns
:28  %output_2 = sitofp i32 %output1 to float

ST_30: stg_180 [1/1] 0.00ns
:35  br i1 %or_cond, label %5, label %._crit_edge10

ST_30: p_Val2_4 [1/1] 0.00ns
:0  %p_Val2_4 = bitcast float %output_2 to i32

ST_30: loc_V_2 [1/1] 0.00ns
:1  %loc_V_2 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %p_Val2_4, i32 23, i32 30) nounwind

ST_30: loc_V_3 [1/1] 0.00ns
:2  %loc_V_3 = trunc i32 %p_Val2_4 to i23


 <State 31>: 7.24ns
ST_31: p_Result_4 [1/1] 0.00ns
:3  %p_Result_4 = call i24 @_ssdm_op_BitConcatenate.i24.i1.i23(i1 true, i23 %loc_V_3) nounwind

ST_31: tmp_i_cast_i6 [1/1] 0.00ns
:4  %tmp_i_cast_i6 = zext i24 %p_Result_4 to i31

ST_31: tmp_i_i_cast_i7 [1/1] 0.00ns
:5  %tmp_i_i_cast_i7 = zext i8 %loc_V_2 to i9

ST_31: sh_assign_2 [1/1] 1.72ns
:6  %sh_assign_2 = add i9 -127, %tmp_i_i_cast_i7

ST_31: isNeg_1 [1/1] 0.00ns
:7  %isNeg_1 = call i1 @_ssdm_op_BitSelect.i1.i9.i32(i9 %sh_assign_2, i32 8)

ST_31: tmp_1_i_i1 [1/1] 1.72ns
:8  %tmp_1_i_i1 = sub i8 127, %loc_V_2

ST_31: tmp_1_i_cast_i1 [1/1] 0.00ns
:9  %tmp_1_i_cast_i1 = sext i8 %tmp_1_i_i1 to i9

ST_31: sh_assign_3 [1/1] 1.37ns
:10  %sh_assign_3 = select i1 %isNeg_1, i9 %tmp_1_i_cast_i1, i9 %sh_assign_2

ST_31: sh_assign_1_i_cast_i13_cast [1/1] 0.00ns
:11  %sh_assign_1_i_cast_i13_cast = sext i9 %sh_assign_3 to i24

ST_31: tmp_3_i_i1 [1/1] 2.78ns
:12  %tmp_3_i_i1 = lshr i24 %p_Result_4, %sh_assign_1_i_cast_i13_cast

ST_31: tmp_4_i_cast_i1 [1/1] 0.00ns
:13  %tmp_4_i_cast_i1 = zext i9 %sh_assign_3 to i31

ST_31: tmp_5_i_i1 [1/1] 2.78ns
:14  %tmp_5_i_i1 = shl i31 %tmp_i_cast_i6, %tmp_4_i_cast_i1

ST_31: tmp_28 [1/1] 0.00ns
:15  %tmp_28 = call i1 @_ssdm_op_BitSelect.i1.i24.i32(i24 %tmp_3_i_i1, i32 23)

ST_31: tmp_26 [1/1] 0.00ns
:16  %tmp_26 = zext i1 %tmp_28 to i8

ST_31: tmp_27 [1/1] 0.00ns
:17  %tmp_27 = call i8 @_ssdm_op_PartSelect.i8.i31.i32.i32(i31 %tmp_5_i_i1, i32 23, i32 30)

ST_31: result_V_1 [1/1] 1.37ns
:18  %result_V_1 = select i1 %isNeg_1, i8 %tmp_26, i8 %tmp_27


 <State 32>: 4.38ns
ST_32: stg_200 [1/1] 4.38ns
:19  call void @_ssdm_op_Write.ap_fifo.volatile.i8P(i8* %conv_output_V, i8 %result_V_1)

ST_32: stg_201 [1/1] 0.00ns
:20  br label %._crit_edge10

ST_32: empty_13 [1/1] 0.00ns
._crit_edge10:0  %empty_13 = call i32 (...)* @_ssdm_op_SpecRegionEnd([10 x i8]* @p_str4, i32 %tmp_2)

ST_32: stg_203 [1/1] 0.00ns
._crit_edge10:1  br label %.preheader9



============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
