// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.2
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module splitter_Loop_1_proc (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        input_V_TDATA,
        input_V_TVALID,
        input_V_TREADY,
        output_0_V_TDATA,
        output_0_V_TVALID,
        output_0_V_TREADY,
        output_1_V_TDATA,
        output_1_V_TVALID,
        output_1_V_TREADY,
        output_2_V_TDATA,
        output_2_V_TVALID,
        output_2_V_TREADY,
        output_3_V_TDATA,
        output_3_V_TVALID,
        output_3_V_TREADY,
        output_4_V_TDATA,
        output_4_V_TVALID,
        output_4_V_TREADY,
        output_5_V_TDATA,
        output_5_V_TVALID,
        output_5_V_TREADY
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 3'b1;
parameter    ap_ST_pp0_stg0_fsm_1 = 3'b10;
parameter    ap_ST_st4_fsm_2 = 3'b100;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv10_0 = 10'b0000000000;
parameter    ap_const_lv10_310 = 10'b1100010000;
parameter    ap_const_lv10_1 = 10'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [7:0] input_V_TDATA;
input   input_V_TVALID;
output   input_V_TREADY;
output  [7:0] output_0_V_TDATA;
output   output_0_V_TVALID;
input   output_0_V_TREADY;
output  [7:0] output_1_V_TDATA;
output   output_1_V_TVALID;
input   output_1_V_TREADY;
output  [7:0] output_2_V_TDATA;
output   output_2_V_TVALID;
input   output_2_V_TREADY;
output  [7:0] output_3_V_TDATA;
output   output_3_V_TVALID;
input   output_3_V_TREADY;
output  [7:0] output_4_V_TDATA;
output   output_4_V_TVALID;
input   output_4_V_TREADY;
output  [7:0] output_5_V_TDATA;
output   output_5_V_TVALID;
input   output_5_V_TREADY;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg input_V_TREADY;
reg output_0_V_TVALID;
reg output_1_V_TVALID;
reg output_2_V_TVALID;
reg output_3_V_TVALID;
reg output_4_V_TVALID;
reg output_5_V_TVALID;
reg    ap_done_reg = 1'b0;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm = 3'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_22;
reg   [9:0] pixels_read_0_i_i_reg_94;
wire   [0:0] exitcond4_i_i_fu_105_p2;
reg   [0:0] exitcond4_i_i_reg_117;
reg    ap_sig_cseq_ST_pp0_stg0_fsm_1;
reg    ap_sig_bdd_59;
reg    ap_sig_bdd_65;
reg    ap_reg_ppiten_pp0_it0 = 1'b0;
reg    ap_sig_ioackin_output_0_V_TREADY;
reg    ap_sig_ioackin_output_1_V_TREADY;
reg    ap_sig_ioackin_output_2_V_TREADY;
reg    ap_sig_ioackin_output_3_V_TREADY;
reg    ap_sig_ioackin_output_4_V_TREADY;
reg    ap_sig_ioackin_output_5_V_TREADY;
reg    ap_reg_ppiten_pp0_it1 = 1'b0;
wire   [9:0] pixels_read_fu_111_p2;
reg   [7:0] temp_reg_126;
reg    ap_sig_bdd_109;
reg    ap_reg_ioackin_output_0_V_TREADY = 1'b0;
reg    ap_reg_ioackin_output_1_V_TREADY = 1'b0;
reg    ap_reg_ioackin_output_2_V_TREADY = 1'b0;
reg    ap_reg_ioackin_output_3_V_TREADY = 1'b0;
reg    ap_reg_ioackin_output_4_V_TREADY = 1'b0;
reg    ap_reg_ioackin_output_5_V_TREADY = 1'b0;
reg    ap_sig_cseq_ST_st4_fsm_2;
reg    ap_sig_bdd_173;
reg   [2:0] ap_NS_fsm;
reg    ap_sig_bdd_194;
reg    ap_sig_bdd_193;
reg    ap_sig_bdd_197;
reg    ap_sig_bdd_199;
reg    ap_sig_bdd_201;
reg    ap_sig_bdd_203;
reg    ap_sig_bdd_205;




/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// ap_done_reg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_done_reg
    if (ap_rst == 1'b1) begin
        ap_done_reg <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_continue)) begin
            ap_done_reg <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_2)) begin
            ap_done_reg <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ioackin_output_0_V_TREADY assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ioackin_output_0_V_TREADY
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_output_0_V_TREADY <= ap_const_logic_0;
    end else begin
        if (ap_sig_bdd_193) begin
            if (~((ap_sig_bdd_65 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) | ((((exitcond4_i_i_reg_117 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_output_0_V_TREADY)) | ((exitcond4_i_i_reg_117 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_output_1_V_TREADY)) | ((exitcond4_i_i_reg_117 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_output_2_V_TREADY)) | ((exitcond4_i_i_reg_117 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_output_3_V_TREADY)) | ((exitcond4_i_i_reg_117 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_output_4_V_TREADY)) | ((exitcond4_i_i_reg_117 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_output_5_V_TREADY))) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
                ap_reg_ioackin_output_0_V_TREADY <= ap_const_logic_0;
            end else if (ap_sig_bdd_194) begin
                ap_reg_ioackin_output_0_V_TREADY <= ap_const_logic_1;
            end
        end
    end
end

/// ap_reg_ioackin_output_1_V_TREADY assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ioackin_output_1_V_TREADY
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_output_1_V_TREADY <= ap_const_logic_0;
    end else begin
        if (ap_sig_bdd_193) begin
            if (~((ap_sig_bdd_65 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) | ((((exitcond4_i_i_reg_117 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_output_0_V_TREADY)) | ((exitcond4_i_i_reg_117 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_output_1_V_TREADY)) | ((exitcond4_i_i_reg_117 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_output_2_V_TREADY)) | ((exitcond4_i_i_reg_117 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_output_3_V_TREADY)) | ((exitcond4_i_i_reg_117 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_output_4_V_TREADY)) | ((exitcond4_i_i_reg_117 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_output_5_V_TREADY))) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
                ap_reg_ioackin_output_1_V_TREADY <= ap_const_logic_0;
            end else if (ap_sig_bdd_197) begin
                ap_reg_ioackin_output_1_V_TREADY <= ap_const_logic_1;
            end
        end
    end
end

/// ap_reg_ioackin_output_2_V_TREADY assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ioackin_output_2_V_TREADY
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_output_2_V_TREADY <= ap_const_logic_0;
    end else begin
        if (ap_sig_bdd_193) begin
            if (~((ap_sig_bdd_65 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) | ((((exitcond4_i_i_reg_117 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_output_0_V_TREADY)) | ((exitcond4_i_i_reg_117 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_output_1_V_TREADY)) | ((exitcond4_i_i_reg_117 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_output_2_V_TREADY)) | ((exitcond4_i_i_reg_117 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_output_3_V_TREADY)) | ((exitcond4_i_i_reg_117 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_output_4_V_TREADY)) | ((exitcond4_i_i_reg_117 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_output_5_V_TREADY))) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
                ap_reg_ioackin_output_2_V_TREADY <= ap_const_logic_0;
            end else if (ap_sig_bdd_199) begin
                ap_reg_ioackin_output_2_V_TREADY <= ap_const_logic_1;
            end
        end
    end
end

/// ap_reg_ioackin_output_3_V_TREADY assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ioackin_output_3_V_TREADY
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_output_3_V_TREADY <= ap_const_logic_0;
    end else begin
        if (ap_sig_bdd_193) begin
            if (~((ap_sig_bdd_65 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) | ((((exitcond4_i_i_reg_117 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_output_0_V_TREADY)) | ((exitcond4_i_i_reg_117 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_output_1_V_TREADY)) | ((exitcond4_i_i_reg_117 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_output_2_V_TREADY)) | ((exitcond4_i_i_reg_117 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_output_3_V_TREADY)) | ((exitcond4_i_i_reg_117 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_output_4_V_TREADY)) | ((exitcond4_i_i_reg_117 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_output_5_V_TREADY))) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
                ap_reg_ioackin_output_3_V_TREADY <= ap_const_logic_0;
            end else if (ap_sig_bdd_201) begin
                ap_reg_ioackin_output_3_V_TREADY <= ap_const_logic_1;
            end
        end
    end
end

/// ap_reg_ioackin_output_4_V_TREADY assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ioackin_output_4_V_TREADY
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_output_4_V_TREADY <= ap_const_logic_0;
    end else begin
        if (ap_sig_bdd_193) begin
            if (~((ap_sig_bdd_65 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) | ((((exitcond4_i_i_reg_117 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_output_0_V_TREADY)) | ((exitcond4_i_i_reg_117 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_output_1_V_TREADY)) | ((exitcond4_i_i_reg_117 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_output_2_V_TREADY)) | ((exitcond4_i_i_reg_117 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_output_3_V_TREADY)) | ((exitcond4_i_i_reg_117 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_output_4_V_TREADY)) | ((exitcond4_i_i_reg_117 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_output_5_V_TREADY))) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
                ap_reg_ioackin_output_4_V_TREADY <= ap_const_logic_0;
            end else if (ap_sig_bdd_203) begin
                ap_reg_ioackin_output_4_V_TREADY <= ap_const_logic_1;
            end
        end
    end
end

/// ap_reg_ioackin_output_5_V_TREADY assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ioackin_output_5_V_TREADY
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_output_5_V_TREADY <= ap_const_logic_0;
    end else begin
        if (ap_sig_bdd_193) begin
            if (~((ap_sig_bdd_65 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) | ((((exitcond4_i_i_reg_117 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_output_0_V_TREADY)) | ((exitcond4_i_i_reg_117 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_output_1_V_TREADY)) | ((exitcond4_i_i_reg_117 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_output_2_V_TREADY)) | ((exitcond4_i_i_reg_117 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_output_3_V_TREADY)) | ((exitcond4_i_i_reg_117 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_output_4_V_TREADY)) | ((exitcond4_i_i_reg_117 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_output_5_V_TREADY))) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
                ap_reg_ioackin_output_5_V_TREADY <= ap_const_logic_0;
            end else if (ap_sig_bdd_205) begin
                ap_reg_ioackin_output_5_V_TREADY <= ap_const_logic_1;
            end
        end
    end
end

/// ap_reg_ppiten_pp0_it0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it0
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~((ap_sig_bdd_65 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) | ((((exitcond4_i_i_reg_117 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_output_0_V_TREADY)) | ((exitcond4_i_i_reg_117 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_output_1_V_TREADY)) | ((exitcond4_i_i_reg_117 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_output_2_V_TREADY)) | ((exitcond4_i_i_reg_117 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_output_3_V_TREADY)) | ((exitcond4_i_i_reg_117 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_output_4_V_TREADY)) | ((exitcond4_i_i_reg_117 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_output_5_V_TREADY))) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) & ~(exitcond4_i_i_fu_105_p2 == ap_const_lv1_0))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_109)) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp0_it1 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it1
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (exitcond4_i_i_fu_105_p2 == ap_const_lv1_0) & ~((ap_sig_bdd_65 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) | ((((exitcond4_i_i_reg_117 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_output_0_V_TREADY)) | ((exitcond4_i_i_reg_117 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_output_1_V_TREADY)) | ((exitcond4_i_i_reg_117 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_output_2_V_TREADY)) | ((exitcond4_i_i_reg_117 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_output_3_V_TREADY)) | ((exitcond4_i_i_reg_117 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_output_4_V_TREADY)) | ((exitcond4_i_i_reg_117 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_output_5_V_TREADY))) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
        end else if ((((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_109) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~((ap_sig_bdd_65 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) | ((((exitcond4_i_i_reg_117 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_output_0_V_TREADY)) | ((exitcond4_i_i_reg_117 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_output_1_V_TREADY)) | ((exitcond4_i_i_reg_117 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_output_2_V_TREADY)) | ((exitcond4_i_i_reg_117 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_output_3_V_TREADY)) | ((exitcond4_i_i_reg_117 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_output_4_V_TREADY)) | ((exitcond4_i_i_reg_117 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_output_5_V_TREADY))) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) & ~(exitcond4_i_i_fu_105_p2 == ap_const_lv1_0)))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (exitcond4_i_i_fu_105_p2 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~((ap_sig_bdd_65 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) | ((((exitcond4_i_i_reg_117 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_output_0_V_TREADY)) | ((exitcond4_i_i_reg_117 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_output_1_V_TREADY)) | ((exitcond4_i_i_reg_117 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_output_2_V_TREADY)) | ((exitcond4_i_i_reg_117 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_output_3_V_TREADY)) | ((exitcond4_i_i_reg_117 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_output_4_V_TREADY)) | ((exitcond4_i_i_reg_117 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_output_5_V_TREADY))) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))))) begin
        pixels_read_0_i_i_reg_94 <= pixels_read_fu_111_p2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_109)) begin
        pixels_read_0_i_i_reg_94 <= ap_const_lv10_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~((ap_sig_bdd_65 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) | ((((exitcond4_i_i_reg_117 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_output_0_V_TREADY)) | ((exitcond4_i_i_reg_117 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_output_1_V_TREADY)) | ((exitcond4_i_i_reg_117 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_output_2_V_TREADY)) | ((exitcond4_i_i_reg_117 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_output_3_V_TREADY)) | ((exitcond4_i_i_reg_117 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_output_4_V_TREADY)) | ((exitcond4_i_i_reg_117 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_output_5_V_TREADY))) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))))) begin
        exitcond4_i_i_reg_117 <= exitcond4_i_i_fu_105_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (exitcond4_i_i_fu_105_p2 == ap_const_lv1_0) & ~((ap_sig_bdd_65 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) | ((((exitcond4_i_i_reg_117 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_output_0_V_TREADY)) | ((exitcond4_i_i_reg_117 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_output_1_V_TREADY)) | ((exitcond4_i_i_reg_117 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_output_2_V_TREADY)) | ((exitcond4_i_i_reg_117 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_output_3_V_TREADY)) | ((exitcond4_i_i_reg_117 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_output_4_V_TREADY)) | ((exitcond4_i_i_reg_117 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_output_5_V_TREADY))) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))))) begin
        temp_reg_126 <= input_V_TDATA;
    end
end

/// ap_done assign process. ///
always @ (ap_done_reg or ap_sig_cseq_ST_st4_fsm_2)
begin
    if (((ap_const_logic_1 == ap_done_reg) | (ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_2))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_sig_cseq_ST_st4_fsm_2)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_2)) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg0_fsm_1 assign process. ///
always @ (ap_sig_bdd_59)
begin
    if (ap_sig_bdd_59) begin
        ap_sig_cseq_ST_pp0_stg0_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg0_fsm_1 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st1_fsm_0 assign process. ///
always @ (ap_sig_bdd_22)
begin
    if (ap_sig_bdd_22) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st4_fsm_2 assign process. ///
always @ (ap_sig_bdd_173)
begin
    if (ap_sig_bdd_173) begin
        ap_sig_cseq_ST_st4_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_2 = ap_const_logic_0;
    end
end

/// ap_sig_ioackin_output_0_V_TREADY assign process. ///
always @ (output_0_V_TREADY or ap_reg_ioackin_output_0_V_TREADY)
begin
    if ((ap_const_logic_0 == ap_reg_ioackin_output_0_V_TREADY)) begin
        ap_sig_ioackin_output_0_V_TREADY = output_0_V_TREADY;
    end else begin
        ap_sig_ioackin_output_0_V_TREADY = ap_const_logic_1;
    end
end

/// ap_sig_ioackin_output_1_V_TREADY assign process. ///
always @ (output_1_V_TREADY or ap_reg_ioackin_output_1_V_TREADY)
begin
    if ((ap_const_logic_0 == ap_reg_ioackin_output_1_V_TREADY)) begin
        ap_sig_ioackin_output_1_V_TREADY = output_1_V_TREADY;
    end else begin
        ap_sig_ioackin_output_1_V_TREADY = ap_const_logic_1;
    end
end

/// ap_sig_ioackin_output_2_V_TREADY assign process. ///
always @ (output_2_V_TREADY or ap_reg_ioackin_output_2_V_TREADY)
begin
    if ((ap_const_logic_0 == ap_reg_ioackin_output_2_V_TREADY)) begin
        ap_sig_ioackin_output_2_V_TREADY = output_2_V_TREADY;
    end else begin
        ap_sig_ioackin_output_2_V_TREADY = ap_const_logic_1;
    end
end

/// ap_sig_ioackin_output_3_V_TREADY assign process. ///
always @ (output_3_V_TREADY or ap_reg_ioackin_output_3_V_TREADY)
begin
    if ((ap_const_logic_0 == ap_reg_ioackin_output_3_V_TREADY)) begin
        ap_sig_ioackin_output_3_V_TREADY = output_3_V_TREADY;
    end else begin
        ap_sig_ioackin_output_3_V_TREADY = ap_const_logic_1;
    end
end

/// ap_sig_ioackin_output_4_V_TREADY assign process. ///
always @ (output_4_V_TREADY or ap_reg_ioackin_output_4_V_TREADY)
begin
    if ((ap_const_logic_0 == ap_reg_ioackin_output_4_V_TREADY)) begin
        ap_sig_ioackin_output_4_V_TREADY = output_4_V_TREADY;
    end else begin
        ap_sig_ioackin_output_4_V_TREADY = ap_const_logic_1;
    end
end

/// ap_sig_ioackin_output_5_V_TREADY assign process. ///
always @ (output_5_V_TREADY or ap_reg_ioackin_output_5_V_TREADY)
begin
    if ((ap_const_logic_0 == ap_reg_ioackin_output_5_V_TREADY)) begin
        ap_sig_ioackin_output_5_V_TREADY = output_5_V_TREADY;
    end else begin
        ap_sig_ioackin_output_5_V_TREADY = ap_const_logic_1;
    end
end

/// input_V_TREADY assign process. ///
always @ (exitcond4_i_i_fu_105_p2 or exitcond4_i_i_reg_117 or ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_sig_bdd_65 or ap_reg_ppiten_pp0_it0 or ap_sig_ioackin_output_0_V_TREADY or ap_sig_ioackin_output_1_V_TREADY or ap_sig_ioackin_output_2_V_TREADY or ap_sig_ioackin_output_3_V_TREADY or ap_sig_ioackin_output_4_V_TREADY or ap_sig_ioackin_output_5_V_TREADY or ap_reg_ppiten_pp0_it1)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (exitcond4_i_i_fu_105_p2 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~((ap_sig_bdd_65 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) | ((((exitcond4_i_i_reg_117 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_output_0_V_TREADY)) | ((exitcond4_i_i_reg_117 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_output_1_V_TREADY)) | ((exitcond4_i_i_reg_117 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_output_2_V_TREADY)) | ((exitcond4_i_i_reg_117 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_output_3_V_TREADY)) | ((exitcond4_i_i_reg_117 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_output_4_V_TREADY)) | ((exitcond4_i_i_reg_117 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_output_5_V_TREADY))) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))))) begin
        input_V_TREADY = ap_const_logic_1;
    end else begin
        input_V_TREADY = ap_const_logic_0;
    end
end

/// output_0_V_TVALID assign process. ///
always @ (exitcond4_i_i_reg_117 or ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_sig_bdd_65 or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_reg_ioackin_output_0_V_TREADY)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (exitcond4_i_i_reg_117 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~(ap_sig_bdd_65 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) & (ap_const_logic_0 == ap_reg_ioackin_output_0_V_TREADY))) begin
        output_0_V_TVALID = ap_const_logic_1;
    end else begin
        output_0_V_TVALID = ap_const_logic_0;
    end
end

/// output_1_V_TVALID assign process. ///
always @ (exitcond4_i_i_reg_117 or ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_sig_bdd_65 or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_reg_ioackin_output_1_V_TREADY)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (exitcond4_i_i_reg_117 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~(ap_sig_bdd_65 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) & (ap_const_logic_0 == ap_reg_ioackin_output_1_V_TREADY))) begin
        output_1_V_TVALID = ap_const_logic_1;
    end else begin
        output_1_V_TVALID = ap_const_logic_0;
    end
end

/// output_2_V_TVALID assign process. ///
always @ (exitcond4_i_i_reg_117 or ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_sig_bdd_65 or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_reg_ioackin_output_2_V_TREADY)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (exitcond4_i_i_reg_117 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~(ap_sig_bdd_65 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) & (ap_const_logic_0 == ap_reg_ioackin_output_2_V_TREADY))) begin
        output_2_V_TVALID = ap_const_logic_1;
    end else begin
        output_2_V_TVALID = ap_const_logic_0;
    end
end

/// output_3_V_TVALID assign process. ///
always @ (exitcond4_i_i_reg_117 or ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_sig_bdd_65 or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_reg_ioackin_output_3_V_TREADY)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (exitcond4_i_i_reg_117 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~(ap_sig_bdd_65 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) & (ap_const_logic_0 == ap_reg_ioackin_output_3_V_TREADY))) begin
        output_3_V_TVALID = ap_const_logic_1;
    end else begin
        output_3_V_TVALID = ap_const_logic_0;
    end
end

/// output_4_V_TVALID assign process. ///
always @ (exitcond4_i_i_reg_117 or ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_sig_bdd_65 or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_reg_ioackin_output_4_V_TREADY)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (exitcond4_i_i_reg_117 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~(ap_sig_bdd_65 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) & (ap_const_logic_0 == ap_reg_ioackin_output_4_V_TREADY))) begin
        output_4_V_TVALID = ap_const_logic_1;
    end else begin
        output_4_V_TVALID = ap_const_logic_0;
    end
end

/// output_5_V_TVALID assign process. ///
always @ (exitcond4_i_i_reg_117 or ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_sig_bdd_65 or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_reg_ioackin_output_5_V_TREADY)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (exitcond4_i_i_reg_117 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~(ap_sig_bdd_65 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) & (ap_const_logic_0 == ap_reg_ioackin_output_5_V_TREADY))) begin
        output_5_V_TVALID = ap_const_logic_1;
    end else begin
        output_5_V_TVALID = ap_const_logic_0;
    end
end
/// the next state (ap_NS_fsm) of the state machine. ///
always @ (ap_CS_fsm or exitcond4_i_i_fu_105_p2 or exitcond4_i_i_reg_117 or ap_sig_bdd_65 or ap_reg_ppiten_pp0_it0 or ap_sig_ioackin_output_0_V_TREADY or ap_sig_ioackin_output_1_V_TREADY or ap_sig_ioackin_output_2_V_TREADY or ap_sig_ioackin_output_3_V_TREADY or ap_sig_ioackin_output_4_V_TREADY or ap_sig_ioackin_output_5_V_TREADY or ap_reg_ppiten_pp0_it1 or ap_sig_bdd_109)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~ap_sig_bdd_109) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_pp0_stg0_fsm_1 : 
        begin
            if (~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~((ap_sig_bdd_65 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) | ((((exitcond4_i_i_reg_117 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_output_0_V_TREADY)) | ((exitcond4_i_i_reg_117 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_output_1_V_TREADY)) | ((exitcond4_i_i_reg_117 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_output_2_V_TREADY)) | ((exitcond4_i_i_reg_117 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_output_3_V_TREADY)) | ((exitcond4_i_i_reg_117 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_output_4_V_TREADY)) | ((exitcond4_i_i_reg_117 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_output_5_V_TREADY))) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) & ~(exitcond4_i_i_fu_105_p2 == ap_const_lv1_0))) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~((ap_sig_bdd_65 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) | ((((exitcond4_i_i_reg_117 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_output_0_V_TREADY)) | ((exitcond4_i_i_reg_117 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_output_1_V_TREADY)) | ((exitcond4_i_i_reg_117 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_output_2_V_TREADY)) | ((exitcond4_i_i_reg_117 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_output_3_V_TREADY)) | ((exitcond4_i_i_reg_117 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_output_4_V_TREADY)) | ((exitcond4_i_i_reg_117 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_output_5_V_TREADY))) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) & ~(exitcond4_i_i_fu_105_p2 == ap_const_lv1_0))) begin
                ap_NS_fsm = ap_ST_st4_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            end
        end
        ap_ST_st4_fsm_2 : 
        begin
            ap_NS_fsm = ap_ST_st1_fsm_0;
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end


/// ap_sig_bdd_109 assign process. ///
always @ (ap_start or ap_done_reg)
begin
    ap_sig_bdd_109 = ((ap_start == ap_const_logic_0) | (ap_done_reg == ap_const_logic_1));
end

/// ap_sig_bdd_173 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_173 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end

/// ap_sig_bdd_193 assign process. ///
always @ (exitcond4_i_i_reg_117 or ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_reg_ppiten_pp0_it1)
begin
    ap_sig_bdd_193 = ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (exitcond4_i_i_reg_117 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1));
end

/// ap_sig_bdd_194 assign process. ///
always @ (output_0_V_TREADY or ap_sig_bdd_65 or ap_reg_ppiten_pp0_it0)
begin
    ap_sig_bdd_194 = (~(ap_sig_bdd_65 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) & (ap_const_logic_1 == output_0_V_TREADY));
end

/// ap_sig_bdd_197 assign process. ///
always @ (output_1_V_TREADY or ap_sig_bdd_65 or ap_reg_ppiten_pp0_it0)
begin
    ap_sig_bdd_197 = (~(ap_sig_bdd_65 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) & (ap_const_logic_1 == output_1_V_TREADY));
end

/// ap_sig_bdd_199 assign process. ///
always @ (output_2_V_TREADY or ap_sig_bdd_65 or ap_reg_ppiten_pp0_it0)
begin
    ap_sig_bdd_199 = (~(ap_sig_bdd_65 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) & (ap_const_logic_1 == output_2_V_TREADY));
end

/// ap_sig_bdd_201 assign process. ///
always @ (output_3_V_TREADY or ap_sig_bdd_65 or ap_reg_ppiten_pp0_it0)
begin
    ap_sig_bdd_201 = (~(ap_sig_bdd_65 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) & (ap_const_logic_1 == output_3_V_TREADY));
end

/// ap_sig_bdd_203 assign process. ///
always @ (output_4_V_TREADY or ap_sig_bdd_65 or ap_reg_ppiten_pp0_it0)
begin
    ap_sig_bdd_203 = (~(ap_sig_bdd_65 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) & (ap_const_logic_1 == output_4_V_TREADY));
end

/// ap_sig_bdd_205 assign process. ///
always @ (output_5_V_TREADY or ap_sig_bdd_65 or ap_reg_ppiten_pp0_it0)
begin
    ap_sig_bdd_205 = (~(ap_sig_bdd_65 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) & (ap_const_logic_1 == output_5_V_TREADY));
end

/// ap_sig_bdd_22 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_22 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end

/// ap_sig_bdd_59 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_59 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end

/// ap_sig_bdd_65 assign process. ///
always @ (input_V_TVALID or exitcond4_i_i_fu_105_p2)
begin
    ap_sig_bdd_65 = ((input_V_TVALID == ap_const_logic_0) & (exitcond4_i_i_fu_105_p2 == ap_const_lv1_0));
end
assign exitcond4_i_i_fu_105_p2 = (pixels_read_0_i_i_reg_94 == ap_const_lv10_310? 1'b1: 1'b0);
assign output_0_V_TDATA = temp_reg_126;
assign output_1_V_TDATA = temp_reg_126;
assign output_2_V_TDATA = temp_reg_126;
assign output_3_V_TDATA = temp_reg_126;
assign output_4_V_TDATA = temp_reg_126;
assign output_5_V_TDATA = temp_reg_126;
assign pixels_read_fu_111_p2 = (pixels_read_0_i_i_reg_94 + ap_const_lv10_1);


endmodule //splitter_Loop_1_proc

