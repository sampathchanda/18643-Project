// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.2
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#include "feature_extractor.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic feature_extractor::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic feature_extractor::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<11> feature_extractor::ap_ST_st1_fsm_0 = "1";
const sc_lv<11> feature_extractor::ap_ST_st2_fsm_1 = "10";
const sc_lv<11> feature_extractor::ap_ST_st3_fsm_2 = "100";
const sc_lv<11> feature_extractor::ap_ST_st4_fsm_3 = "1000";
const sc_lv<11> feature_extractor::ap_ST_st5_fsm_4 = "10000";
const sc_lv<11> feature_extractor::ap_ST_st6_fsm_5 = "100000";
const sc_lv<11> feature_extractor::ap_ST_st7_fsm_6 = "1000000";
const sc_lv<11> feature_extractor::ap_ST_st8_fsm_7 = "10000000";
const sc_lv<11> feature_extractor::ap_ST_st9_fsm_8 = "100000000";
const sc_lv<11> feature_extractor::ap_ST_st10_fsm_9 = "1000000000";
const sc_lv<11> feature_extractor::ap_ST_st11_fsm_10 = "10000000000";
const sc_lv<32> feature_extractor::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> feature_extractor::ap_const_lv1_1 = "1";
const sc_lv<32> feature_extractor::ap_const_lv32_1 = "1";
const sc_lv<32> feature_extractor::ap_const_lv32_3 = "11";
const sc_lv<1> feature_extractor::ap_const_lv1_0 = "0";
const sc_lv<32> feature_extractor::ap_const_lv32_4 = "100";
const sc_lv<32> feature_extractor::ap_const_lv32_5 = "101";
const sc_lv<32> feature_extractor::ap_const_lv32_6 = "110";
const sc_lv<32> feature_extractor::ap_const_lv32_7 = "111";
const sc_lv<32> feature_extractor::ap_const_lv32_9 = "1001";
const sc_lv<2> feature_extractor::ap_const_lv2_0 = "00";
const sc_lv<32> feature_extractor::ap_const_lv32_2 = "10";
const sc_lv<4> feature_extractor::ap_const_lv4_0 = "0000";
const sc_lv<32> feature_extractor::ap_const_lv32_8 = "1000";
const sc_lv<32> feature_extractor::ap_const_lv32_A = "1010";
const sc_lv<2> feature_extractor::ap_const_lv2_3 = "11";
const sc_lv<2> feature_extractor::ap_const_lv2_1 = "1";
const sc_lv<3> feature_extractor::ap_const_lv3_0 = "000";
const sc_lv<4> feature_extractor::ap_const_lv4_8 = "1000";
const sc_lv<4> feature_extractor::ap_const_lv4_1 = "1";
const sc_lv<32> feature_extractor::ap_const_lv32_17 = "10111";
const sc_lv<32> feature_extractor::ap_const_lv32_1E = "11110";
const sc_lv<8> feature_extractor::ap_const_lv8_FF = "11111111";
const sc_lv<23> feature_extractor::ap_const_lv23_0 = "00000000000000000000000";
const sc_lv<5> feature_extractor::ap_const_lv5_4 = "100";

feature_extractor::feature_extractor(sc_module_name name) : sc_module(name), mVcdFile(0) {
    C_U = new feature_extractor_C("C_U");
    C_U->clk(ap_clk);
    C_U->reset(ap_rst);
    C_U->address0(C_address0);
    C_U->ce0(C_ce0);
    C_U->we0(C_we0);
    C_U->d0(C_d0);
    C_U->q0(C_q0);
    S_U = new feature_extractor_C("S_U");
    S_U->clk(ap_clk);
    S_U->reset(ap_rst);
    S_U->address0(S_address0);
    S_U->ce0(S_ce0);
    S_U->we0(S_we0);
    S_U->d0(S_d0);
    S_U->q0(S_q0);
    grp_feature_extractor_convolve_fu_155 = new feature_extractor_convolve("grp_feature_extractor_convolve_fu_155");
    grp_feature_extractor_convolve_fu_155->ap_clk(ap_clk);
    grp_feature_extractor_convolve_fu_155->ap_rst(ap_rst);
    grp_feature_extractor_convolve_fu_155->ap_start(grp_feature_extractor_convolve_fu_155_ap_start);
    grp_feature_extractor_convolve_fu_155->ap_done(grp_feature_extractor_convolve_fu_155_ap_done);
    grp_feature_extractor_convolve_fu_155->ap_idle(grp_feature_extractor_convolve_fu_155_ap_idle);
    grp_feature_extractor_convolve_fu_155->ap_ready(grp_feature_extractor_convolve_fu_155_ap_ready);
    grp_feature_extractor_convolve_fu_155->A_address0(grp_feature_extractor_convolve_fu_155_A_address0);
    grp_feature_extractor_convolve_fu_155->A_ce0(grp_feature_extractor_convolve_fu_155_A_ce0);
    grp_feature_extractor_convolve_fu_155->A_q0(grp_feature_extractor_convolve_fu_155_A_q0);
    grp_feature_extractor_convolve_fu_155->B_address0(grp_feature_extractor_convolve_fu_155_B_address0);
    grp_feature_extractor_convolve_fu_155->B_ce0(grp_feature_extractor_convolve_fu_155_B_ce0);
    grp_feature_extractor_convolve_fu_155->B_q0(grp_feature_extractor_convolve_fu_155_B_q0);
    grp_feature_extractor_convolve_fu_155->tmp(grp_feature_extractor_convolve_fu_155_tmp);
    grp_feature_extractor_convolve_fu_155->conv_address0(grp_feature_extractor_convolve_fu_155_conv_address0);
    grp_feature_extractor_convolve_fu_155->conv_ce0(grp_feature_extractor_convolve_fu_155_conv_ce0);
    grp_feature_extractor_convolve_fu_155->conv_we0(grp_feature_extractor_convolve_fu_155_conv_we0);
    grp_feature_extractor_convolve_fu_155->conv_d0(grp_feature_extractor_convolve_fu_155_conv_d0);
    grp_feature_extractor_convolve_fu_155->conv_q0(grp_feature_extractor_convolve_fu_155_conv_q0);
    grp_feature_extractor_convolve_fu_155->tmp1(grp_feature_extractor_convolve_fu_155_tmp1);
    grp_feature_extractor_maxpool_fu_168 = new feature_extractor_maxpool("grp_feature_extractor_maxpool_fu_168");
    grp_feature_extractor_maxpool_fu_168->ap_clk(ap_clk);
    grp_feature_extractor_maxpool_fu_168->ap_rst(ap_rst);
    grp_feature_extractor_maxpool_fu_168->ap_start(grp_feature_extractor_maxpool_fu_168_ap_start);
    grp_feature_extractor_maxpool_fu_168->ap_done(grp_feature_extractor_maxpool_fu_168_ap_done);
    grp_feature_extractor_maxpool_fu_168->ap_idle(grp_feature_extractor_maxpool_fu_168_ap_idle);
    grp_feature_extractor_maxpool_fu_168->ap_ready(grp_feature_extractor_maxpool_fu_168_ap_ready);
    grp_feature_extractor_maxpool_fu_168->input_mat_address0(grp_feature_extractor_maxpool_fu_168_input_mat_address0);
    grp_feature_extractor_maxpool_fu_168->input_mat_ce0(grp_feature_extractor_maxpool_fu_168_input_mat_ce0);
    grp_feature_extractor_maxpool_fu_168->input_mat_q0(grp_feature_extractor_maxpool_fu_168_input_mat_q0);
    grp_feature_extractor_maxpool_fu_168->tmp_4(grp_feature_extractor_maxpool_fu_168_tmp_4);
    grp_feature_extractor_maxpool_fu_168->output_mat_address0(grp_feature_extractor_maxpool_fu_168_output_mat_address0);
    grp_feature_extractor_maxpool_fu_168->output_mat_ce0(grp_feature_extractor_maxpool_fu_168_output_mat_ce0);
    grp_feature_extractor_maxpool_fu_168->output_mat_we0(grp_feature_extractor_maxpool_fu_168_output_mat_we0);
    grp_feature_extractor_maxpool_fu_168->output_mat_d0(grp_feature_extractor_maxpool_fu_168_output_mat_d0);
    grp_feature_extractor_maxpool_fu_168->tmp_41(grp_feature_extractor_maxpool_fu_168_tmp_41);
    feature_extractor_fcmp_32ns_32ns_1_1_U15 = new feature_extractor_fcmp_32ns_32ns_1_1<1,1,32,32,1>("feature_extractor_fcmp_32ns_32ns_1_1_U15");
    feature_extractor_fcmp_32ns_32ns_1_1_U15->din0(tmp_5_fu_179_p0);
    feature_extractor_fcmp_32ns_32ns_1_1_U15->din1(tmp_5_fu_179_p1);
    feature_extractor_fcmp_32ns_32ns_1_1_U15->opcode(tmp_5_fu_179_opcode);
    feature_extractor_fcmp_32ns_32ns_1_1_U15->dout(tmp_5_fu_179_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_A_address0);
    sensitive << ( grp_feature_extractor_convolve_fu_155_A_address0 );
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );

    SC_METHOD(thread_A_ce0);
    sensitive << ( grp_feature_extractor_convolve_fu_155_A_ce0 );
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );

    SC_METHOD(thread_C_address0);
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );
    sensitive << ( tmp_8_fu_274_p1 );
    sensitive << ( grp_feature_extractor_convolve_fu_155_conv_address0 );
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );

    SC_METHOD(thread_C_ce0);
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );
    sensitive << ( grp_feature_extractor_convolve_fu_155_conv_ce0 );
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );

    SC_METHOD(thread_C_d0);
    sensitive << ( grp_feature_extractor_convolve_fu_155_conv_d0 );
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );

    SC_METHOD(thread_C_we0);
    sensitive << ( grp_feature_extractor_convolve_fu_155_conv_we0 );
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );

    SC_METHOD(thread_S_address0);
    sensitive << ( tmp_8_reg_381 );
    sensitive << ( grp_feature_extractor_maxpool_fu_168_input_mat_address0 );
    sensitive << ( ap_sig_cseq_ST_st9_fsm_8 );
    sensitive << ( ap_sig_cseq_ST_st11_fsm_10 );

    SC_METHOD(thread_S_ce0);
    sensitive << ( grp_feature_extractor_maxpool_fu_168_input_mat_ce0 );
    sensitive << ( ap_sig_cseq_ST_st9_fsm_8 );
    sensitive << ( ap_sig_cseq_ST_st11_fsm_10 );

    SC_METHOD(thread_S_d0);
    sensitive << ( C_load_reg_391 );
    sensitive << ( tmp_6_reg_398 );
    sensitive << ( ap_sig_cseq_ST_st9_fsm_8 );

    SC_METHOD(thread_S_we0);
    sensitive << ( ap_sig_cseq_ST_st9_fsm_8 );

    SC_METHOD(thread_W_address0);
    sensitive << ( grp_feature_extractor_convolve_fu_155_B_address0 );
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );

    SC_METHOD(thread_W_ce0);
    sensitive << ( grp_feature_extractor_convolve_fu_155_B_ce0 );
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_sig_cseq_ST_st10_fsm_9 );
    sensitive << ( exitcond_fu_327_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_sig_cseq_ST_st10_fsm_9 );
    sensitive << ( exitcond_fu_327_p2 );

    SC_METHOD(thread_ap_sig_bdd_114);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_123);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_132);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_197);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_222);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_231);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_27);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_60);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_69);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_84);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_98);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_cseq_ST_st10_fsm_9);
    sensitive << ( ap_sig_bdd_132 );

    SC_METHOD(thread_ap_sig_cseq_ST_st11_fsm_10);
    sensitive << ( ap_sig_bdd_231 );

    SC_METHOD(thread_ap_sig_cseq_ST_st1_fsm_0);
    sensitive << ( ap_sig_bdd_27 );

    SC_METHOD(thread_ap_sig_cseq_ST_st2_fsm_1);
    sensitive << ( ap_sig_bdd_60 );

    SC_METHOD(thread_ap_sig_cseq_ST_st3_fsm_2);
    sensitive << ( ap_sig_bdd_197 );

    SC_METHOD(thread_ap_sig_cseq_ST_st4_fsm_3);
    sensitive << ( ap_sig_bdd_69 );

    SC_METHOD(thread_ap_sig_cseq_ST_st5_fsm_4);
    sensitive << ( ap_sig_bdd_84 );

    SC_METHOD(thread_ap_sig_cseq_ST_st6_fsm_5);
    sensitive << ( ap_sig_bdd_98 );

    SC_METHOD(thread_ap_sig_cseq_ST_st7_fsm_6);
    sensitive << ( ap_sig_bdd_114 );

    SC_METHOD(thread_ap_sig_cseq_ST_st8_fsm_7);
    sensitive << ( ap_sig_bdd_123 );

    SC_METHOD(thread_ap_sig_cseq_ST_st9_fsm_8);
    sensitive << ( ap_sig_bdd_222 );

    SC_METHOD(thread_b_assign_to_int_fu_279_p1);
    sensitive << ( C_load_reg_391 );

    SC_METHOD(thread_exitcond1_fu_196_p2);
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( j_reg_110 );

    SC_METHOD(thread_exitcond1_i_fu_220_p2);
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( i_i_reg_121 );

    SC_METHOD(thread_exitcond2_fu_184_p2);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( i_reg_98 );

    SC_METHOD(thread_exitcond_fu_327_p2);
    sensitive << ( ap_sig_cseq_ST_st10_fsm_9 );
    sensitive << ( k_reg_143 );

    SC_METHOD(thread_exitcond_i_fu_253_p2);
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );
    sensitive << ( j_i_reg_132 );

    SC_METHOD(thread_feature_address0);
    sensitive << ( grp_feature_extractor_maxpool_fu_168_output_mat_address0 );
    sensitive << ( ap_sig_cseq_ST_st11_fsm_10 );

    SC_METHOD(thread_feature_ce0);
    sensitive << ( grp_feature_extractor_maxpool_fu_168_output_mat_ce0 );
    sensitive << ( ap_sig_cseq_ST_st11_fsm_10 );

    SC_METHOD(thread_feature_d0);
    sensitive << ( grp_feature_extractor_maxpool_fu_168_output_mat_d0 );
    sensitive << ( ap_sig_cseq_ST_st11_fsm_10 );

    SC_METHOD(thread_feature_we0);
    sensitive << ( grp_feature_extractor_maxpool_fu_168_output_mat_we0 );
    sensitive << ( ap_sig_cseq_ST_st11_fsm_10 );

    SC_METHOD(thread_grp_feature_extractor_convolve_fu_155_A_q0);
    sensitive << ( A_q0 );
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );

    SC_METHOD(thread_grp_feature_extractor_convolve_fu_155_B_q0);
    sensitive << ( W_q0 );
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );

    SC_METHOD(thread_grp_feature_extractor_convolve_fu_155_ap_start);
    sensitive << ( grp_feature_extractor_convolve_fu_155_ap_start_ap_start_reg );

    SC_METHOD(thread_grp_feature_extractor_convolve_fu_155_conv_q0);
    sensitive << ( C_q0 );
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );

    SC_METHOD(thread_grp_feature_extractor_convolve_fu_155_tmp);
    sensitive << ( i_reg_98 );
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );

    SC_METHOD(thread_grp_feature_extractor_convolve_fu_155_tmp1);
    sensitive << ( i_reg_98 );
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );

    SC_METHOD(thread_grp_feature_extractor_maxpool_fu_168_ap_start);
    sensitive << ( grp_feature_extractor_maxpool_fu_168_ap_start_ap_start_reg );

    SC_METHOD(thread_grp_feature_extractor_maxpool_fu_168_input_mat_q0);
    sensitive << ( S_q0 );
    sensitive << ( ap_sig_cseq_ST_st11_fsm_10 );

    SC_METHOD(thread_grp_feature_extractor_maxpool_fu_168_tmp_4);
    sensitive << ( k_reg_143 );
    sensitive << ( ap_sig_cseq_ST_st11_fsm_10 );

    SC_METHOD(thread_grp_feature_extractor_maxpool_fu_168_tmp_41);
    sensitive << ( k_reg_143 );
    sensitive << ( ap_sig_cseq_ST_st11_fsm_10 );

    SC_METHOD(thread_i_1_fu_190_p2);
    sensitive << ( i_reg_98 );

    SC_METHOD(thread_i_2_fu_226_p2);
    sensitive << ( i_i_reg_121 );

    SC_METHOD(thread_j_1_fu_202_p2);
    sensitive << ( j_reg_110 );

    SC_METHOD(thread_j_2_fu_259_p2);
    sensitive << ( j_i_reg_132 );

    SC_METHOD(thread_k_1_fu_333_p2);
    sensitive << ( k_reg_143 );

    SC_METHOD(thread_notlhs_fu_296_p2);
    sensitive << ( ap_sig_cseq_ST_st8_fsm_7 );
    sensitive << ( tmp_fu_282_p4 );

    SC_METHOD(thread_notrhs_fu_302_p2);
    sensitive << ( ap_sig_cseq_ST_st8_fsm_7 );
    sensitive << ( tmp_7_fu_292_p1 );

    SC_METHOD(thread_p_addr1_fu_236_p2);
    sensitive << ( p_addr_cast_reg_355 );
    sensitive << ( tmp_i_trn_cast_fu_232_p1 );

    SC_METHOD(thread_p_addr2_fu_249_p1);
    sensitive << ( tmp_1_fu_241_p3 );

    SC_METHOD(thread_p_addr3_fu_269_p2);
    sensitive << ( p_addr2_reg_368 );
    sensitive << ( tmp_i_trn_fu_265_p1 );

    SC_METHOD(thread_p_addr_cast_fu_216_p1);
    sensitive << ( tmp_2_fu_208_p3 );

    SC_METHOD(thread_tmp_1_fu_241_p3);
    sensitive << ( p_addr1_fu_236_p2 );

    SC_METHOD(thread_tmp_2_fu_208_p3);
    sensitive << ( j_reg_110 );

    SC_METHOD(thread_tmp_4_fu_308_p2);
    sensitive << ( notrhs_fu_302_p2 );
    sensitive << ( notlhs_fu_296_p2 );

    SC_METHOD(thread_tmp_5_fu_179_opcode);
    sensitive << ( ap_sig_cseq_ST_st8_fsm_7 );

    SC_METHOD(thread_tmp_5_fu_179_p0);
    sensitive << ( C_load_reg_391 );
    sensitive << ( ap_sig_cseq_ST_st8_fsm_7 );

    SC_METHOD(thread_tmp_5_fu_179_p1);
    sensitive << ( ap_sig_cseq_ST_st8_fsm_7 );

    SC_METHOD(thread_tmp_6_fu_314_p2);
    sensitive << ( tmp_4_fu_308_p2 );
    sensitive << ( tmp_5_fu_179_p2 );

    SC_METHOD(thread_tmp_7_fu_292_p1);
    sensitive << ( b_assign_to_int_fu_279_p1 );

    SC_METHOD(thread_tmp_8_fu_274_p1);
    sensitive << ( p_addr3_fu_269_p2 );

    SC_METHOD(thread_tmp_fu_282_p4);
    sensitive << ( b_assign_to_int_fu_279_p1 );

    SC_METHOD(thread_tmp_i_trn_cast_fu_232_p1);
    sensitive << ( i_i_reg_121 );

    SC_METHOD(thread_tmp_i_trn_fu_265_p1);
    sensitive << ( j_i_reg_132 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( exitcond1_fu_196_p2 );
    sensitive << ( exitcond1_i_fu_220_p2 );
    sensitive << ( exitcond_i_fu_253_p2 );
    sensitive << ( grp_feature_extractor_convolve_fu_155_ap_done );
    sensitive << ( grp_feature_extractor_maxpool_fu_168_ap_done );
    sensitive << ( exitcond2_fu_184_p2 );
    sensitive << ( exitcond_fu_327_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "00000000001";
    grp_feature_extractor_convolve_fu_155_ap_start_ap_start_reg = SC_LOGIC_0;
    grp_feature_extractor_maxpool_fu_168_ap_start_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "feature_extractor_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, A_address0, "(port)A_address0");
    sc_trace(mVcdFile, A_ce0, "(port)A_ce0");
    sc_trace(mVcdFile, A_q0, "(port)A_q0");
    sc_trace(mVcdFile, W_address0, "(port)W_address0");
    sc_trace(mVcdFile, W_ce0, "(port)W_ce0");
    sc_trace(mVcdFile, W_q0, "(port)W_q0");
    sc_trace(mVcdFile, feature_address0, "(port)feature_address0");
    sc_trace(mVcdFile, feature_ce0, "(port)feature_ce0");
    sc_trace(mVcdFile, feature_we0, "(port)feature_we0");
    sc_trace(mVcdFile, feature_d0, "(port)feature_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st1_fsm_0, "ap_sig_cseq_ST_st1_fsm_0");
    sc_trace(mVcdFile, ap_sig_bdd_27, "ap_sig_bdd_27");
    sc_trace(mVcdFile, i_1_fu_190_p2, "i_1_fu_190_p2");
    sc_trace(mVcdFile, i_1_reg_342, "i_1_reg_342");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st2_fsm_1, "ap_sig_cseq_ST_st2_fsm_1");
    sc_trace(mVcdFile, ap_sig_bdd_60, "ap_sig_bdd_60");
    sc_trace(mVcdFile, j_1_fu_202_p2, "j_1_fu_202_p2");
    sc_trace(mVcdFile, j_1_reg_350, "j_1_reg_350");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st4_fsm_3, "ap_sig_cseq_ST_st4_fsm_3");
    sc_trace(mVcdFile, ap_sig_bdd_69, "ap_sig_bdd_69");
    sc_trace(mVcdFile, p_addr_cast_fu_216_p1, "p_addr_cast_fu_216_p1");
    sc_trace(mVcdFile, p_addr_cast_reg_355, "p_addr_cast_reg_355");
    sc_trace(mVcdFile, exitcond1_fu_196_p2, "exitcond1_fu_196_p2");
    sc_trace(mVcdFile, i_2_fu_226_p2, "i_2_fu_226_p2");
    sc_trace(mVcdFile, i_2_reg_363, "i_2_reg_363");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st5_fsm_4, "ap_sig_cseq_ST_st5_fsm_4");
    sc_trace(mVcdFile, ap_sig_bdd_84, "ap_sig_bdd_84");
    sc_trace(mVcdFile, p_addr2_fu_249_p1, "p_addr2_fu_249_p1");
    sc_trace(mVcdFile, p_addr2_reg_368, "p_addr2_reg_368");
    sc_trace(mVcdFile, exitcond1_i_fu_220_p2, "exitcond1_i_fu_220_p2");
    sc_trace(mVcdFile, j_2_fu_259_p2, "j_2_fu_259_p2");
    sc_trace(mVcdFile, j_2_reg_376, "j_2_reg_376");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st6_fsm_5, "ap_sig_cseq_ST_st6_fsm_5");
    sc_trace(mVcdFile, ap_sig_bdd_98, "ap_sig_bdd_98");
    sc_trace(mVcdFile, tmp_8_fu_274_p1, "tmp_8_fu_274_p1");
    sc_trace(mVcdFile, tmp_8_reg_381, "tmp_8_reg_381");
    sc_trace(mVcdFile, exitcond_i_fu_253_p2, "exitcond_i_fu_253_p2");
    sc_trace(mVcdFile, C_q0, "C_q0");
    sc_trace(mVcdFile, C_load_reg_391, "C_load_reg_391");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st7_fsm_6, "ap_sig_cseq_ST_st7_fsm_6");
    sc_trace(mVcdFile, ap_sig_bdd_114, "ap_sig_bdd_114");
    sc_trace(mVcdFile, tmp_6_fu_314_p2, "tmp_6_fu_314_p2");
    sc_trace(mVcdFile, tmp_6_reg_398, "tmp_6_reg_398");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st8_fsm_7, "ap_sig_cseq_ST_st8_fsm_7");
    sc_trace(mVcdFile, ap_sig_bdd_123, "ap_sig_bdd_123");
    sc_trace(mVcdFile, k_1_fu_333_p2, "k_1_fu_333_p2");
    sc_trace(mVcdFile, k_1_reg_406, "k_1_reg_406");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st10_fsm_9, "ap_sig_cseq_ST_st10_fsm_9");
    sc_trace(mVcdFile, ap_sig_bdd_132, "ap_sig_bdd_132");
    sc_trace(mVcdFile, C_address0, "C_address0");
    sc_trace(mVcdFile, C_ce0, "C_ce0");
    sc_trace(mVcdFile, C_we0, "C_we0");
    sc_trace(mVcdFile, C_d0, "C_d0");
    sc_trace(mVcdFile, S_address0, "S_address0");
    sc_trace(mVcdFile, S_ce0, "S_ce0");
    sc_trace(mVcdFile, S_we0, "S_we0");
    sc_trace(mVcdFile, S_d0, "S_d0");
    sc_trace(mVcdFile, S_q0, "S_q0");
    sc_trace(mVcdFile, grp_feature_extractor_convolve_fu_155_ap_start, "grp_feature_extractor_convolve_fu_155_ap_start");
    sc_trace(mVcdFile, grp_feature_extractor_convolve_fu_155_ap_done, "grp_feature_extractor_convolve_fu_155_ap_done");
    sc_trace(mVcdFile, grp_feature_extractor_convolve_fu_155_ap_idle, "grp_feature_extractor_convolve_fu_155_ap_idle");
    sc_trace(mVcdFile, grp_feature_extractor_convolve_fu_155_ap_ready, "grp_feature_extractor_convolve_fu_155_ap_ready");
    sc_trace(mVcdFile, grp_feature_extractor_convolve_fu_155_A_address0, "grp_feature_extractor_convolve_fu_155_A_address0");
    sc_trace(mVcdFile, grp_feature_extractor_convolve_fu_155_A_ce0, "grp_feature_extractor_convolve_fu_155_A_ce0");
    sc_trace(mVcdFile, grp_feature_extractor_convolve_fu_155_A_q0, "grp_feature_extractor_convolve_fu_155_A_q0");
    sc_trace(mVcdFile, grp_feature_extractor_convolve_fu_155_B_address0, "grp_feature_extractor_convolve_fu_155_B_address0");
    sc_trace(mVcdFile, grp_feature_extractor_convolve_fu_155_B_ce0, "grp_feature_extractor_convolve_fu_155_B_ce0");
    sc_trace(mVcdFile, grp_feature_extractor_convolve_fu_155_B_q0, "grp_feature_extractor_convolve_fu_155_B_q0");
    sc_trace(mVcdFile, grp_feature_extractor_convolve_fu_155_tmp, "grp_feature_extractor_convolve_fu_155_tmp");
    sc_trace(mVcdFile, grp_feature_extractor_convolve_fu_155_conv_address0, "grp_feature_extractor_convolve_fu_155_conv_address0");
    sc_trace(mVcdFile, grp_feature_extractor_convolve_fu_155_conv_ce0, "grp_feature_extractor_convolve_fu_155_conv_ce0");
    sc_trace(mVcdFile, grp_feature_extractor_convolve_fu_155_conv_we0, "grp_feature_extractor_convolve_fu_155_conv_we0");
    sc_trace(mVcdFile, grp_feature_extractor_convolve_fu_155_conv_d0, "grp_feature_extractor_convolve_fu_155_conv_d0");
    sc_trace(mVcdFile, grp_feature_extractor_convolve_fu_155_conv_q0, "grp_feature_extractor_convolve_fu_155_conv_q0");
    sc_trace(mVcdFile, grp_feature_extractor_convolve_fu_155_tmp1, "grp_feature_extractor_convolve_fu_155_tmp1");
    sc_trace(mVcdFile, grp_feature_extractor_maxpool_fu_168_ap_start, "grp_feature_extractor_maxpool_fu_168_ap_start");
    sc_trace(mVcdFile, grp_feature_extractor_maxpool_fu_168_ap_done, "grp_feature_extractor_maxpool_fu_168_ap_done");
    sc_trace(mVcdFile, grp_feature_extractor_maxpool_fu_168_ap_idle, "grp_feature_extractor_maxpool_fu_168_ap_idle");
    sc_trace(mVcdFile, grp_feature_extractor_maxpool_fu_168_ap_ready, "grp_feature_extractor_maxpool_fu_168_ap_ready");
    sc_trace(mVcdFile, grp_feature_extractor_maxpool_fu_168_input_mat_address0, "grp_feature_extractor_maxpool_fu_168_input_mat_address0");
    sc_trace(mVcdFile, grp_feature_extractor_maxpool_fu_168_input_mat_ce0, "grp_feature_extractor_maxpool_fu_168_input_mat_ce0");
    sc_trace(mVcdFile, grp_feature_extractor_maxpool_fu_168_input_mat_q0, "grp_feature_extractor_maxpool_fu_168_input_mat_q0");
    sc_trace(mVcdFile, grp_feature_extractor_maxpool_fu_168_tmp_4, "grp_feature_extractor_maxpool_fu_168_tmp_4");
    sc_trace(mVcdFile, grp_feature_extractor_maxpool_fu_168_output_mat_address0, "grp_feature_extractor_maxpool_fu_168_output_mat_address0");
    sc_trace(mVcdFile, grp_feature_extractor_maxpool_fu_168_output_mat_ce0, "grp_feature_extractor_maxpool_fu_168_output_mat_ce0");
    sc_trace(mVcdFile, grp_feature_extractor_maxpool_fu_168_output_mat_we0, "grp_feature_extractor_maxpool_fu_168_output_mat_we0");
    sc_trace(mVcdFile, grp_feature_extractor_maxpool_fu_168_output_mat_d0, "grp_feature_extractor_maxpool_fu_168_output_mat_d0");
    sc_trace(mVcdFile, grp_feature_extractor_maxpool_fu_168_tmp_41, "grp_feature_extractor_maxpool_fu_168_tmp_41");
    sc_trace(mVcdFile, i_reg_98, "i_reg_98");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st3_fsm_2, "ap_sig_cseq_ST_st3_fsm_2");
    sc_trace(mVcdFile, ap_sig_bdd_197, "ap_sig_bdd_197");
    sc_trace(mVcdFile, j_reg_110, "j_reg_110");
    sc_trace(mVcdFile, exitcond2_fu_184_p2, "exitcond2_fu_184_p2");
    sc_trace(mVcdFile, i_i_reg_121, "i_i_reg_121");
    sc_trace(mVcdFile, j_i_reg_132, "j_i_reg_132");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st9_fsm_8, "ap_sig_cseq_ST_st9_fsm_8");
    sc_trace(mVcdFile, ap_sig_bdd_222, "ap_sig_bdd_222");
    sc_trace(mVcdFile, k_reg_143, "k_reg_143");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st11_fsm_10, "ap_sig_cseq_ST_st11_fsm_10");
    sc_trace(mVcdFile, ap_sig_bdd_231, "ap_sig_bdd_231");
    sc_trace(mVcdFile, grp_feature_extractor_convolve_fu_155_ap_start_ap_start_reg, "grp_feature_extractor_convolve_fu_155_ap_start_ap_start_reg");
    sc_trace(mVcdFile, grp_feature_extractor_maxpool_fu_168_ap_start_ap_start_reg, "grp_feature_extractor_maxpool_fu_168_ap_start_ap_start_reg");
    sc_trace(mVcdFile, exitcond_fu_327_p2, "exitcond_fu_327_p2");
    sc_trace(mVcdFile, tmp_5_fu_179_p0, "tmp_5_fu_179_p0");
    sc_trace(mVcdFile, tmp_5_fu_179_p1, "tmp_5_fu_179_p1");
    sc_trace(mVcdFile, tmp_2_fu_208_p3, "tmp_2_fu_208_p3");
    sc_trace(mVcdFile, tmp_i_trn_cast_fu_232_p1, "tmp_i_trn_cast_fu_232_p1");
    sc_trace(mVcdFile, p_addr1_fu_236_p2, "p_addr1_fu_236_p2");
    sc_trace(mVcdFile, tmp_1_fu_241_p3, "tmp_1_fu_241_p3");
    sc_trace(mVcdFile, tmp_i_trn_fu_265_p1, "tmp_i_trn_fu_265_p1");
    sc_trace(mVcdFile, p_addr3_fu_269_p2, "p_addr3_fu_269_p2");
    sc_trace(mVcdFile, b_assign_to_int_fu_279_p1, "b_assign_to_int_fu_279_p1");
    sc_trace(mVcdFile, tmp_fu_282_p4, "tmp_fu_282_p4");
    sc_trace(mVcdFile, tmp_7_fu_292_p1, "tmp_7_fu_292_p1");
    sc_trace(mVcdFile, notrhs_fu_302_p2, "notrhs_fu_302_p2");
    sc_trace(mVcdFile, notlhs_fu_296_p2, "notlhs_fu_296_p2");
    sc_trace(mVcdFile, tmp_4_fu_308_p2, "tmp_4_fu_308_p2");
    sc_trace(mVcdFile, tmp_5_fu_179_p2, "tmp_5_fu_179_p2");
    sc_trace(mVcdFile, tmp_5_fu_179_opcode, "tmp_5_fu_179_opcode");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("feature_extractor.hdltvin.dat");
    mHdltvoutHandle.open("feature_extractor.hdltvout.dat");
}

feature_extractor::~feature_extractor() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete C_U;
    delete S_U;
    delete grp_feature_extractor_convolve_fu_155;
    delete grp_feature_extractor_maxpool_fu_168;
    delete feature_extractor_fcmp_32ns_32ns_1_1_U15;
}

void feature_extractor::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_st1_fsm_0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_feature_extractor_convolve_fu_155_ap_start_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_184_p2.read()))) {
            grp_feature_extractor_convolve_fu_155_ap_start_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_feature_extractor_convolve_fu_155_ap_ready.read())) {
            grp_feature_extractor_convolve_fu_155_ap_start_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_feature_extractor_maxpool_fu_168_ap_start_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st10_fsm_9.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_327_p2.read()))) {
            grp_feature_extractor_maxpool_fu_168_ap_start_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_feature_extractor_maxpool_fu_168_ap_ready.read())) {
            grp_feature_extractor_maxpool_fu_168_ap_start_ap_start_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_fu_253_p2.read()))) {
        i_i_reg_121 = i_2_reg_363.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) && 
                esl_seteq<1,1,1>(exitcond1_fu_196_p2.read(), ap_const_lv1_0))) {
        i_i_reg_121 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && 
         !esl_seteq<1,1,1>(ap_const_logic_0, grp_feature_extractor_convolve_fu_155_ap_done.read()))) {
        i_reg_98 = i_1_reg_342.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        i_reg_98 = ap_const_lv2_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_i_fu_220_p2.read()))) {
        j_i_reg_132 = ap_const_lv4_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st9_fsm_8.read())) {
        j_i_reg_132 = j_2_reg_376.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_184_p2.read()))) {
        j_reg_110 = ap_const_lv2_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_i_fu_220_p2.read()))) {
        j_reg_110 = j_1_reg_350.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) && 
         !esl_seteq<1,1,1>(exitcond1_fu_196_p2.read(), ap_const_lv1_0))) {
        k_reg_143 = ap_const_lv2_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st11_fsm_10.read()) && 
                !esl_seteq<1,1,1>(ap_const_logic_0, grp_feature_extractor_maxpool_fu_168_ap_done.read()))) {
        k_reg_143 = k_1_reg_406.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st7_fsm_6.read())) {
        C_load_reg_391 = C_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read())) {
        i_1_reg_342 = i_1_fu_190_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read())) {
        i_2_reg_363 = i_2_fu_226_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read())) {
        j_1_reg_350 = j_1_fu_202_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read())) {
        j_2_reg_376 = j_2_fu_259_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st10_fsm_9.read())) {
        k_1_reg_406 = k_1_fu_333_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_i_fu_220_p2.read()))) {
        p_addr2_reg_368 = p_addr2_fu_249_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) && esl_seteq<1,1,1>(exitcond1_fu_196_p2.read(), ap_const_lv1_0))) {
        p_addr_cast_reg_355 = p_addr_cast_fu_216_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_7.read())) {
        tmp_6_reg_398 = tmp_6_fu_314_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_fu_253_p2.read()))) {
        tmp_8_reg_381 = tmp_8_fu_274_p1.read();
    }
}

void feature_extractor::thread_A_address0() {
    A_address0 = grp_feature_extractor_convolve_fu_155_A_address0.read();
}

void feature_extractor::thread_A_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read())) {
        A_ce0 = grp_feature_extractor_convolve_fu_155_A_ce0.read();
    } else {
        A_ce0 = ap_const_logic_0;
    }
}

void feature_extractor::thread_C_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read())) {
        C_address0 =  (sc_lv<8>) (tmp_8_fu_274_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read())) {
        C_address0 = grp_feature_extractor_convolve_fu_155_conv_address0.read();
    } else {
        C_address0 = "XXXXXXXX";
    }
}

void feature_extractor::thread_C_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read())) {
        C_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read())) {
        C_ce0 = grp_feature_extractor_convolve_fu_155_conv_ce0.read();
    } else {
        C_ce0 = ap_const_logic_0;
    }
}

void feature_extractor::thread_C_d0() {
    C_d0 = grp_feature_extractor_convolve_fu_155_conv_d0.read();
}

void feature_extractor::thread_C_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read())) {
        C_we0 = grp_feature_extractor_convolve_fu_155_conv_we0.read();
    } else {
        C_we0 = ap_const_logic_0;
    }
}

void feature_extractor::thread_S_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st9_fsm_8.read())) {
        S_address0 =  (sc_lv<8>) (tmp_8_reg_381.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st11_fsm_10.read())) {
        S_address0 = grp_feature_extractor_maxpool_fu_168_input_mat_address0.read();
    } else {
        S_address0 = "XXXXXXXX";
    }
}

void feature_extractor::thread_S_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st9_fsm_8.read())) {
        S_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st11_fsm_10.read())) {
        S_ce0 = grp_feature_extractor_maxpool_fu_168_input_mat_ce0.read();
    } else {
        S_ce0 = ap_const_logic_0;
    }
}

void feature_extractor::thread_S_d0() {
    S_d0 = (!tmp_6_reg_398.read()[0].is_01())? sc_lv<32>(): ((tmp_6_reg_398.read()[0].to_bool())? ap_const_lv32_0: C_load_reg_391.read());
}

void feature_extractor::thread_S_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st9_fsm_8.read()))) {
        S_we0 = ap_const_logic_1;
    } else {
        S_we0 = ap_const_logic_0;
    }
}

void feature_extractor::thread_W_address0() {
    W_address0 = grp_feature_extractor_convolve_fu_155_B_address0.read();
}

void feature_extractor::thread_W_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read())) {
        W_ce0 = grp_feature_extractor_convolve_fu_155_B_ce0.read();
    } else {
        W_ce0 = ap_const_logic_0;
    }
}

void feature_extractor::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st10_fsm_9.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_327_p2.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void feature_extractor::thread_ap_idle() {
    if ((!esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void feature_extractor::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st10_fsm_9.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_327_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void feature_extractor::thread_ap_sig_bdd_114() {
    ap_sig_bdd_114 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(6, 6));
}

void feature_extractor::thread_ap_sig_bdd_123() {
    ap_sig_bdd_123 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(7, 7));
}

void feature_extractor::thread_ap_sig_bdd_132() {
    ap_sig_bdd_132 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(9, 9));
}

void feature_extractor::thread_ap_sig_bdd_197() {
    ap_sig_bdd_197 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(2, 2));
}

void feature_extractor::thread_ap_sig_bdd_222() {
    ap_sig_bdd_222 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(8, 8));
}

void feature_extractor::thread_ap_sig_bdd_231() {
    ap_sig_bdd_231 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(10, 10));
}

void feature_extractor::thread_ap_sig_bdd_27() {
    ap_sig_bdd_27 = esl_seteq<1,1,1>(ap_CS_fsm.read().range(0, 0), ap_const_lv1_1);
}

void feature_extractor::thread_ap_sig_bdd_60() {
    ap_sig_bdd_60 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(1, 1));
}

void feature_extractor::thread_ap_sig_bdd_69() {
    ap_sig_bdd_69 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(3, 3));
}

void feature_extractor::thread_ap_sig_bdd_84() {
    ap_sig_bdd_84 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(4, 4));
}

void feature_extractor::thread_ap_sig_bdd_98() {
    ap_sig_bdd_98 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(5, 5));
}

void feature_extractor::thread_ap_sig_cseq_ST_st10_fsm_9() {
    if (ap_sig_bdd_132.read()) {
        ap_sig_cseq_ST_st10_fsm_9 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st10_fsm_9 = ap_const_logic_0;
    }
}

void feature_extractor::thread_ap_sig_cseq_ST_st11_fsm_10() {
    if (ap_sig_bdd_231.read()) {
        ap_sig_cseq_ST_st11_fsm_10 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st11_fsm_10 = ap_const_logic_0;
    }
}

void feature_extractor::thread_ap_sig_cseq_ST_st1_fsm_0() {
    if (ap_sig_bdd_27.read()) {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    }
}

void feature_extractor::thread_ap_sig_cseq_ST_st2_fsm_1() {
    if (ap_sig_bdd_60.read()) {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    }
}

void feature_extractor::thread_ap_sig_cseq_ST_st3_fsm_2() {
    if (ap_sig_bdd_197.read()) {
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    }
}

void feature_extractor::thread_ap_sig_cseq_ST_st4_fsm_3() {
    if (ap_sig_bdd_69.read()) {
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    }
}

void feature_extractor::thread_ap_sig_cseq_ST_st5_fsm_4() {
    if (ap_sig_bdd_84.read()) {
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_0;
    }
}

void feature_extractor::thread_ap_sig_cseq_ST_st6_fsm_5() {
    if (ap_sig_bdd_98.read()) {
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_0;
    }
}

void feature_extractor::thread_ap_sig_cseq_ST_st7_fsm_6() {
    if (ap_sig_bdd_114.read()) {
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_0;
    }
}

void feature_extractor::thread_ap_sig_cseq_ST_st8_fsm_7() {
    if (ap_sig_bdd_123.read()) {
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_0;
    }
}

void feature_extractor::thread_ap_sig_cseq_ST_st9_fsm_8() {
    if (ap_sig_bdd_222.read()) {
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_0;
    }
}

void feature_extractor::thread_b_assign_to_int_fu_279_p1() {
    b_assign_to_int_fu_279_p1 = C_load_reg_391.read();
}

void feature_extractor::thread_exitcond1_fu_196_p2() {
    exitcond1_fu_196_p2 = (!j_reg_110.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(j_reg_110.read() == ap_const_lv2_3);
}

void feature_extractor::thread_exitcond1_i_fu_220_p2() {
    exitcond1_i_fu_220_p2 = (!i_i_reg_121.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(i_i_reg_121.read() == ap_const_lv4_8);
}

void feature_extractor::thread_exitcond2_fu_184_p2() {
    exitcond2_fu_184_p2 = (!i_reg_98.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_98.read() == ap_const_lv2_3);
}

void feature_extractor::thread_exitcond_fu_327_p2() {
    exitcond_fu_327_p2 = (!k_reg_143.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(k_reg_143.read() == ap_const_lv2_3);
}

void feature_extractor::thread_exitcond_i_fu_253_p2() {
    exitcond_i_fu_253_p2 = (!j_i_reg_132.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(j_i_reg_132.read() == ap_const_lv4_8);
}

void feature_extractor::thread_feature_address0() {
    feature_address0 = grp_feature_extractor_maxpool_fu_168_output_mat_address0.read();
}

void feature_extractor::thread_feature_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st11_fsm_10.read())) {
        feature_ce0 = grp_feature_extractor_maxpool_fu_168_output_mat_ce0.read();
    } else {
        feature_ce0 = ap_const_logic_0;
    }
}

void feature_extractor::thread_feature_d0() {
    feature_d0 = grp_feature_extractor_maxpool_fu_168_output_mat_d0.read();
}

void feature_extractor::thread_feature_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st11_fsm_10.read())) {
        feature_we0 = grp_feature_extractor_maxpool_fu_168_output_mat_we0.read();
    } else {
        feature_we0 = ap_const_logic_0;
    }
}

void feature_extractor::thread_grp_feature_extractor_convolve_fu_155_A_q0() {
    grp_feature_extractor_convolve_fu_155_A_q0 = A_q0.read();
}

void feature_extractor::thread_grp_feature_extractor_convolve_fu_155_B_q0() {
    grp_feature_extractor_convolve_fu_155_B_q0 = W_q0.read();
}

void feature_extractor::thread_grp_feature_extractor_convolve_fu_155_ap_start() {
    grp_feature_extractor_convolve_fu_155_ap_start = grp_feature_extractor_convolve_fu_155_ap_start_ap_start_reg.read();
}

void feature_extractor::thread_grp_feature_extractor_convolve_fu_155_conv_q0() {
    grp_feature_extractor_convolve_fu_155_conv_q0 = C_q0.read();
}

void feature_extractor::thread_grp_feature_extractor_convolve_fu_155_tmp() {
    grp_feature_extractor_convolve_fu_155_tmp = i_reg_98.read();
}

void feature_extractor::thread_grp_feature_extractor_convolve_fu_155_tmp1() {
    grp_feature_extractor_convolve_fu_155_tmp1 = i_reg_98.read();
}

void feature_extractor::thread_grp_feature_extractor_maxpool_fu_168_ap_start() {
    grp_feature_extractor_maxpool_fu_168_ap_start = grp_feature_extractor_maxpool_fu_168_ap_start_ap_start_reg.read();
}

void feature_extractor::thread_grp_feature_extractor_maxpool_fu_168_input_mat_q0() {
    grp_feature_extractor_maxpool_fu_168_input_mat_q0 = S_q0.read();
}

void feature_extractor::thread_grp_feature_extractor_maxpool_fu_168_tmp_4() {
    grp_feature_extractor_maxpool_fu_168_tmp_4 = k_reg_143.read();
}

void feature_extractor::thread_grp_feature_extractor_maxpool_fu_168_tmp_41() {
    grp_feature_extractor_maxpool_fu_168_tmp_41 = k_reg_143.read();
}

void feature_extractor::thread_i_1_fu_190_p2() {
    i_1_fu_190_p2 = (!i_reg_98.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(i_reg_98.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void feature_extractor::thread_i_2_fu_226_p2() {
    i_2_fu_226_p2 = (!i_i_reg_121.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i_i_reg_121.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void feature_extractor::thread_j_1_fu_202_p2() {
    j_1_fu_202_p2 = (!j_reg_110.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(j_reg_110.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void feature_extractor::thread_j_2_fu_259_p2() {
    j_2_fu_259_p2 = (!j_i_reg_132.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(j_i_reg_132.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void feature_extractor::thread_k_1_fu_333_p2() {
    k_1_fu_333_p2 = (!k_reg_143.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(k_reg_143.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void feature_extractor::thread_notlhs_fu_296_p2() {
    notlhs_fu_296_p2 = (!tmp_fu_282_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_fu_282_p4.read() != ap_const_lv8_FF);
}

void feature_extractor::thread_notrhs_fu_302_p2() {
    notrhs_fu_302_p2 = (!tmp_7_fu_292_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_7_fu_292_p1.read() == ap_const_lv23_0);
}

void feature_extractor::thread_p_addr1_fu_236_p2() {
    p_addr1_fu_236_p2 = (!tmp_i_trn_cast_fu_232_p1.read().is_01() || !p_addr_cast_reg_355.read().is_01())? sc_lv<6>(): (sc_biguint<6>(tmp_i_trn_cast_fu_232_p1.read()) + sc_biguint<6>(p_addr_cast_reg_355.read()));
}

void feature_extractor::thread_p_addr2_fu_249_p1() {
    p_addr2_fu_249_p1 = esl_zext<32,9>(tmp_1_fu_241_p3.read());
}

void feature_extractor::thread_p_addr3_fu_269_p2() {
    p_addr3_fu_269_p2 = (!tmp_i_trn_fu_265_p1.read().is_01() || !p_addr2_reg_368.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_i_trn_fu_265_p1.read()) + sc_biguint<32>(p_addr2_reg_368.read()));
}

void feature_extractor::thread_p_addr_cast_fu_216_p1() {
    p_addr_cast_fu_216_p1 = esl_zext<6,5>(tmp_2_fu_208_p3.read());
}

void feature_extractor::thread_tmp_1_fu_241_p3() {
    tmp_1_fu_241_p3 = esl_concat<6,3>(p_addr1_fu_236_p2.read(), ap_const_lv3_0);
}

void feature_extractor::thread_tmp_2_fu_208_p3() {
    tmp_2_fu_208_p3 = esl_concat<2,3>(j_reg_110.read(), ap_const_lv3_0);
}

void feature_extractor::thread_tmp_4_fu_308_p2() {
    tmp_4_fu_308_p2 = (notrhs_fu_302_p2.read() | notlhs_fu_296_p2.read());
}

void feature_extractor::thread_tmp_5_fu_179_opcode() {
    tmp_5_fu_179_opcode = ap_const_lv5_4;
}

void feature_extractor::thread_tmp_5_fu_179_p0() {
    tmp_5_fu_179_p0 = C_load_reg_391.read();
}

void feature_extractor::thread_tmp_5_fu_179_p1() {
    tmp_5_fu_179_p1 = ap_const_lv32_0;
}

void feature_extractor::thread_tmp_6_fu_314_p2() {
    tmp_6_fu_314_p2 = (tmp_4_fu_308_p2.read() & tmp_5_fu_179_p2.read());
}

void feature_extractor::thread_tmp_7_fu_292_p1() {
    tmp_7_fu_292_p1 = b_assign_to_int_fu_279_p1.read().range(23-1, 0);
}

void feature_extractor::thread_tmp_8_fu_274_p1() {
    tmp_8_fu_274_p1 = esl_zext<64,32>(p_addr3_fu_269_p2.read());
}

void feature_extractor::thread_tmp_fu_282_p4() {
    tmp_fu_282_p4 = b_assign_to_int_fu_279_p1.read().range(30, 23);
}

void feature_extractor::thread_tmp_i_trn_cast_fu_232_p1() {
    tmp_i_trn_cast_fu_232_p1 = esl_zext<6,4>(i_i_reg_121.read());
}

void feature_extractor::thread_tmp_i_trn_fu_265_p1() {
    tmp_i_trn_fu_265_p1 = esl_zext<32,4>(j_i_reg_132.read());
}

void feature_extractor::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            }
            break;
        case 2 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_184_p2.read())) {
                ap_NS_fsm = ap_ST_st4_fsm_3;
            } else {
                ap_NS_fsm = ap_ST_st3_fsm_2;
            }
            break;
        case 4 : 
            if (!esl_seteq<1,1,1>(ap_const_logic_0, grp_feature_extractor_convolve_fu_155_ap_done.read())) {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st3_fsm_2;
            }
            break;
        case 8 : 
            if (esl_seteq<1,1,1>(exitcond1_fu_196_p2.read(), ap_const_lv1_0)) {
                ap_NS_fsm = ap_ST_st5_fsm_4;
            } else {
                ap_NS_fsm = ap_ST_st10_fsm_9;
            }
            break;
        case 16 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_i_fu_220_p2.read())) {
                ap_NS_fsm = ap_ST_st4_fsm_3;
            } else {
                ap_NS_fsm = ap_ST_st6_fsm_5;
            }
            break;
        case 32 : 
            if (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_fu_253_p2.read())) {
                ap_NS_fsm = ap_ST_st7_fsm_6;
            } else {
                ap_NS_fsm = ap_ST_st5_fsm_4;
            }
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_st8_fsm_7;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_st9_fsm_8;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_st6_fsm_5;
            break;
        case 512 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_327_p2.read())) {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            } else {
                ap_NS_fsm = ap_ST_st11_fsm_10;
            }
            break;
        case 1024 : 
            if (!esl_seteq<1,1,1>(ap_const_logic_0, grp_feature_extractor_maxpool_fu_168_ap_done.read())) {
                ap_NS_fsm = ap_ST_st10_fsm_9;
            } else {
                ap_NS_fsm = ap_ST_st11_fsm_10;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<11>) ("XXXXXXXXXXX");
            break;
    }
}

void feature_extractor::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"A_address0\" :  \"" << A_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"A_ce0\" :  \"" << A_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"A_q0\" :  \"" << A_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"W_address0\" :  \"" << W_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"W_ce0\" :  \"" << W_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"W_q0\" :  \"" << W_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"feature_address0\" :  \"" << feature_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"feature_ce0\" :  \"" << feature_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"feature_we0\" :  \"" << feature_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"feature_d0\" :  \"" << feature_d0.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

