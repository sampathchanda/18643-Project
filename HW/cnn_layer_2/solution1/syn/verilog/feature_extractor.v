// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.2
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="feature_extractor,hls_ip_2015_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.412000,HLS_SYN_LAT=91686,HLS_SYN_TPT=none,HLS_SYN_MEM=2,HLS_SYN_DSP=5,HLS_SYN_FF=1803,HLS_SYN_LUT=3329}" *)

module feature_extractor (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        A_address0,
        A_ce0,
        A_q0,
        W_address0,
        W_ce0,
        W_q0,
        feature_address0,
        feature_ce0,
        feature_we0,
        feature_d0
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 11'b1;
parameter    ap_ST_st2_fsm_1 = 11'b10;
parameter    ap_ST_st3_fsm_2 = 11'b100;
parameter    ap_ST_st4_fsm_3 = 11'b1000;
parameter    ap_ST_st5_fsm_4 = 11'b10000;
parameter    ap_ST_st6_fsm_5 = 11'b100000;
parameter    ap_ST_st7_fsm_6 = 11'b1000000;
parameter    ap_ST_st8_fsm_7 = 11'b10000000;
parameter    ap_ST_st9_fsm_8 = 11'b100000000;
parameter    ap_ST_st10_fsm_9 = 11'b1000000000;
parameter    ap_ST_st11_fsm_10 = 11'b10000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv2_3 = 2'b11;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv4_8 = 4'b1000;
parameter    ap_const_lv4_1 = 4'b1;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv32_1E = 32'b11110;
parameter    ap_const_lv8_FF = 8'b11111111;
parameter    ap_const_lv23_0 = 23'b00000000000000000000000;
parameter    ap_const_lv5_4 = 5'b100;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [7:0] A_address0;
output   A_ce0;
input  [31:0] A_q0;
output  [6:0] W_address0;
output   W_ce0;
input  [31:0] W_q0;
output  [5:0] feature_address0;
output   feature_ce0;
output   feature_we0;
output  [31:0] feature_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg A_ce0;
reg W_ce0;
reg feature_ce0;
reg feature_we0;
(* fsm_encoding = "none" *) reg   [10:0] ap_CS_fsm = 11'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_27;
wire   [1:0] i_1_fu_190_p2;
reg   [1:0] i_1_reg_342;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_bdd_60;
wire   [1:0] j_1_fu_202_p2;
reg   [1:0] j_1_reg_350;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_bdd_69;
wire   [5:0] p_addr_cast_fu_216_p1;
reg   [5:0] p_addr_cast_reg_355;
wire   [0:0] exitcond1_fu_196_p2;
wire   [3:0] i_2_fu_226_p2;
reg   [3:0] i_2_reg_363;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_bdd_84;
wire   [31:0] p_addr2_fu_249_p1;
reg   [31:0] p_addr2_reg_368;
wire   [0:0] exitcond1_i_fu_220_p2;
wire   [3:0] j_2_fu_259_p2;
reg   [3:0] j_2_reg_376;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_bdd_98;
wire   [63:0] tmp_8_fu_274_p1;
reg   [63:0] tmp_8_reg_381;
wire   [0:0] exitcond_i_fu_253_p2;
wire   [31:0] C_q0;
reg   [31:0] C_load_reg_391;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_bdd_114;
wire   [0:0] tmp_6_fu_314_p2;
reg   [0:0] tmp_6_reg_398;
reg    ap_sig_cseq_ST_st8_fsm_7;
reg    ap_sig_bdd_123;
wire   [1:0] k_1_fu_333_p2;
reg   [1:0] k_1_reg_406;
reg    ap_sig_cseq_ST_st10_fsm_9;
reg    ap_sig_bdd_132;
reg   [7:0] C_address0;
reg    C_ce0;
reg    C_we0;
wire   [31:0] C_d0;
reg   [7:0] S_address0;
reg    S_ce0;
reg    S_we0;
wire   [31:0] S_d0;
wire   [31:0] S_q0;
wire    grp_feature_extractor_convolve_fu_155_ap_start;
wire    grp_feature_extractor_convolve_fu_155_ap_done;
wire    grp_feature_extractor_convolve_fu_155_ap_idle;
wire    grp_feature_extractor_convolve_fu_155_ap_ready;
wire   [7:0] grp_feature_extractor_convolve_fu_155_A_address0;
wire    grp_feature_extractor_convolve_fu_155_A_ce0;
wire   [31:0] grp_feature_extractor_convolve_fu_155_A_q0;
wire   [6:0] grp_feature_extractor_convolve_fu_155_B_address0;
wire    grp_feature_extractor_convolve_fu_155_B_ce0;
wire   [31:0] grp_feature_extractor_convolve_fu_155_B_q0;
wire   [1:0] grp_feature_extractor_convolve_fu_155_tmp;
wire   [7:0] grp_feature_extractor_convolve_fu_155_conv_address0;
wire    grp_feature_extractor_convolve_fu_155_conv_ce0;
wire    grp_feature_extractor_convolve_fu_155_conv_we0;
wire   [31:0] grp_feature_extractor_convolve_fu_155_conv_d0;
wire   [31:0] grp_feature_extractor_convolve_fu_155_conv_q0;
wire   [1:0] grp_feature_extractor_convolve_fu_155_tmp1;
wire    grp_feature_extractor_maxpool_fu_168_ap_start;
wire    grp_feature_extractor_maxpool_fu_168_ap_done;
wire    grp_feature_extractor_maxpool_fu_168_ap_idle;
wire    grp_feature_extractor_maxpool_fu_168_ap_ready;
wire   [7:0] grp_feature_extractor_maxpool_fu_168_input_mat_address0;
wire    grp_feature_extractor_maxpool_fu_168_input_mat_ce0;
wire   [31:0] grp_feature_extractor_maxpool_fu_168_input_mat_q0;
wire   [1:0] grp_feature_extractor_maxpool_fu_168_tmp_4;
wire   [5:0] grp_feature_extractor_maxpool_fu_168_output_mat_address0;
wire    grp_feature_extractor_maxpool_fu_168_output_mat_ce0;
wire    grp_feature_extractor_maxpool_fu_168_output_mat_we0;
wire   [31:0] grp_feature_extractor_maxpool_fu_168_output_mat_d0;
wire   [1:0] grp_feature_extractor_maxpool_fu_168_tmp_41;
reg   [1:0] i_reg_98;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_bdd_197;
reg   [1:0] j_reg_110;
wire   [0:0] exitcond2_fu_184_p2;
reg   [3:0] i_i_reg_121;
reg   [3:0] j_i_reg_132;
reg    ap_sig_cseq_ST_st9_fsm_8;
reg    ap_sig_bdd_222;
reg   [1:0] k_reg_143;
reg    ap_sig_cseq_ST_st11_fsm_10;
reg    ap_sig_bdd_231;
reg    grp_feature_extractor_convolve_fu_155_ap_start_ap_start_reg = 1'b0;
reg    grp_feature_extractor_maxpool_fu_168_ap_start_ap_start_reg = 1'b0;
wire   [0:0] exitcond_fu_327_p2;
wire   [31:0] tmp_5_fu_179_p0;
wire   [31:0] tmp_5_fu_179_p1;
wire   [4:0] tmp_2_fu_208_p3;
wire   [5:0] tmp_i_trn_cast_fu_232_p1;
wire   [5:0] p_addr1_fu_236_p2;
wire   [8:0] tmp_1_fu_241_p3;
wire   [31:0] tmp_i_trn_fu_265_p1;
wire   [31:0] p_addr3_fu_269_p2;
wire   [31:0] b_assign_to_int_fu_279_p1;
wire   [7:0] tmp_fu_282_p4;
wire   [22:0] tmp_7_fu_292_p1;
wire   [0:0] notrhs_fu_302_p2;
wire   [0:0] notlhs_fu_296_p2;
wire   [0:0] tmp_4_fu_308_p2;
wire   [0:0] tmp_5_fu_179_p2;
wire   [4:0] tmp_5_fu_179_opcode;
reg   [10:0] ap_NS_fsm;


feature_extractor_C #(
    .DataWidth( 32 ),
    .AddressRange( 192 ),
    .AddressWidth( 8 ))
C_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( C_address0 ),
    .ce0( C_ce0 ),
    .we0( C_we0 ),
    .d0( C_d0 ),
    .q0( C_q0 )
);

feature_extractor_C #(
    .DataWidth( 32 ),
    .AddressRange( 192 ),
    .AddressWidth( 8 ))
S_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( S_address0 ),
    .ce0( S_ce0 ),
    .we0( S_we0 ),
    .d0( S_d0 ),
    .q0( S_q0 )
);

feature_extractor_convolve grp_feature_extractor_convolve_fu_155(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst ),
    .ap_start( grp_feature_extractor_convolve_fu_155_ap_start ),
    .ap_done( grp_feature_extractor_convolve_fu_155_ap_done ),
    .ap_idle( grp_feature_extractor_convolve_fu_155_ap_idle ),
    .ap_ready( grp_feature_extractor_convolve_fu_155_ap_ready ),
    .A_address0( grp_feature_extractor_convolve_fu_155_A_address0 ),
    .A_ce0( grp_feature_extractor_convolve_fu_155_A_ce0 ),
    .A_q0( grp_feature_extractor_convolve_fu_155_A_q0 ),
    .B_address0( grp_feature_extractor_convolve_fu_155_B_address0 ),
    .B_ce0( grp_feature_extractor_convolve_fu_155_B_ce0 ),
    .B_q0( grp_feature_extractor_convolve_fu_155_B_q0 ),
    .tmp( grp_feature_extractor_convolve_fu_155_tmp ),
    .conv_address0( grp_feature_extractor_convolve_fu_155_conv_address0 ),
    .conv_ce0( grp_feature_extractor_convolve_fu_155_conv_ce0 ),
    .conv_we0( grp_feature_extractor_convolve_fu_155_conv_we0 ),
    .conv_d0( grp_feature_extractor_convolve_fu_155_conv_d0 ),
    .conv_q0( grp_feature_extractor_convolve_fu_155_conv_q0 ),
    .tmp1( grp_feature_extractor_convolve_fu_155_tmp1 )
);

feature_extractor_maxpool grp_feature_extractor_maxpool_fu_168(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst ),
    .ap_start( grp_feature_extractor_maxpool_fu_168_ap_start ),
    .ap_done( grp_feature_extractor_maxpool_fu_168_ap_done ),
    .ap_idle( grp_feature_extractor_maxpool_fu_168_ap_idle ),
    .ap_ready( grp_feature_extractor_maxpool_fu_168_ap_ready ),
    .input_mat_address0( grp_feature_extractor_maxpool_fu_168_input_mat_address0 ),
    .input_mat_ce0( grp_feature_extractor_maxpool_fu_168_input_mat_ce0 ),
    .input_mat_q0( grp_feature_extractor_maxpool_fu_168_input_mat_q0 ),
    .tmp_4( grp_feature_extractor_maxpool_fu_168_tmp_4 ),
    .output_mat_address0( grp_feature_extractor_maxpool_fu_168_output_mat_address0 ),
    .output_mat_ce0( grp_feature_extractor_maxpool_fu_168_output_mat_ce0 ),
    .output_mat_we0( grp_feature_extractor_maxpool_fu_168_output_mat_we0 ),
    .output_mat_d0( grp_feature_extractor_maxpool_fu_168_output_mat_d0 ),
    .tmp_41( grp_feature_extractor_maxpool_fu_168_tmp_41 )
);

feature_extractor_fcmp_32ns_32ns_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
feature_extractor_fcmp_32ns_32ns_1_1_U15(
    .din0( tmp_5_fu_179_p0 ),
    .din1( tmp_5_fu_179_p1 ),
    .opcode( tmp_5_fu_179_opcode ),
    .dout( tmp_5_fu_179_p2 )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// grp_feature_extractor_convolve_fu_155_ap_start_ap_start_reg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_grp_feature_extractor_convolve_fu_155_ap_start_ap_start_reg
    if (ap_rst == 1'b1) begin
        grp_feature_extractor_convolve_fu_155_ap_start_ap_start_reg <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (ap_const_lv1_0 == exitcond2_fu_184_p2))) begin
            grp_feature_extractor_convolve_fu_155_ap_start_ap_start_reg <= ap_const_logic_1;
        end else if ((ap_const_logic_1 == grp_feature_extractor_convolve_fu_155_ap_ready)) begin
            grp_feature_extractor_convolve_fu_155_ap_start_ap_start_reg <= ap_const_logic_0;
        end
    end
end

/// grp_feature_extractor_maxpool_fu_168_ap_start_ap_start_reg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_grp_feature_extractor_maxpool_fu_168_ap_start_ap_start_reg
    if (ap_rst == 1'b1) begin
        grp_feature_extractor_maxpool_fu_168_ap_start_ap_start_reg <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9) & (ap_const_lv1_0 == exitcond_fu_327_p2))) begin
            grp_feature_extractor_maxpool_fu_168_ap_start_ap_start_reg <= ap_const_logic_1;
        end else if ((ap_const_logic_1 == grp_feature_extractor_maxpool_fu_168_ap_ready)) begin
            grp_feature_extractor_maxpool_fu_168_ap_start_ap_start_reg <= ap_const_logic_0;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) & ~(ap_const_lv1_0 == exitcond_i_fu_253_p2))) begin
        i_i_reg_121 <= i_2_reg_363;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & (exitcond1_fu_196_p2 == ap_const_lv1_0))) begin
        i_i_reg_121 <= ap_const_lv4_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & ~(ap_const_logic_0 == grp_feature_extractor_convolve_fu_155_ap_done))) begin
        i_reg_98 <= i_1_reg_342;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        i_reg_98 <= ap_const_lv2_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) & (ap_const_lv1_0 == exitcond1_i_fu_220_p2))) begin
        j_i_reg_132 <= ap_const_lv4_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        j_i_reg_132 <= j_2_reg_376;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(ap_const_lv1_0 == exitcond2_fu_184_p2))) begin
        j_reg_110 <= ap_const_lv2_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) & ~(ap_const_lv1_0 == exitcond1_i_fu_220_p2))) begin
        j_reg_110 <= j_1_reg_350;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & ~(exitcond1_fu_196_p2 == ap_const_lv1_0))) begin
        k_reg_143 <= ap_const_lv2_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10) & ~(ap_const_logic_0 == grp_feature_extractor_maxpool_fu_168_ap_done))) begin
        k_reg_143 <= k_1_reg_406;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        C_load_reg_391 <= C_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        i_1_reg_342 <= i_1_fu_190_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        i_2_reg_363 <= i_2_fu_226_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        j_1_reg_350 <= j_1_fu_202_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        j_2_reg_376 <= j_2_fu_259_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        k_1_reg_406 <= k_1_fu_333_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) & (ap_const_lv1_0 == exitcond1_i_fu_220_p2))) begin
        p_addr2_reg_368[8 : 3] <= p_addr2_fu_249_p1[8 : 3];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & (exitcond1_fu_196_p2 == ap_const_lv1_0))) begin
        p_addr_cast_reg_355[4 : 3] <= p_addr_cast_fu_216_p1[4 : 3];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        tmp_6_reg_398 <= tmp_6_fu_314_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) & (ap_const_lv1_0 == exitcond_i_fu_253_p2))) begin
        tmp_8_reg_381[31 : 0] <= tmp_8_fu_274_p1[31 : 0];
    end
end

/// A_ce0 assign process. ///
always @ (grp_feature_extractor_convolve_fu_155_A_ce0 or ap_sig_cseq_ST_st3_fsm_2)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        A_ce0 = grp_feature_extractor_convolve_fu_155_A_ce0;
    end else begin
        A_ce0 = ap_const_logic_0;
    end
end

/// C_address0 assign process. ///
always @ (ap_sig_cseq_ST_st6_fsm_5 or tmp_8_fu_274_p1 or grp_feature_extractor_convolve_fu_155_conv_address0 or ap_sig_cseq_ST_st3_fsm_2)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        C_address0 = tmp_8_fu_274_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        C_address0 = grp_feature_extractor_convolve_fu_155_conv_address0;
    end else begin
        C_address0 = 'bx;
    end
end

/// C_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st6_fsm_5 or grp_feature_extractor_convolve_fu_155_conv_ce0 or ap_sig_cseq_ST_st3_fsm_2)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        C_ce0 = ap_const_logic_1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        C_ce0 = grp_feature_extractor_convolve_fu_155_conv_ce0;
    end else begin
        C_ce0 = ap_const_logic_0;
    end
end

/// C_we0 assign process. ///
always @ (grp_feature_extractor_convolve_fu_155_conv_we0 or ap_sig_cseq_ST_st3_fsm_2)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        C_we0 = grp_feature_extractor_convolve_fu_155_conv_we0;
    end else begin
        C_we0 = ap_const_logic_0;
    end
end

/// S_address0 assign process. ///
always @ (tmp_8_reg_381 or grp_feature_extractor_maxpool_fu_168_input_mat_address0 or ap_sig_cseq_ST_st9_fsm_8 or ap_sig_cseq_ST_st11_fsm_10)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        S_address0 = tmp_8_reg_381;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        S_address0 = grp_feature_extractor_maxpool_fu_168_input_mat_address0;
    end else begin
        S_address0 = 'bx;
    end
end

/// S_ce0 assign process. ///
always @ (grp_feature_extractor_maxpool_fu_168_input_mat_ce0 or ap_sig_cseq_ST_st9_fsm_8 or ap_sig_cseq_ST_st11_fsm_10)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        S_ce0 = ap_const_logic_1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        S_ce0 = grp_feature_extractor_maxpool_fu_168_input_mat_ce0;
    end else begin
        S_ce0 = ap_const_logic_0;
    end
end

/// S_we0 assign process. ///
always @ (ap_sig_cseq_ST_st9_fsm_8)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        S_we0 = ap_const_logic_1;
    end else begin
        S_we0 = ap_const_logic_0;
    end
end

/// W_ce0 assign process. ///
always @ (grp_feature_extractor_convolve_fu_155_B_ce0 or ap_sig_cseq_ST_st3_fsm_2)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        W_ce0 = grp_feature_extractor_convolve_fu_155_B_ce0;
    end else begin
        W_ce0 = ap_const_logic_0;
    end
end

/// ap_done assign process. ///
always @ (ap_sig_cseq_ST_st10_fsm_9 or exitcond_fu_327_p2)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9) & ~(ap_const_lv1_0 == exitcond_fu_327_p2))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_sig_cseq_ST_st10_fsm_9 or exitcond_fu_327_p2)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9) & ~(ap_const_lv1_0 == exitcond_fu_327_p2))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st10_fsm_9 assign process. ///
always @ (ap_sig_bdd_132)
begin
    if (ap_sig_bdd_132) begin
        ap_sig_cseq_ST_st10_fsm_9 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st10_fsm_9 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st11_fsm_10 assign process. ///
always @ (ap_sig_bdd_231)
begin
    if (ap_sig_bdd_231) begin
        ap_sig_cseq_ST_st11_fsm_10 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st11_fsm_10 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st1_fsm_0 assign process. ///
always @ (ap_sig_bdd_27)
begin
    if (ap_sig_bdd_27) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st2_fsm_1 assign process. ///
always @ (ap_sig_bdd_60)
begin
    if (ap_sig_bdd_60) begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st3_fsm_2 assign process. ///
always @ (ap_sig_bdd_197)
begin
    if (ap_sig_bdd_197) begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st4_fsm_3 assign process. ///
always @ (ap_sig_bdd_69)
begin
    if (ap_sig_bdd_69) begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st5_fsm_4 assign process. ///
always @ (ap_sig_bdd_84)
begin
    if (ap_sig_bdd_84) begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st6_fsm_5 assign process. ///
always @ (ap_sig_bdd_98)
begin
    if (ap_sig_bdd_98) begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st7_fsm_6 assign process. ///
always @ (ap_sig_bdd_114)
begin
    if (ap_sig_bdd_114) begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st8_fsm_7 assign process. ///
always @ (ap_sig_bdd_123)
begin
    if (ap_sig_bdd_123) begin
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st9_fsm_8 assign process. ///
always @ (ap_sig_bdd_222)
begin
    if (ap_sig_bdd_222) begin
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_0;
    end
end

/// feature_ce0 assign process. ///
always @ (grp_feature_extractor_maxpool_fu_168_output_mat_ce0 or ap_sig_cseq_ST_st11_fsm_10)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        feature_ce0 = grp_feature_extractor_maxpool_fu_168_output_mat_ce0;
    end else begin
        feature_ce0 = ap_const_logic_0;
    end
end

/// feature_we0 assign process. ///
always @ (grp_feature_extractor_maxpool_fu_168_output_mat_we0 or ap_sig_cseq_ST_st11_fsm_10)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        feature_we0 = grp_feature_extractor_maxpool_fu_168_output_mat_we0;
    end else begin
        feature_we0 = ap_const_logic_0;
    end
end
/// the next state (ap_NS_fsm) of the state machine. ///
always @ (ap_start or ap_CS_fsm or exitcond1_fu_196_p2 or exitcond1_i_fu_220_p2 or exitcond_i_fu_253_p2 or grp_feature_extractor_convolve_fu_155_ap_done or grp_feature_extractor_maxpool_fu_168_ap_done or exitcond2_fu_184_p2 or exitcond_fu_327_p2)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            if (~(ap_const_lv1_0 == exitcond2_fu_184_p2)) begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_st3_fsm_2 : 
        begin
            if (~(ap_const_logic_0 == grp_feature_extractor_convolve_fu_155_ap_done)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_st4_fsm_3 : 
        begin
            if ((exitcond1_fu_196_p2 == ap_const_lv1_0)) begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end else begin
                ap_NS_fsm = ap_ST_st10_fsm_9;
            end
        end
        ap_ST_st5_fsm_4 : 
        begin
            if (~(ap_const_lv1_0 == exitcond1_i_fu_220_p2)) begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_st6_fsm_5;
            end
        end
        ap_ST_st6_fsm_5 : 
        begin
            if ((ap_const_lv1_0 == exitcond_i_fu_253_p2)) begin
                ap_NS_fsm = ap_ST_st7_fsm_6;
            end else begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end
        end
        ap_ST_st7_fsm_6 : 
        begin
            ap_NS_fsm = ap_ST_st8_fsm_7;
        end
        ap_ST_st8_fsm_7 : 
        begin
            ap_NS_fsm = ap_ST_st9_fsm_8;
        end
        ap_ST_st9_fsm_8 : 
        begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st10_fsm_9 : 
        begin
            if (~(ap_const_lv1_0 == exitcond_fu_327_p2)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st11_fsm_10;
            end
        end
        ap_ST_st11_fsm_10 : 
        begin
            if (~(ap_const_logic_0 == grp_feature_extractor_maxpool_fu_168_ap_done)) begin
                ap_NS_fsm = ap_ST_st10_fsm_9;
            end else begin
                ap_NS_fsm = ap_ST_st11_fsm_10;
            end
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign A_address0 = grp_feature_extractor_convolve_fu_155_A_address0;
assign C_d0 = grp_feature_extractor_convolve_fu_155_conv_d0;
assign S_d0 = ((tmp_6_reg_398[0:0]===1'b1)? ap_const_lv32_0: C_load_reg_391);
assign W_address0 = grp_feature_extractor_convolve_fu_155_B_address0;

/// ap_sig_bdd_114 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_114 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_6]);
end

/// ap_sig_bdd_123 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_123 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_7]);
end

/// ap_sig_bdd_132 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_132 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_9]);
end

/// ap_sig_bdd_197 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_197 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end

/// ap_sig_bdd_222 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_222 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_8]);
end

/// ap_sig_bdd_231 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_231 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_A]);
end

/// ap_sig_bdd_27 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_27 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end

/// ap_sig_bdd_60 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_60 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end

/// ap_sig_bdd_69 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_69 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3]);
end

/// ap_sig_bdd_84 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_84 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4]);
end

/// ap_sig_bdd_98 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_98 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5]);
end
assign b_assign_to_int_fu_279_p1 = C_load_reg_391;
assign exitcond1_fu_196_p2 = (j_reg_110 == ap_const_lv2_3? 1'b1: 1'b0);
assign exitcond1_i_fu_220_p2 = (i_i_reg_121 == ap_const_lv4_8? 1'b1: 1'b0);
assign exitcond2_fu_184_p2 = (i_reg_98 == ap_const_lv2_3? 1'b1: 1'b0);
assign exitcond_fu_327_p2 = (k_reg_143 == ap_const_lv2_3? 1'b1: 1'b0);
assign exitcond_i_fu_253_p2 = (j_i_reg_132 == ap_const_lv4_8? 1'b1: 1'b0);
assign feature_address0 = grp_feature_extractor_maxpool_fu_168_output_mat_address0;
assign feature_d0 = grp_feature_extractor_maxpool_fu_168_output_mat_d0;
assign grp_feature_extractor_convolve_fu_155_A_q0 = A_q0;
assign grp_feature_extractor_convolve_fu_155_B_q0 = W_q0;
assign grp_feature_extractor_convolve_fu_155_ap_start = grp_feature_extractor_convolve_fu_155_ap_start_ap_start_reg;
assign grp_feature_extractor_convolve_fu_155_conv_q0 = C_q0;
assign grp_feature_extractor_convolve_fu_155_tmp = i_reg_98;
assign grp_feature_extractor_convolve_fu_155_tmp1 = i_reg_98;
assign grp_feature_extractor_maxpool_fu_168_ap_start = grp_feature_extractor_maxpool_fu_168_ap_start_ap_start_reg;
assign grp_feature_extractor_maxpool_fu_168_input_mat_q0 = S_q0;
assign grp_feature_extractor_maxpool_fu_168_tmp_4 = k_reg_143;
assign grp_feature_extractor_maxpool_fu_168_tmp_41 = k_reg_143;
assign i_1_fu_190_p2 = (i_reg_98 + ap_const_lv2_1);
assign i_2_fu_226_p2 = (i_i_reg_121 + ap_const_lv4_1);
assign j_1_fu_202_p2 = (j_reg_110 + ap_const_lv2_1);
assign j_2_fu_259_p2 = (j_i_reg_132 + ap_const_lv4_1);
assign k_1_fu_333_p2 = (k_reg_143 + ap_const_lv2_1);
assign notlhs_fu_296_p2 = (tmp_fu_282_p4 != ap_const_lv8_FF? 1'b1: 1'b0);
assign notrhs_fu_302_p2 = (tmp_7_fu_292_p1 == ap_const_lv23_0? 1'b1: 1'b0);
assign p_addr1_fu_236_p2 = (tmp_i_trn_cast_fu_232_p1 + p_addr_cast_reg_355);
assign p_addr2_fu_249_p1 = tmp_1_fu_241_p3;
assign p_addr3_fu_269_p2 = (tmp_i_trn_fu_265_p1 + p_addr2_reg_368);
assign p_addr_cast_fu_216_p1 = tmp_2_fu_208_p3;
assign tmp_1_fu_241_p3 = {{p_addr1_fu_236_p2}, {ap_const_lv3_0}};
assign tmp_2_fu_208_p3 = {{j_reg_110}, {ap_const_lv3_0}};
assign tmp_4_fu_308_p2 = (notrhs_fu_302_p2 | notlhs_fu_296_p2);
assign tmp_5_fu_179_opcode = ap_const_lv5_4;
assign tmp_5_fu_179_p0 = C_load_reg_391;
assign tmp_5_fu_179_p1 = ap_const_lv32_0;
assign tmp_6_fu_314_p2 = (tmp_4_fu_308_p2 & tmp_5_fu_179_p2);
assign tmp_7_fu_292_p1 = b_assign_to_int_fu_279_p1[22:0];
assign tmp_8_fu_274_p1 = p_addr3_fu_269_p2;
assign tmp_fu_282_p4 = {{b_assign_to_int_fu_279_p1[ap_const_lv32_1E : ap_const_lv32_17]}};
assign tmp_i_trn_cast_fu_232_p1 = i_i_reg_121;
assign tmp_i_trn_fu_265_p1 = j_i_reg_132;
always @ (posedge ap_clk)
begin
    p_addr_cast_reg_355[2:0] <= 3'b000;
    p_addr_cast_reg_355[5] <= 1'b0;
    p_addr2_reg_368[2:0] <= 3'b000;
    p_addr2_reg_368[31:9] <= 23'b00000000000000000000000;
    tmp_8_reg_381[63:32] <= 32'b00000000000000000000000000000000;
end



endmodule //feature_extractor

