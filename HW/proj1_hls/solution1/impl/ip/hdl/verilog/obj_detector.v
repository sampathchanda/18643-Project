// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.2
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="obj_detector,hls_ip_2015_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.412000,HLS_SYN_LAT=1042049,HLS_SYN_TPT=none,HLS_SYN_MEM=20,HLS_SYN_DSP=10,HLS_SYN_FF=2213,HLS_SYN_LUT=3796}" *)

module obj_detector (
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        ap_clk,
        ap_rst_n,
        A_Addr_A,
        A_EN_A,
        A_WEN_A,
        A_Din_A,
        A_Dout_A,
        A_Clk_A,
        A_Rst_A,
        W0_Addr_A,
        W0_EN_A,
        W0_WEN_A,
        W0_Din_A,
        W0_Dout_A,
        W0_Clk_A,
        W0_Rst_A,
        W1_Addr_A,
        W1_EN_A,
        W1_WEN_A,
        W1_Din_A,
        W1_Dout_A,
        W1_Clk_A,
        W1_Rst_A,
        res_Addr_A,
        res_EN_A,
        res_WEN_A,
        res_Din_A,
        res_Dout_A,
        res_Clk_A,
        res_Rst_A,
        interrupt
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 26'b1;
parameter    ap_ST_st2_fsm_1 = 26'b10;
parameter    ap_ST_st3_fsm_2 = 26'b100;
parameter    ap_ST_st4_fsm_3 = 26'b1000;
parameter    ap_ST_st5_fsm_4 = 26'b10000;
parameter    ap_ST_st6_fsm_5 = 26'b100000;
parameter    ap_ST_st7_fsm_6 = 26'b1000000;
parameter    ap_ST_st8_fsm_7 = 26'b10000000;
parameter    ap_ST_st9_fsm_8 = 26'b100000000;
parameter    ap_ST_st10_fsm_9 = 26'b1000000000;
parameter    ap_ST_st11_fsm_10 = 26'b10000000000;
parameter    ap_ST_st12_fsm_11 = 26'b100000000000;
parameter    ap_ST_st13_fsm_12 = 26'b1000000000000;
parameter    ap_ST_st14_fsm_13 = 26'b10000000000000;
parameter    ap_ST_st15_fsm_14 = 26'b100000000000000;
parameter    ap_ST_st16_fsm_15 = 26'b1000000000000000;
parameter    ap_ST_st17_fsm_16 = 26'b10000000000000000;
parameter    ap_ST_st18_fsm_17 = 26'b100000000000000000;
parameter    ap_ST_st19_fsm_18 = 26'b1000000000000000000;
parameter    ap_ST_st20_fsm_19 = 26'b10000000000000000000;
parameter    ap_ST_st21_fsm_20 = 26'b100000000000000000000;
parameter    ap_ST_st22_fsm_21 = 26'b1000000000000000000000;
parameter    ap_ST_st23_fsm_22 = 26'b10000000000000000000000;
parameter    ap_ST_st24_fsm_23 = 26'b100000000000000000000000;
parameter    ap_ST_st25_fsm_24 = 26'b1000000000000000000000000;
parameter    ap_ST_st26_fsm_25 = 26'b10000000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    ap_const_int64_8 = 8;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 5;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv32_12 = 32'b10010;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv32_E = 32'b1110;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv32_11 = 32'b10001;
parameter    ap_const_lv32_13 = 32'b10011;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv5_0 = 5'b00000;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv32_14 = 32'b10100;
parameter    ap_const_lv32_16 = 32'b10110;
parameter    ap_const_lv32_18 = 32'b11000;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv32_19 = 32'b11001;
parameter    ap_const_lv32_15 = 32'b10101;
parameter    ap_const_lv64_0 = 64'b0000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv64_1 = 64'b1;
parameter    ap_const_lv4_F = 4'b1111;
parameter    ap_const_lv3_6 = 3'b110;
parameter    ap_const_lv3_1 = 3'b1;
parameter    ap_const_lv5_18 = 5'b11000;
parameter    ap_const_lv5_1 = 5'b1;
parameter    ap_const_lv32_34 = 32'b110100;
parameter    ap_const_lv32_3E = 32'b111110;
parameter    ap_const_lv11_0 = 11'b00000000000;
parameter    ap_const_lv52_0 = 52'b0000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv11_7FF = 11'b11111111111;
parameter    ap_const_lv32_1E = 32'b11110;
parameter    ap_const_lv8_FF = 8'b11111111;
parameter    ap_const_lv23_0 = 23'b00000000000000000000000;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv4_C = 4'b1100;
parameter    ap_const_lv4_1 = 4'b1;
parameter    ap_const_lv5_4 = 5'b100;
parameter    ap_const_lv5_2 = 5'b10;
parameter    ap_true = 1'b1;
parameter    C_S_AXI_CONTROL_WSTRB_WIDTH = (C_S_AXI_CONTROL_DATA_WIDTH / ap_const_int64_8);
parameter    C_S_AXI_WSTRB_WIDTH = (C_S_AXI_DATA_WIDTH / ap_const_int64_8);

input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1 : 0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1 : 0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1 : 0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1 : 0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1 : 0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
input   ap_clk;
input   ap_rst_n;
output  [31:0] A_Addr_A;
output   A_EN_A;
output  [3:0] A_WEN_A;
output  [31:0] A_Din_A;
input  [31:0] A_Dout_A;
output   A_Clk_A;
output   A_Rst_A;
output  [31:0] W0_Addr_A;
output   W0_EN_A;
output  [3:0] W0_WEN_A;
output  [31:0] W0_Din_A;
input  [31:0] W0_Dout_A;
output   W0_Clk_A;
output   W0_Rst_A;
output  [31:0] W1_Addr_A;
output   W1_EN_A;
output  [3:0] W1_WEN_A;
output  [31:0] W1_Din_A;
input  [31:0] W1_Dout_A;
output   W1_Clk_A;
output   W1_Rst_A;
output  [31:0] res_Addr_A;
output   res_EN_A;
output  [3:0] res_WEN_A;
output  [31:0] res_Din_A;
input  [31:0] res_Dout_A;
output   res_Clk_A;
output   res_Rst_A;
output   interrupt;

reg A_EN_A;
reg W0_EN_A;
reg W1_EN_A;
reg res_EN_A;
reg[3:0] res_WEN_A;
reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [25:0] ap_CS_fsm = 26'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_67;
reg    ap_ready;
wire    obj_detector_control_s_axi_U_ap_dummy_ce;
wire   [31:0] s1_q0;
reg   [31:0] reg_341;
reg    ap_sig_cseq_ST_st16_fsm_15;
reg    ap_sig_bdd_134;
reg    ap_sig_cseq_ST_st19_fsm_18;
reg    ap_sig_bdd_141;
wire   [31:0] res_addr_gep_fu_136_p3;
reg   [0:0] res_addr_reg_1169;
wire   [2:0] i_1_fu_352_p2;
reg   [2:0] i_1_reg_1177;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_bdd_156;
wire   [2:0] i_2_fu_364_p2;
reg   [2:0] i_2_reg_1185;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_bdd_165;
wire  signed [9:0] p_addr_cast_fu_400_p1;
reg  signed [9:0] p_addr_cast_reg_1190;
wire   [0:0] exitcond1_fu_358_p2;
wire   [4:0] i_4_fu_410_p2;
reg   [4:0] i_4_reg_1198;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_bdd_180;
wire  signed [31:0] p_addr2_fu_449_p2;
reg  signed [31:0] p_addr2_reg_1203;
wire   [0:0] exitcond1_i_fu_404_p2;
wire   [4:0] j_fu_461_p2;
reg   [4:0] j_reg_1211;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_bdd_194;
wire   [63:0] tmp_40_fu_476_p1;
reg   [63:0] tmp_40_reg_1216;
wire   [0:0] exitcond_i_fu_455_p2;
wire   [31:0] s0_q0;
reg   [31:0] s0_load_reg_1226;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_bdd_210;
wire   [63:0] y_assign_fu_332_p1;
reg   [63:0] y_assign_reg_1232;
wire   [0:0] or_cond_i_i_i_fu_510_p2;
reg   [0:0] or_cond_i_i_i_reg_1239;
reg    ap_sig_cseq_ST_st8_fsm_7;
reg    ap_sig_bdd_221;
wire   [0:0] sel_tmp1_i_fu_528_p2;
reg   [0:0] sel_tmp1_i_reg_1244;
wire   [0:0] tmp_8_fu_569_p2;
reg   [0:0] tmp_8_reg_1249;
reg    ap_sig_cseq_ST_st9_fsm_8;
reg    ap_sig_bdd_232;
wire   [63:0] sel_tmp2_i_fu_581_p3;
reg   [63:0] sel_tmp2_i_reg_1254;
reg    ap_sig_cseq_ST_st10_fsm_9;
reg    ap_sig_bdd_246;
wire   [31:0] tmp_13_i_fu_329_p1;
reg   [31:0] tmp_13_i_reg_1259;
reg    ap_sig_cseq_ST_st11_fsm_10;
reg    ap_sig_bdd_256;
wire   [2:0] i_3_fu_600_p2;
reg   [2:0] i_3_reg_1267;
reg    ap_sig_cseq_ST_st13_fsm_12;
reg    ap_sig_bdd_265;
wire  signed [9:0] p_addr4_cast_fu_636_p1;
reg  signed [9:0] p_addr4_cast_reg_1272;
wire   [0:0] exitcond_fu_594_p2;
wire  signed [8:0] p_addr5_cast_fu_670_p1;
reg  signed [8:0] p_addr5_cast_reg_1278;
wire   [3:0] i_5_fu_680_p2;
reg   [3:0] i_5_reg_1286;
reg    ap_sig_cseq_ST_st14_fsm_13;
reg    ap_sig_bdd_281;
wire  signed [31:0] p_addr8_fu_733_p2;
reg  signed [31:0] p_addr8_reg_1291;
wire   [0:0] exitcond1_i2_fu_674_p2;
wire  signed [31:0] p_addr10_fu_772_p2;
reg  signed [31:0] p_addr10_reg_1297;
wire  signed [31:0] p_addr12_fu_811_p2;
reg  signed [31:0] p_addr12_reg_1303;
wire   [3:0] j_1_fu_823_p2;
reg   [3:0] j_1_reg_1311;
reg    ap_sig_cseq_ST_st15_fsm_14;
reg    ap_sig_bdd_299;
wire   [0:0] exitcond_i7_fu_817_p2;
wire  signed [31:0] p_addr13_fu_871_p2;
reg  signed [31:0] p_addr13_reg_1326;
wire  signed [31:0] p_addr7_fu_876_p2;
reg  signed [31:0] p_addr7_reg_1331;
wire  signed [31:0] p_addr16_fu_885_p2;
reg  signed [31:0] p_addr16_reg_1336;
wire   [31:0] s1_q1;
reg   [31:0] max_1_reg_1341;
wire   [0:0] tmp_16_fu_971_p2;
reg   [0:0] tmp_16_reg_1353;
reg    ap_sig_cseq_ST_st17_fsm_16;
reg    ap_sig_bdd_325;
reg   [31:0] max_3_reg_1358;
wire   [31:0] max_2_fu_977_p3;
reg   [31:0] max_2_reg_1365;
reg    ap_sig_cseq_ST_st18_fsm_17;
reg    ap_sig_bdd_335;
wire   [0:0] grp_fu_336_p2;
reg   [0:0] tmp_24_reg_1371;
wire   [31:0] max_4_fu_1069_p3;
reg   [31:0] max_4_reg_1381;
wire   [0:0] tmp_34_fu_1152_p2;
reg   [0:0] tmp_34_reg_1388;
reg    ap_sig_cseq_ST_st20_fsm_19;
reg    ap_sig_bdd_350;
reg   [11:0] s0_address0;
reg    s0_ce0;
reg    s0_we0;
wire   [31:0] s0_d0;
reg   [11:0] s1_address0;
reg    s1_ce0;
reg    s1_we0;
wire   [31:0] s1_d0;
reg   [11:0] s1_address1;
reg    s1_ce1;
reg   [9:0] s2_address0;
reg    s2_ce0;
reg    s2_we0;
wire   [31:0] s2_d0;
wire   [31:0] s2_q0;
reg   [9:0] s3_address0;
reg    s3_ce0;
reg    s3_we0;
wire   [31:0] s3_d0;
wire   [31:0] s3_q0;
wire    grp_obj_detector_convolve_fu_299_ap_start;
wire    grp_obj_detector_convolve_fu_299_ap_done;
wire    grp_obj_detector_convolve_fu_299_ap_idle;
wire    grp_obj_detector_convolve_fu_299_ap_ready;
wire   [31:0] grp_obj_detector_convolve_fu_299_A_Addr_A;
wire    grp_obj_detector_convolve_fu_299_A_EN_A;
wire   [3:0] grp_obj_detector_convolve_fu_299_A_WEN_A;
wire   [31:0] grp_obj_detector_convolve_fu_299_A_Din_A;
wire   [31:0] grp_obj_detector_convolve_fu_299_A_Dout_A;
wire   [31:0] grp_obj_detector_convolve_fu_299_B_Addr_A;
wire    grp_obj_detector_convolve_fu_299_B_EN_A;
wire   [3:0] grp_obj_detector_convolve_fu_299_B_WEN_A;
wire   [31:0] grp_obj_detector_convolve_fu_299_B_Din_A;
wire   [31:0] grp_obj_detector_convolve_fu_299_B_Dout_A;
wire   [2:0] grp_obj_detector_convolve_fu_299_tmp;
wire   [11:0] grp_obj_detector_convolve_fu_299_conv_address0;
wire    grp_obj_detector_convolve_fu_299_conv_ce0;
wire    grp_obj_detector_convolve_fu_299_conv_we0;
wire   [31:0] grp_obj_detector_convolve_fu_299_conv_d0;
wire   [2:0] grp_obj_detector_convolve_fu_299_tmp1;
wire    grp_obj_detector_FCL_fu_312_ap_start;
wire    grp_obj_detector_FCL_fu_312_ap_done;
wire    grp_obj_detector_FCL_fu_312_ap_idle;
wire    grp_obj_detector_FCL_fu_312_ap_ready;
wire   [9:0] grp_obj_detector_FCL_fu_312_inp_address0;
wire    grp_obj_detector_FCL_fu_312_inp_ce0;
wire   [31:0] grp_obj_detector_FCL_fu_312_inp_q0;
wire   [31:0] grp_obj_detector_FCL_fu_312_W_Addr_A;
wire    grp_obj_detector_FCL_fu_312_W_EN_A;
wire   [3:0] grp_obj_detector_FCL_fu_312_W_WEN_A;
wire   [31:0] grp_obj_detector_FCL_fu_312_W_Din_A;
wire   [31:0] grp_obj_detector_FCL_fu_312_W_Dout_A;
reg   [0:0] grp_obj_detector_FCL_fu_312_W_offset;
wire   [31:0] grp_obj_detector_FCL_fu_312_ap_return;
wire    grp_obj_detector_flatten_fu_323_ap_start;
wire    grp_obj_detector_flatten_fu_323_ap_done;
wire    grp_obj_detector_flatten_fu_323_ap_idle;
wire    grp_obj_detector_flatten_fu_323_ap_ready;
wire   [9:0] grp_obj_detector_flatten_fu_323_inp_address0;
wire    grp_obj_detector_flatten_fu_323_inp_ce0;
wire   [31:0] grp_obj_detector_flatten_fu_323_inp_q0;
wire   [9:0] grp_obj_detector_flatten_fu_323_out_r_address0;
wire    grp_obj_detector_flatten_fu_323_out_r_ce0;
wire    grp_obj_detector_flatten_fu_323_out_r_we0;
wire   [31:0] grp_obj_detector_flatten_fu_323_out_r_d0;
reg   [2:0] i_reg_221;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_bdd_450;
reg   [2:0] i1_reg_233;
wire   [0:0] exitcond2_fu_346_p2;
reg   [4:0] i_i_reg_244;
reg   [4:0] j_i_reg_255;
reg    ap_sig_cseq_ST_st12_fsm_11;
reg    ap_sig_bdd_475;
reg   [2:0] i2_reg_266;
reg   [3:0] i_i1_reg_277;
reg   [3:0] j_i6_reg_288;
reg    ap_sig_cseq_ST_st21_fsm_20;
reg    ap_sig_bdd_495;
reg    grp_obj_detector_convolve_fu_299_ap_start_ap_start_reg = 1'b0;
reg    grp_obj_detector_FCL_fu_312_ap_start_ap_start_reg = 1'b0;
reg    ap_sig_cseq_ST_st23_fsm_22;
reg    ap_sig_bdd_507;
reg    ap_sig_cseq_ST_st25_fsm_24;
reg    ap_sig_bdd_514;
reg    ap_sig_cseq_ST_st24_fsm_23;
reg    ap_sig_bdd_522;
reg    ap_sig_cseq_ST_st26_fsm_25;
reg    ap_sig_bdd_529;
reg    grp_obj_detector_flatten_fu_323_ap_start_ap_start_reg = 1'b0;
reg    ap_sig_cseq_ST_st22_fsm_21;
reg    ap_sig_bdd_541;
wire   [63:0] tmp_41_fu_846_p1;
wire   [63:0] tmp_43_fu_866_p1;
wire   [63:0] tmp_46_fu_890_p1;
wire   [63:0] tmp_49_fu_984_p1;
wire   [63:0] tmp_52_fu_1165_p1;
reg   [31:0] res_Addr_A_orig;
wire   [63:0] tmp_13_i_fu_329_p0;
wire   [31:0] y_assign_fu_332_p0;
reg   [31:0] grp_fu_336_p0;
reg   [31:0] grp_fu_336_p1;
wire   [7:0] tmp_s_fu_370_p3;
wire   [5:0] tmp_1_fu_382_p3;
wire   [8:0] p_shl_cast_fu_378_p1;
wire   [8:0] p_shl1_cast_fu_390_p1;
wire   [8:0] p_addr_fu_394_p2;
wire   [9:0] tmp_i_trn_cast_fu_416_p1;
wire  signed [9:0] p_addr1_fu_420_p2;
wire   [14:0] tmp_20_fu_425_p3;
wire   [12:0] tmp_27_fu_437_p3;
wire  signed [31:0] p_shl2_fu_433_p1;
wire  signed [31:0] p_shl3_fu_445_p1;
wire   [31:0] tmp_i_trn_fu_467_p1;
wire  signed [31:0] p_addr3_fu_471_p2;
wire   [63:0] p_Val2_s_fu_481_p1;
wire   [10:0] loc_V_fu_484_p4;
wire   [51:0] loc_V_1_fu_494_p1;
wire   [0:0] tmp_i_i_i_fu_498_p2;
wire   [0:0] tmp_1_i_i_i_fu_504_p2;
wire   [0:0] tmp_2_i_i_i_fu_516_p2;
wire   [0:0] or_cond1_i_i_i_fu_522_p2;
wire   [31:0] inp_load_i_to_int_fu_534_p1;
wire   [7:0] tmp_fu_537_p4;
wire   [22:0] tmp_42_fu_547_p1;
wire   [0:0] notrhs_fu_557_p2;
wire   [0:0] notlhs_fu_551_p2;
wire   [0:0] tmp_3_fu_563_p2;
wire   [63:0] res_1_fu_575_p3;
wire   [7:0] tmp_2_fu_606_p3;
wire   [5:0] tmp_6_fu_618_p3;
wire   [8:0] p_shl6_cast_fu_614_p1;
wire   [8:0] p_shl7_cast_fu_626_p1;
wire   [8:0] p_addr4_fu_630_p2;
wire   [6:0] tmp_11_fu_640_p3;
wire   [4:0] tmp_18_fu_652_p3;
wire   [7:0] p_shl4_cast_fu_648_p1;
wire   [7:0] p_shl5_cast_fu_660_p1;
wire   [7:0] p_addr5_fu_664_p2;
wire   [4:0] tmp_i3_fu_686_p3;
wire   [9:0] tmp_i4_trn_cast_fu_700_p1;
wire  signed [9:0] p_addr6_fu_704_p2;
wire   [14:0] tmp_29_fu_709_p3;
wire   [12:0] tmp_35_fu_721_p3;
wire  signed [31:0] p_shl_fu_717_p1;
wire  signed [31:0] p_shl1_fu_729_p1;
wire   [4:0] tmp_1_i_fu_694_p2;
wire   [9:0] tmp_2_i_trn9_cast_fu_739_p1;
wire  signed [9:0] p_addr9_fu_743_p2;
wire   [14:0] tmp_36_fu_748_p3;
wire   [12:0] tmp_37_fu_760_p3;
wire  signed [31:0] p_shl4_fu_756_p1;
wire  signed [31:0] p_shl5_fu_768_p1;
wire   [8:0] tmp_3_i_trn_cast_fu_778_p1;
wire  signed [8:0] p_addr11_fu_782_p2;
wire   [12:0] tmp_38_fu_787_p3;
wire   [10:0] tmp_39_fu_799_p3;
wire  signed [31:0] p_shl8_fu_795_p1;
wire  signed [31:0] p_shl9_fu_807_p1;
wire   [4:0] tmp_4_i_fu_829_p3;
wire   [31:0] tmp_5_i_trn_fu_837_p1;
wire  signed [31:0] p_addr14_fu_841_p2;
wire   [4:0] tmp_7_i_fu_851_p2;
wire   [31:0] tmp_8_i_trn_fu_857_p1;
wire  signed [31:0] p_addr15_fu_861_p2;
wire   [31:0] tmp_12_i_trn_fu_881_p1;
wire   [31:0] max_i_to_int_fu_894_p1;
wire   [31:0] max_3_i_to_int_fu_912_p1;
wire   [7:0] tmp_9_fu_898_p4;
wire   [22:0] tmp_44_fu_908_p1;
wire   [0:0] notrhs1_fu_935_p2;
wire   [0:0] notlhs1_fu_929_p2;
wire   [7:0] tmp_10_fu_915_p4;
wire   [22:0] tmp_45_fu_925_p1;
wire   [0:0] notrhs2_fu_953_p2;
wire   [0:0] notlhs2_fu_947_p2;
wire   [0:0] tmp_12_fu_941_p2;
wire   [0:0] tmp_13_fu_959_p2;
wire   [0:0] tmp_14_fu_965_p2;
wire   [31:0] max_7_i_to_int_fu_988_p1;
wire   [31:0] max_6_i_to_int_fu_1005_p1;
wire   [7:0] tmp_17_fu_991_p4;
wire   [22:0] tmp_47_fu_1001_p1;
wire   [0:0] notrhs3_fu_1028_p2;
wire   [0:0] notlhs3_fu_1022_p2;
wire   [7:0] tmp_19_fu_1008_p4;
wire   [22:0] tmp_48_fu_1018_p1;
wire   [0:0] notrhs4_fu_1046_p2;
wire   [0:0] notlhs4_fu_1040_p2;
wire   [0:0] tmp_21_fu_1034_p2;
wire   [0:0] tmp_22_fu_1052_p2;
wire   [0:0] tmp_23_fu_1058_p2;
wire   [0:0] tmp_25_fu_1064_p2;
wire   [31:0] max_8_i_to_int_fu_1075_p1;
wire   [31:0] max_1_i_to_int_fu_1093_p1;
wire   [7:0] tmp_26_fu_1079_p4;
wire   [22:0] tmp_50_fu_1089_p1;
wire   [0:0] notrhs5_fu_1116_p2;
wire   [0:0] notlhs5_fu_1110_p2;
wire   [7:0] tmp_28_fu_1096_p4;
wire   [22:0] tmp_51_fu_1106_p1;
wire   [0:0] notrhs6_fu_1134_p2;
wire   [0:0] notlhs6_fu_1128_p2;
wire   [0:0] tmp_30_fu_1122_p2;
wire   [0:0] tmp_31_fu_1140_p2;
wire   [0:0] tmp_32_fu_1146_p2;
reg   [4:0] grp_fu_336_opcode;
reg   [25:0] ap_NS_fsm;


obj_detector_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
obj_detector_control_s_axi_U(
    .AWVALID( s_axi_control_AWVALID ),
    .AWREADY( s_axi_control_AWREADY ),
    .AWADDR( s_axi_control_AWADDR ),
    .WVALID( s_axi_control_WVALID ),
    .WREADY( s_axi_control_WREADY ),
    .WDATA( s_axi_control_WDATA ),
    .WSTRB( s_axi_control_WSTRB ),
    .ARVALID( s_axi_control_ARVALID ),
    .ARREADY( s_axi_control_ARREADY ),
    .ARADDR( s_axi_control_ARADDR ),
    .RVALID( s_axi_control_RVALID ),
    .RREADY( s_axi_control_RREADY ),
    .RDATA( s_axi_control_RDATA ),
    .RRESP( s_axi_control_RRESP ),
    .BVALID( s_axi_control_BVALID ),
    .BREADY( s_axi_control_BREADY ),
    .BRESP( s_axi_control_BRESP ),
    .ACLK( ap_clk ),
    .ARESET( ap_rst_n_inv ),
    .ACLK_EN( obj_detector_control_s_axi_U_ap_dummy_ce ),
    .ap_start( ap_start ),
    .interrupt( interrupt ),
    .ap_ready( ap_ready ),
    .ap_done( ap_done ),
    .ap_idle( ap_idle )
);

obj_detector_s0 #(
    .DataWidth( 32 ),
    .AddressRange( 3456 ),
    .AddressWidth( 12 ))
s0_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .address0( s0_address0 ),
    .ce0( s0_ce0 ),
    .we0( s0_we0 ),
    .d0( s0_d0 ),
    .q0( s0_q0 )
);

obj_detector_s1 #(
    .DataWidth( 32 ),
    .AddressRange( 3456 ),
    .AddressWidth( 12 ))
s1_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .address0( s1_address0 ),
    .ce0( s1_ce0 ),
    .we0( s1_we0 ),
    .d0( s1_d0 ),
    .q0( s1_q0 ),
    .address1( s1_address1 ),
    .ce1( s1_ce1 ),
    .q1( s1_q1 )
);

obj_detector_s2 #(
    .DataWidth( 32 ),
    .AddressRange( 864 ),
    .AddressWidth( 10 ))
s2_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .address0( s2_address0 ),
    .ce0( s2_ce0 ),
    .we0( s2_we0 ),
    .d0( s2_d0 ),
    .q0( s2_q0 )
);

obj_detector_s2 #(
    .DataWidth( 32 ),
    .AddressRange( 864 ),
    .AddressWidth( 10 ))
s3_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .address0( s3_address0 ),
    .ce0( s3_ce0 ),
    .we0( s3_we0 ),
    .d0( s3_d0 ),
    .q0( s3_q0 )
);

obj_detector_convolve grp_obj_detector_convolve_fu_299(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst_n_inv ),
    .ap_start( grp_obj_detector_convolve_fu_299_ap_start ),
    .ap_done( grp_obj_detector_convolve_fu_299_ap_done ),
    .ap_idle( grp_obj_detector_convolve_fu_299_ap_idle ),
    .ap_ready( grp_obj_detector_convolve_fu_299_ap_ready ),
    .A_Addr_A( grp_obj_detector_convolve_fu_299_A_Addr_A ),
    .A_EN_A( grp_obj_detector_convolve_fu_299_A_EN_A ),
    .A_WEN_A( grp_obj_detector_convolve_fu_299_A_WEN_A ),
    .A_Din_A( grp_obj_detector_convolve_fu_299_A_Din_A ),
    .A_Dout_A( grp_obj_detector_convolve_fu_299_A_Dout_A ),
    .B_Addr_A( grp_obj_detector_convolve_fu_299_B_Addr_A ),
    .B_EN_A( grp_obj_detector_convolve_fu_299_B_EN_A ),
    .B_WEN_A( grp_obj_detector_convolve_fu_299_B_WEN_A ),
    .B_Din_A( grp_obj_detector_convolve_fu_299_B_Din_A ),
    .B_Dout_A( grp_obj_detector_convolve_fu_299_B_Dout_A ),
    .tmp( grp_obj_detector_convolve_fu_299_tmp ),
    .conv_address0( grp_obj_detector_convolve_fu_299_conv_address0 ),
    .conv_ce0( grp_obj_detector_convolve_fu_299_conv_ce0 ),
    .conv_we0( grp_obj_detector_convolve_fu_299_conv_we0 ),
    .conv_d0( grp_obj_detector_convolve_fu_299_conv_d0 ),
    .tmp1( grp_obj_detector_convolve_fu_299_tmp1 )
);

obj_detector_FCL grp_obj_detector_FCL_fu_312(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst_n_inv ),
    .ap_start( grp_obj_detector_FCL_fu_312_ap_start ),
    .ap_done( grp_obj_detector_FCL_fu_312_ap_done ),
    .ap_idle( grp_obj_detector_FCL_fu_312_ap_idle ),
    .ap_ready( grp_obj_detector_FCL_fu_312_ap_ready ),
    .inp_address0( grp_obj_detector_FCL_fu_312_inp_address0 ),
    .inp_ce0( grp_obj_detector_FCL_fu_312_inp_ce0 ),
    .inp_q0( grp_obj_detector_FCL_fu_312_inp_q0 ),
    .W_Addr_A( grp_obj_detector_FCL_fu_312_W_Addr_A ),
    .W_EN_A( grp_obj_detector_FCL_fu_312_W_EN_A ),
    .W_WEN_A( grp_obj_detector_FCL_fu_312_W_WEN_A ),
    .W_Din_A( grp_obj_detector_FCL_fu_312_W_Din_A ),
    .W_Dout_A( grp_obj_detector_FCL_fu_312_W_Dout_A ),
    .W_offset( grp_obj_detector_FCL_fu_312_W_offset ),
    .ap_return( grp_obj_detector_FCL_fu_312_ap_return )
);

obj_detector_flatten grp_obj_detector_flatten_fu_323(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst_n_inv ),
    .ap_start( grp_obj_detector_flatten_fu_323_ap_start ),
    .ap_done( grp_obj_detector_flatten_fu_323_ap_done ),
    .ap_idle( grp_obj_detector_flatten_fu_323_ap_idle ),
    .ap_ready( grp_obj_detector_flatten_fu_323_ap_ready ),
    .inp_address0( grp_obj_detector_flatten_fu_323_inp_address0 ),
    .inp_ce0( grp_obj_detector_flatten_fu_323_inp_ce0 ),
    .inp_q0( grp_obj_detector_flatten_fu_323_inp_q0 ),
    .out_r_address0( grp_obj_detector_flatten_fu_323_out_r_address0 ),
    .out_r_ce0( grp_obj_detector_flatten_fu_323_out_r_ce0 ),
    .out_r_we0( grp_obj_detector_flatten_fu_323_out_r_we0 ),
    .out_r_d0( grp_obj_detector_flatten_fu_323_out_r_d0 )
);

obj_detector_fptrunc_64ns_32_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
obj_detector_fptrunc_64ns_32_1_U11(
    .din0( tmp_13_i_fu_329_p0 ),
    .dout( tmp_13_i_fu_329_p1 )
);

obj_detector_fpext_32ns_64_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
obj_detector_fpext_32ns_64_1_U12(
    .din0( y_assign_fu_332_p0 ),
    .dout( y_assign_fu_332_p1 )
);

obj_detector_fcmp_32ns_32ns_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
obj_detector_fcmp_32ns_32ns_1_1_U13(
    .din0( grp_fu_336_p0 ),
    .din1( grp_fu_336_p1 ),
    .opcode( grp_fu_336_opcode ),
    .dout( grp_fu_336_p2 )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// grp_obj_detector_FCL_fu_312_ap_start_ap_start_reg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_grp_obj_detector_FCL_fu_312_ap_start_ap_start_reg
    if (ap_rst_n_inv == 1'b1) begin
        grp_obj_detector_FCL_fu_312_ap_start_ap_start_reg <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_st23_fsm_22) | (ap_const_logic_1 == ap_sig_cseq_ST_st25_fsm_24))) begin
            grp_obj_detector_FCL_fu_312_ap_start_ap_start_reg <= ap_const_logic_1;
        end else if ((ap_const_logic_1 == grp_obj_detector_FCL_fu_312_ap_ready)) begin
            grp_obj_detector_FCL_fu_312_ap_start_ap_start_reg <= ap_const_logic_0;
        end
    end
end

/// grp_obj_detector_convolve_fu_299_ap_start_ap_start_reg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_grp_obj_detector_convolve_fu_299_ap_start_ap_start_reg
    if (ap_rst_n_inv == 1'b1) begin
        grp_obj_detector_convolve_fu_299_ap_start_ap_start_reg <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (ap_const_lv1_0 == exitcond2_fu_346_p2))) begin
            grp_obj_detector_convolve_fu_299_ap_start_ap_start_reg <= ap_const_logic_1;
        end else if ((ap_const_logic_1 == grp_obj_detector_convolve_fu_299_ap_ready)) begin
            grp_obj_detector_convolve_fu_299_ap_start_ap_start_reg <= ap_const_logic_0;
        end
    end
end

/// grp_obj_detector_flatten_fu_323_ap_start_ap_start_reg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_grp_obj_detector_flatten_fu_323_ap_start_ap_start_reg
    if (ap_rst_n_inv == 1'b1) begin
        grp_obj_detector_flatten_fu_323_ap_start_ap_start_reg <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_st13_fsm_12) & ~(ap_const_lv1_0 == exitcond_fu_594_p2))) begin
            grp_obj_detector_flatten_fu_323_ap_start_ap_start_reg <= ap_const_logic_1;
        end else if ((ap_const_logic_1 == grp_obj_detector_flatten_fu_323_ap_ready)) begin
            grp_obj_detector_flatten_fu_323_ap_start_ap_start_reg <= ap_const_logic_0;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) & ~(ap_const_lv1_0 == exitcond1_i_fu_404_p2))) begin
        i1_reg_233 <= i_2_reg_1185;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(ap_const_lv1_0 == exitcond2_fu_346_p2))) begin
        i1_reg_233 <= ap_const_lv3_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st14_fsm_13) & ~(ap_const_lv1_0 == exitcond1_i2_fu_674_p2))) begin
        i2_reg_266 <= i_3_reg_1267;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & ~(exitcond1_fu_358_p2 == ap_const_lv1_0))) begin
        i2_reg_266 <= ap_const_lv3_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st15_fsm_14) & ~(ap_const_lv1_0 == exitcond_i7_fu_817_p2))) begin
        i_i1_reg_277 <= i_5_reg_1286;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st13_fsm_12) & (ap_const_lv1_0 == exitcond_fu_594_p2))) begin
        i_i1_reg_277 <= ap_const_lv4_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) & ~(ap_const_lv1_0 == exitcond_i_fu_455_p2))) begin
        i_i_reg_244 <= i_4_reg_1198;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & (exitcond1_fu_358_p2 == ap_const_lv1_0))) begin
        i_i_reg_244 <= ap_const_lv5_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & ~(ap_const_logic_0 == grp_obj_detector_convolve_fu_299_ap_done))) begin
        i_reg_221 <= i_1_reg_1177;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        i_reg_221 <= ap_const_lv3_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st14_fsm_13) & (ap_const_lv1_0 == exitcond1_i2_fu_674_p2))) begin
        j_i6_reg_288 <= ap_const_lv4_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st21_fsm_20)) begin
        j_i6_reg_288 <= j_1_reg_1311;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) & (ap_const_lv1_0 == exitcond1_i_fu_404_p2))) begin
        j_i_reg_255 <= ap_const_lv5_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        j_i_reg_255 <= j_reg_1211;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        i_1_reg_1177 <= i_1_fu_352_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        i_2_reg_1185 <= i_2_fu_364_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st13_fsm_12)) begin
        i_3_reg_1267 <= i_3_fu_600_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        i_4_reg_1198 <= i_4_fu_410_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        i_5_reg_1286 <= i_5_fu_680_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st15_fsm_14)) begin
        j_1_reg_1311 <= j_1_fu_823_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        j_reg_1211 <= j_fu_461_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st16_fsm_15)) begin
        max_1_reg_1341 <= s1_q1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st18_fsm_17)) begin
        max_2_reg_1365 <= max_2_fu_977_p3;
        tmp_24_reg_1371 <= grp_fu_336_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st17_fsm_16)) begin
        max_3_reg_1358 <= s1_q1;
        tmp_16_reg_1353 <= tmp_16_fu_971_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st19_fsm_18)) begin
        max_4_reg_1381 <= max_4_fu_1069_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        or_cond_i_i_i_reg_1239 <= or_cond_i_i_i_fu_510_p2;
        sel_tmp1_i_reg_1244 <= sel_tmp1_i_fu_528_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st14_fsm_13) & (ap_const_lv1_0 == exitcond1_i2_fu_674_p2))) begin
        p_addr10_reg_1297[31 : 4] <= p_addr10_fu_772_p2[31 : 4];
        p_addr12_reg_1303[31 : 2] <= p_addr12_fu_811_p2[31 : 2];
        p_addr8_reg_1291[31 : 4] <= p_addr8_fu_733_p2[31 : 4];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st15_fsm_14) & (ap_const_lv1_0 == exitcond_i7_fu_817_p2))) begin
        p_addr13_reg_1326[31 : 1] <= p_addr13_fu_871_p2[31 : 1];
        p_addr16_reg_1336 <= p_addr16_fu_885_p2;
        p_addr7_reg_1331[31 : 1] <= p_addr7_fu_876_p2[31 : 1];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) & (ap_const_lv1_0 == exitcond1_i_fu_404_p2))) begin
        p_addr2_reg_1203[31 : 3] <= p_addr2_fu_449_p2[31 : 3];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st13_fsm_12) & (ap_const_lv1_0 == exitcond_fu_594_p2))) begin
        p_addr4_cast_reg_1272[9 : 3] <= p_addr4_cast_fu_636_p1[9 : 3];
        p_addr5_cast_reg_1278[8 : 2] <= p_addr5_cast_fu_670_p1[8 : 2];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & (exitcond1_fu_358_p2 == ap_const_lv1_0))) begin
        p_addr_cast_reg_1190[9 : 3] <= p_addr_cast_fu_400_p1[9 : 3];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st16_fsm_15) | (ap_const_logic_1 == ap_sig_cseq_ST_st19_fsm_18))) begin
        reg_341 <= s1_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        s0_load_reg_1226 <= s0_q0;
        y_assign_reg_1232 <= y_assign_fu_332_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_lv1_0 == or_cond_i_i_i_reg_1239) & (ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9))) begin
        sel_tmp2_i_reg_1254 <= sel_tmp2_i_fu_581_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        tmp_13_i_reg_1259 <= tmp_13_i_fu_329_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st20_fsm_19)) begin
        tmp_34_reg_1388 <= tmp_34_fu_1152_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) & (ap_const_lv1_0 == exitcond_i_fu_455_p2))) begin
        tmp_40_reg_1216[31 : 0] <= tmp_40_fu_476_p1[31 : 0];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8) & ~(ap_const_lv1_0 == sel_tmp1_i_reg_1244) & (ap_const_lv1_0 == or_cond_i_i_i_reg_1239))) begin
        tmp_8_reg_1249 <= tmp_8_fu_569_p2;
    end
end

/// A_EN_A assign process. ///
always @ (grp_obj_detector_convolve_fu_299_A_EN_A or ap_sig_cseq_ST_st3_fsm_2)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        A_EN_A = grp_obj_detector_convolve_fu_299_A_EN_A;
    end else begin
        A_EN_A = ap_const_logic_0;
    end
end

/// W0_EN_A assign process. ///
always @ (grp_obj_detector_convolve_fu_299_B_EN_A or ap_sig_cseq_ST_st3_fsm_2)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        W0_EN_A = grp_obj_detector_convolve_fu_299_B_EN_A;
    end else begin
        W0_EN_A = ap_const_logic_0;
    end
end

/// W1_EN_A assign process. ///
always @ (grp_obj_detector_FCL_fu_312_W_EN_A or ap_sig_cseq_ST_st24_fsm_23 or ap_sig_cseq_ST_st26_fsm_25)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st24_fsm_23) | (ap_const_logic_1 == ap_sig_cseq_ST_st26_fsm_25))) begin
        W1_EN_A = grp_obj_detector_FCL_fu_312_W_EN_A;
    end else begin
        W1_EN_A = ap_const_logic_0;
    end
end

/// ap_done assign process. ///
always @ (grp_obj_detector_FCL_fu_312_ap_done or ap_sig_cseq_ST_st26_fsm_25)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st26_fsm_25) & ~(ap_const_logic_0 == grp_obj_detector_FCL_fu_312_ap_done))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (grp_obj_detector_FCL_fu_312_ap_done or ap_sig_cseq_ST_st26_fsm_25)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st26_fsm_25) & ~(ap_const_logic_0 == grp_obj_detector_FCL_fu_312_ap_done))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st10_fsm_9 assign process. ///
always @ (ap_sig_bdd_246)
begin
    if (ap_sig_bdd_246) begin
        ap_sig_cseq_ST_st10_fsm_9 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st10_fsm_9 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st11_fsm_10 assign process. ///
always @ (ap_sig_bdd_256)
begin
    if (ap_sig_bdd_256) begin
        ap_sig_cseq_ST_st11_fsm_10 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st11_fsm_10 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st12_fsm_11 assign process. ///
always @ (ap_sig_bdd_475)
begin
    if (ap_sig_bdd_475) begin
        ap_sig_cseq_ST_st12_fsm_11 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st12_fsm_11 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st13_fsm_12 assign process. ///
always @ (ap_sig_bdd_265)
begin
    if (ap_sig_bdd_265) begin
        ap_sig_cseq_ST_st13_fsm_12 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st13_fsm_12 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st14_fsm_13 assign process. ///
always @ (ap_sig_bdd_281)
begin
    if (ap_sig_bdd_281) begin
        ap_sig_cseq_ST_st14_fsm_13 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st14_fsm_13 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st15_fsm_14 assign process. ///
always @ (ap_sig_bdd_299)
begin
    if (ap_sig_bdd_299) begin
        ap_sig_cseq_ST_st15_fsm_14 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st15_fsm_14 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st16_fsm_15 assign process. ///
always @ (ap_sig_bdd_134)
begin
    if (ap_sig_bdd_134) begin
        ap_sig_cseq_ST_st16_fsm_15 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st16_fsm_15 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st17_fsm_16 assign process. ///
always @ (ap_sig_bdd_325)
begin
    if (ap_sig_bdd_325) begin
        ap_sig_cseq_ST_st17_fsm_16 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st17_fsm_16 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st18_fsm_17 assign process. ///
always @ (ap_sig_bdd_335)
begin
    if (ap_sig_bdd_335) begin
        ap_sig_cseq_ST_st18_fsm_17 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st18_fsm_17 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st19_fsm_18 assign process. ///
always @ (ap_sig_bdd_141)
begin
    if (ap_sig_bdd_141) begin
        ap_sig_cseq_ST_st19_fsm_18 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st19_fsm_18 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st1_fsm_0 assign process. ///
always @ (ap_sig_bdd_67)
begin
    if (ap_sig_bdd_67) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st20_fsm_19 assign process. ///
always @ (ap_sig_bdd_350)
begin
    if (ap_sig_bdd_350) begin
        ap_sig_cseq_ST_st20_fsm_19 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st20_fsm_19 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st21_fsm_20 assign process. ///
always @ (ap_sig_bdd_495)
begin
    if (ap_sig_bdd_495) begin
        ap_sig_cseq_ST_st21_fsm_20 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st21_fsm_20 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st22_fsm_21 assign process. ///
always @ (ap_sig_bdd_541)
begin
    if (ap_sig_bdd_541) begin
        ap_sig_cseq_ST_st22_fsm_21 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st22_fsm_21 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st23_fsm_22 assign process. ///
always @ (ap_sig_bdd_507)
begin
    if (ap_sig_bdd_507) begin
        ap_sig_cseq_ST_st23_fsm_22 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st23_fsm_22 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st24_fsm_23 assign process. ///
always @ (ap_sig_bdd_522)
begin
    if (ap_sig_bdd_522) begin
        ap_sig_cseq_ST_st24_fsm_23 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st24_fsm_23 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st25_fsm_24 assign process. ///
always @ (ap_sig_bdd_514)
begin
    if (ap_sig_bdd_514) begin
        ap_sig_cseq_ST_st25_fsm_24 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st25_fsm_24 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st26_fsm_25 assign process. ///
always @ (ap_sig_bdd_529)
begin
    if (ap_sig_bdd_529) begin
        ap_sig_cseq_ST_st26_fsm_25 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st26_fsm_25 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st2_fsm_1 assign process. ///
always @ (ap_sig_bdd_156)
begin
    if (ap_sig_bdd_156) begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st3_fsm_2 assign process. ///
always @ (ap_sig_bdd_450)
begin
    if (ap_sig_bdd_450) begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st4_fsm_3 assign process. ///
always @ (ap_sig_bdd_165)
begin
    if (ap_sig_bdd_165) begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st5_fsm_4 assign process. ///
always @ (ap_sig_bdd_180)
begin
    if (ap_sig_bdd_180) begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st6_fsm_5 assign process. ///
always @ (ap_sig_bdd_194)
begin
    if (ap_sig_bdd_194) begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st7_fsm_6 assign process. ///
always @ (ap_sig_bdd_210)
begin
    if (ap_sig_bdd_210) begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st8_fsm_7 assign process. ///
always @ (ap_sig_bdd_221)
begin
    if (ap_sig_bdd_221) begin
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st9_fsm_8 assign process. ///
always @ (ap_sig_bdd_232)
begin
    if (ap_sig_bdd_232) begin
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_0;
    end
end

/// grp_fu_336_opcode assign process. ///
always @ (or_cond_i_i_i_reg_1239 or sel_tmp1_i_reg_1244 or ap_sig_cseq_ST_st9_fsm_8 or ap_sig_cseq_ST_st17_fsm_16 or ap_sig_cseq_ST_st18_fsm_17 or ap_sig_cseq_ST_st20_fsm_19)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st17_fsm_16) | (ap_const_logic_1 == ap_sig_cseq_ST_st18_fsm_17) | (ap_const_logic_1 == ap_sig_cseq_ST_st20_fsm_19))) begin
        grp_fu_336_opcode = ap_const_lv5_2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8) & ~(ap_const_lv1_0 == sel_tmp1_i_reg_1244) & (ap_const_lv1_0 == or_cond_i_i_i_reg_1239))) begin
        grp_fu_336_opcode = ap_const_lv5_4;
    end else begin
        grp_fu_336_opcode = 'bx;
    end
end

/// grp_fu_336_p0 assign process. ///
always @ (reg_341 or s0_load_reg_1226 or ap_sig_cseq_ST_st9_fsm_8 or ap_sig_cseq_ST_st17_fsm_16 or max_3_reg_1358 or ap_sig_cseq_ST_st18_fsm_17 or ap_sig_cseq_ST_st20_fsm_19)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st18_fsm_17)) begin
        grp_fu_336_p0 = max_3_reg_1358;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st17_fsm_16) | (ap_const_logic_1 == ap_sig_cseq_ST_st20_fsm_19))) begin
        grp_fu_336_p0 = reg_341;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        grp_fu_336_p0 = s0_load_reg_1226;
    end else begin
        grp_fu_336_p0 = 'bx;
    end
end

/// grp_fu_336_p1 assign process. ///
always @ (ap_sig_cseq_ST_st9_fsm_8 or max_1_reg_1341 or ap_sig_cseq_ST_st17_fsm_16 or max_2_fu_977_p3 or ap_sig_cseq_ST_st18_fsm_17 or max_4_reg_1381 or ap_sig_cseq_ST_st20_fsm_19)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st20_fsm_19)) begin
        grp_fu_336_p1 = max_4_reg_1381;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st18_fsm_17)) begin
        grp_fu_336_p1 = max_2_fu_977_p3;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st17_fsm_16)) begin
        grp_fu_336_p1 = max_1_reg_1341;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        grp_fu_336_p1 = ap_const_lv32_0;
    end else begin
        grp_fu_336_p1 = 'bx;
    end
end

/// grp_obj_detector_FCL_fu_312_W_offset assign process. ///
always @ (ap_sig_cseq_ST_st24_fsm_23 or ap_sig_cseq_ST_st26_fsm_25)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st26_fsm_25)) begin
        grp_obj_detector_FCL_fu_312_W_offset = ap_const_lv1_1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st24_fsm_23)) begin
        grp_obj_detector_FCL_fu_312_W_offset = ap_const_lv1_0;
    end else begin
        grp_obj_detector_FCL_fu_312_W_offset = 'bx;
    end
end

/// res_Addr_A_orig assign process. ///
always @ (res_addr_reg_1169 or ap_sig_cseq_ST_st24_fsm_23 or ap_sig_cseq_ST_st26_fsm_25)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st26_fsm_25)) begin
        res_Addr_A_orig = ap_const_lv64_1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st24_fsm_23)) begin
        res_Addr_A_orig = res_addr_reg_1169;
    end else begin
        res_Addr_A_orig = 'bx;
    end
end

/// res_EN_A assign process. ///
always @ (grp_obj_detector_FCL_fu_312_ap_done or ap_sig_cseq_ST_st24_fsm_23 or ap_sig_cseq_ST_st26_fsm_25)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st24_fsm_23) & ~(ap_const_logic_0 == grp_obj_detector_FCL_fu_312_ap_done)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st26_fsm_25) & ~(ap_const_logic_0 == grp_obj_detector_FCL_fu_312_ap_done)))) begin
        res_EN_A = ap_const_logic_1;
    end else begin
        res_EN_A = ap_const_logic_0;
    end
end

/// res_WEN_A assign process. ///
always @ (grp_obj_detector_FCL_fu_312_ap_done or ap_sig_cseq_ST_st24_fsm_23 or ap_sig_cseq_ST_st26_fsm_25)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st24_fsm_23) & ~(ap_const_logic_0 == grp_obj_detector_FCL_fu_312_ap_done)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st26_fsm_25) & ~(ap_const_logic_0 == grp_obj_detector_FCL_fu_312_ap_done)))) begin
        res_WEN_A = ap_const_lv4_F;
    end else begin
        res_WEN_A = ap_const_lv4_0;
    end
end

/// s0_address0 assign process. ///
always @ (ap_sig_cseq_ST_st6_fsm_5 or tmp_40_fu_476_p1 or grp_obj_detector_convolve_fu_299_conv_address0 or ap_sig_cseq_ST_st3_fsm_2)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        s0_address0 = tmp_40_fu_476_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        s0_address0 = grp_obj_detector_convolve_fu_299_conv_address0;
    end else begin
        s0_address0 = 'bx;
    end
end

/// s0_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st6_fsm_5 or grp_obj_detector_convolve_fu_299_conv_ce0 or ap_sig_cseq_ST_st3_fsm_2)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        s0_ce0 = ap_const_logic_1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        s0_ce0 = grp_obj_detector_convolve_fu_299_conv_ce0;
    end else begin
        s0_ce0 = ap_const_logic_0;
    end
end

/// s0_we0 assign process. ///
always @ (grp_obj_detector_convolve_fu_299_conv_we0 or ap_sig_cseq_ST_st3_fsm_2)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        s0_we0 = grp_obj_detector_convolve_fu_299_conv_we0;
    end else begin
        s0_we0 = ap_const_logic_0;
    end
end

/// s1_address0 assign process. ///
always @ (tmp_40_reg_1216 or ap_sig_cseq_ST_st15_fsm_14 or ap_sig_cseq_ST_st18_fsm_17 or ap_sig_cseq_ST_st12_fsm_11 or tmp_41_fu_846_p1 or tmp_49_fu_984_p1)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        s1_address0 = tmp_40_reg_1216;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st18_fsm_17)) begin
        s1_address0 = tmp_49_fu_984_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st15_fsm_14)) begin
        s1_address0 = tmp_41_fu_846_p1;
    end else begin
        s1_address0 = 'bx;
    end
end

/// s1_address1 assign process. ///
always @ (ap_sig_cseq_ST_st16_fsm_15 or ap_sig_cseq_ST_st15_fsm_14 or tmp_43_fu_866_p1 or tmp_46_fu_890_p1)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st16_fsm_15)) begin
        s1_address1 = tmp_46_fu_890_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st15_fsm_14)) begin
        s1_address1 = tmp_43_fu_866_p1;
    end else begin
        s1_address1 = 'bx;
    end
end

/// s1_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st15_fsm_14 or ap_sig_cseq_ST_st18_fsm_17 or ap_sig_cseq_ST_st12_fsm_11)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st15_fsm_14) | (ap_const_logic_1 == ap_sig_cseq_ST_st18_fsm_17) | (ap_const_logic_1 == ap_sig_cseq_ST_st12_fsm_11))) begin
        s1_ce0 = ap_const_logic_1;
    end else begin
        s1_ce0 = ap_const_logic_0;
    end
end

/// s1_ce1 assign process. ///
always @ (ap_sig_cseq_ST_st16_fsm_15 or ap_sig_cseq_ST_st15_fsm_14)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st16_fsm_15) | (ap_const_logic_1 == ap_sig_cseq_ST_st15_fsm_14))) begin
        s1_ce1 = ap_const_logic_1;
    end else begin
        s1_ce1 = ap_const_logic_0;
    end
end

/// s1_we0 assign process. ///
always @ (ap_sig_cseq_ST_st12_fsm_11)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        s1_we0 = ap_const_logic_1;
    end else begin
        s1_we0 = ap_const_logic_0;
    end
end

/// s2_address0 assign process. ///
always @ (grp_obj_detector_flatten_fu_323_inp_address0 or ap_sig_cseq_ST_st21_fsm_20 or ap_sig_cseq_ST_st22_fsm_21 or tmp_52_fu_1165_p1)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st21_fsm_20)) begin
        s2_address0 = tmp_52_fu_1165_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st22_fsm_21)) begin
        s2_address0 = grp_obj_detector_flatten_fu_323_inp_address0;
    end else begin
        s2_address0 = 'bx;
    end
end

/// s2_ce0 assign process. ///
always @ (grp_obj_detector_flatten_fu_323_inp_ce0 or ap_sig_cseq_ST_st21_fsm_20 or ap_sig_cseq_ST_st22_fsm_21)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st21_fsm_20)) begin
        s2_ce0 = ap_const_logic_1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st22_fsm_21)) begin
        s2_ce0 = grp_obj_detector_flatten_fu_323_inp_ce0;
    end else begin
        s2_ce0 = ap_const_logic_0;
    end
end

/// s2_we0 assign process. ///
always @ (ap_sig_cseq_ST_st21_fsm_20)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st21_fsm_20)) begin
        s2_we0 = ap_const_logic_1;
    end else begin
        s2_we0 = ap_const_logic_0;
    end
end

/// s3_address0 assign process. ///
always @ (grp_obj_detector_FCL_fu_312_inp_address0 or grp_obj_detector_flatten_fu_323_out_r_address0 or ap_sig_cseq_ST_st24_fsm_23 or ap_sig_cseq_ST_st26_fsm_25 or ap_sig_cseq_ST_st22_fsm_21)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st22_fsm_21)) begin
        s3_address0 = grp_obj_detector_flatten_fu_323_out_r_address0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st24_fsm_23) | (ap_const_logic_1 == ap_sig_cseq_ST_st26_fsm_25))) begin
        s3_address0 = grp_obj_detector_FCL_fu_312_inp_address0;
    end else begin
        s3_address0 = 'bx;
    end
end

/// s3_ce0 assign process. ///
always @ (grp_obj_detector_FCL_fu_312_inp_ce0 or grp_obj_detector_flatten_fu_323_out_r_ce0 or ap_sig_cseq_ST_st24_fsm_23 or ap_sig_cseq_ST_st26_fsm_25 or ap_sig_cseq_ST_st22_fsm_21)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st22_fsm_21)) begin
        s3_ce0 = grp_obj_detector_flatten_fu_323_out_r_ce0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st24_fsm_23) | (ap_const_logic_1 == ap_sig_cseq_ST_st26_fsm_25))) begin
        s3_ce0 = grp_obj_detector_FCL_fu_312_inp_ce0;
    end else begin
        s3_ce0 = ap_const_logic_0;
    end
end

/// s3_we0 assign process. ///
always @ (grp_obj_detector_flatten_fu_323_out_r_we0 or ap_sig_cseq_ST_st22_fsm_21)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st22_fsm_21)) begin
        s3_we0 = grp_obj_detector_flatten_fu_323_out_r_we0;
    end else begin
        s3_we0 = ap_const_logic_0;
    end
end
/// the next state (ap_NS_fsm) of the state machine. ///
always @ (ap_start or ap_CS_fsm or exitcond1_fu_358_p2 or exitcond1_i_fu_404_p2 or exitcond_i_fu_455_p2 or exitcond_fu_594_p2 or exitcond1_i2_fu_674_p2 or exitcond_i7_fu_817_p2 or grp_obj_detector_convolve_fu_299_ap_done or grp_obj_detector_FCL_fu_312_ap_done or grp_obj_detector_flatten_fu_323_ap_done or exitcond2_fu_346_p2)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            if (~(ap_const_lv1_0 == exitcond2_fu_346_p2)) begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_st3_fsm_2 : 
        begin
            if (~(ap_const_logic_0 == grp_obj_detector_convolve_fu_299_ap_done)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_st4_fsm_3 : 
        begin
            if ((exitcond1_fu_358_p2 == ap_const_lv1_0)) begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end else begin
                ap_NS_fsm = ap_ST_st13_fsm_12;
            end
        end
        ap_ST_st5_fsm_4 : 
        begin
            if ((ap_const_lv1_0 == exitcond1_i_fu_404_p2)) begin
                ap_NS_fsm = ap_ST_st6_fsm_5;
            end else begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end
        end
        ap_ST_st6_fsm_5 : 
        begin
            if ((ap_const_lv1_0 == exitcond_i_fu_455_p2)) begin
                ap_NS_fsm = ap_ST_st7_fsm_6;
            end else begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end
        end
        ap_ST_st7_fsm_6 : 
        begin
            ap_NS_fsm = ap_ST_st8_fsm_7;
        end
        ap_ST_st8_fsm_7 : 
        begin
            ap_NS_fsm = ap_ST_st9_fsm_8;
        end
        ap_ST_st9_fsm_8 : 
        begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st10_fsm_9 : 
        begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st11_fsm_10 : 
        begin
            ap_NS_fsm = ap_ST_st12_fsm_11;
        end
        ap_ST_st12_fsm_11 : 
        begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st13_fsm_12 : 
        begin
            if ((ap_const_lv1_0 == exitcond_fu_594_p2)) begin
                ap_NS_fsm = ap_ST_st14_fsm_13;
            end else begin
                ap_NS_fsm = ap_ST_st22_fsm_21;
            end
        end
        ap_ST_st14_fsm_13 : 
        begin
            if ((ap_const_lv1_0 == exitcond1_i2_fu_674_p2)) begin
                ap_NS_fsm = ap_ST_st15_fsm_14;
            end else begin
                ap_NS_fsm = ap_ST_st13_fsm_12;
            end
        end
        ap_ST_st15_fsm_14 : 
        begin
            if ((ap_const_lv1_0 == exitcond_i7_fu_817_p2)) begin
                ap_NS_fsm = ap_ST_st16_fsm_15;
            end else begin
                ap_NS_fsm = ap_ST_st14_fsm_13;
            end
        end
        ap_ST_st16_fsm_15 : 
        begin
            ap_NS_fsm = ap_ST_st17_fsm_16;
        end
        ap_ST_st17_fsm_16 : 
        begin
            ap_NS_fsm = ap_ST_st18_fsm_17;
        end
        ap_ST_st18_fsm_17 : 
        begin
            ap_NS_fsm = ap_ST_st19_fsm_18;
        end
        ap_ST_st19_fsm_18 : 
        begin
            ap_NS_fsm = ap_ST_st20_fsm_19;
        end
        ap_ST_st20_fsm_19 : 
        begin
            ap_NS_fsm = ap_ST_st21_fsm_20;
        end
        ap_ST_st21_fsm_20 : 
        begin
            ap_NS_fsm = ap_ST_st15_fsm_14;
        end
        ap_ST_st22_fsm_21 : 
        begin
            if (~(ap_const_logic_0 == grp_obj_detector_flatten_fu_323_ap_done)) begin
                ap_NS_fsm = ap_ST_st23_fsm_22;
            end else begin
                ap_NS_fsm = ap_ST_st22_fsm_21;
            end
        end
        ap_ST_st23_fsm_22 : 
        begin
            ap_NS_fsm = ap_ST_st24_fsm_23;
        end
        ap_ST_st24_fsm_23 : 
        begin
            if (~(ap_const_logic_0 == grp_obj_detector_FCL_fu_312_ap_done)) begin
                ap_NS_fsm = ap_ST_st25_fsm_24;
            end else begin
                ap_NS_fsm = ap_ST_st24_fsm_23;
            end
        end
        ap_ST_st25_fsm_24 : 
        begin
            ap_NS_fsm = ap_ST_st26_fsm_25;
        end
        ap_ST_st26_fsm_25 : 
        begin
            if (~(ap_const_logic_0 == grp_obj_detector_FCL_fu_312_ap_done)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st26_fsm_25;
            end
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign A_Addr_A = grp_obj_detector_convolve_fu_299_A_Addr_A;
assign A_Clk_A = ap_clk;
assign A_Din_A = ap_const_lv32_0;
assign A_Rst_A = ap_rst_n_inv;
assign A_WEN_A = ap_const_lv4_0;
assign W0_Addr_A = grp_obj_detector_convolve_fu_299_B_Addr_A;
assign W0_Clk_A = ap_clk;
assign W0_Din_A = ap_const_lv32_0;
assign W0_Rst_A = ap_rst_n_inv;
assign W0_WEN_A = ap_const_lv4_0;
assign W1_Addr_A = grp_obj_detector_FCL_fu_312_W_Addr_A;
assign W1_Clk_A = ap_clk;
assign W1_Din_A = ap_const_lv32_0;
assign W1_Rst_A = ap_rst_n_inv;
assign W1_WEN_A = ap_const_lv4_0;

/// ap_rst_n_inv assign process. ///
always @ (ap_rst_n)
begin
    ap_rst_n_inv = ~ap_rst_n;
end

/// ap_sig_bdd_134 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_134 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_F]);
end

/// ap_sig_bdd_141 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_141 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_12]);
end

/// ap_sig_bdd_156 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_156 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end

/// ap_sig_bdd_165 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_165 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3]);
end

/// ap_sig_bdd_180 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_180 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4]);
end

/// ap_sig_bdd_194 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_194 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5]);
end

/// ap_sig_bdd_210 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_210 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_6]);
end

/// ap_sig_bdd_221 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_221 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_7]);
end

/// ap_sig_bdd_232 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_232 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_8]);
end

/// ap_sig_bdd_246 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_246 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_9]);
end

/// ap_sig_bdd_256 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_256 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_A]);
end

/// ap_sig_bdd_265 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_265 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_C]);
end

/// ap_sig_bdd_281 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_281 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_D]);
end

/// ap_sig_bdd_299 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_299 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_E]);
end

/// ap_sig_bdd_325 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_325 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_10]);
end

/// ap_sig_bdd_335 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_335 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_11]);
end

/// ap_sig_bdd_350 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_350 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_13]);
end

/// ap_sig_bdd_450 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_450 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end

/// ap_sig_bdd_475 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_475 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_B]);
end

/// ap_sig_bdd_495 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_495 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_14]);
end

/// ap_sig_bdd_507 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_507 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_16]);
end

/// ap_sig_bdd_514 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_514 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_18]);
end

/// ap_sig_bdd_522 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_522 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_17]);
end

/// ap_sig_bdd_529 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_529 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_19]);
end

/// ap_sig_bdd_541 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_541 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_15]);
end

/// ap_sig_bdd_67 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_67 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end
assign exitcond1_fu_358_p2 = (i1_reg_233 == ap_const_lv3_6? 1'b1: 1'b0);
assign exitcond1_i2_fu_674_p2 = (i_i1_reg_277 == ap_const_lv4_C? 1'b1: 1'b0);
assign exitcond1_i_fu_404_p2 = (i_i_reg_244 == ap_const_lv5_18? 1'b1: 1'b0);
assign exitcond2_fu_346_p2 = (i_reg_221 == ap_const_lv3_6? 1'b1: 1'b0);
assign exitcond_fu_594_p2 = (i2_reg_266 == ap_const_lv3_6? 1'b1: 1'b0);
assign exitcond_i7_fu_817_p2 = (j_i6_reg_288 == ap_const_lv4_C? 1'b1: 1'b0);
assign exitcond_i_fu_455_p2 = (j_i_reg_255 == ap_const_lv5_18? 1'b1: 1'b0);
assign grp_obj_detector_FCL_fu_312_W_Dout_A = W1_Dout_A;
assign grp_obj_detector_FCL_fu_312_ap_start = grp_obj_detector_FCL_fu_312_ap_start_ap_start_reg;
assign grp_obj_detector_FCL_fu_312_inp_q0 = s3_q0;
assign grp_obj_detector_convolve_fu_299_A_Dout_A = A_Dout_A;
assign grp_obj_detector_convolve_fu_299_B_Dout_A = W0_Dout_A;
assign grp_obj_detector_convolve_fu_299_ap_start = grp_obj_detector_convolve_fu_299_ap_start_ap_start_reg;
assign grp_obj_detector_convolve_fu_299_tmp = i_reg_221;
assign grp_obj_detector_convolve_fu_299_tmp1 = i_reg_221;
assign grp_obj_detector_flatten_fu_323_ap_start = grp_obj_detector_flatten_fu_323_ap_start_ap_start_reg;
assign grp_obj_detector_flatten_fu_323_inp_q0 = s2_q0;
assign i_1_fu_352_p2 = (i_reg_221 + ap_const_lv3_1);
assign i_2_fu_364_p2 = (i1_reg_233 + ap_const_lv3_1);
assign i_3_fu_600_p2 = (i2_reg_266 + ap_const_lv3_1);
assign i_4_fu_410_p2 = (i_i_reg_244 + ap_const_lv5_1);
assign i_5_fu_680_p2 = (i_i1_reg_277 + ap_const_lv4_1);
assign inp_load_i_to_int_fu_534_p1 = s0_load_reg_1226;
assign j_1_fu_823_p2 = (j_i6_reg_288 + ap_const_lv4_1);
assign j_fu_461_p2 = (j_i_reg_255 + ap_const_lv5_1);
assign loc_V_1_fu_494_p1 = p_Val2_s_fu_481_p1[51:0];
assign loc_V_fu_484_p4 = {{p_Val2_s_fu_481_p1[ap_const_lv32_3E : ap_const_lv32_34]}};
assign max_1_i_to_int_fu_1093_p1 = max_4_reg_1381;
assign max_2_fu_977_p3 = ((tmp_16_reg_1353[0:0]===1'b1)? reg_341: max_1_reg_1341);
assign max_3_i_to_int_fu_912_p1 = max_1_reg_1341;
assign max_4_fu_1069_p3 = ((tmp_25_fu_1064_p2[0:0]===1'b1)? max_3_reg_1358: max_2_reg_1365);
assign max_6_i_to_int_fu_1005_p1 = max_2_reg_1365;
assign max_7_i_to_int_fu_988_p1 = max_3_reg_1358;
assign max_8_i_to_int_fu_1075_p1 = reg_341;
assign max_i_to_int_fu_894_p1 = reg_341;
assign notlhs1_fu_929_p2 = (tmp_9_fu_898_p4 != ap_const_lv8_FF? 1'b1: 1'b0);
assign notlhs2_fu_947_p2 = (tmp_10_fu_915_p4 != ap_const_lv8_FF? 1'b1: 1'b0);
assign notlhs3_fu_1022_p2 = (tmp_17_fu_991_p4 != ap_const_lv8_FF? 1'b1: 1'b0);
assign notlhs4_fu_1040_p2 = (tmp_19_fu_1008_p4 != ap_const_lv8_FF? 1'b1: 1'b0);
assign notlhs5_fu_1110_p2 = (tmp_26_fu_1079_p4 != ap_const_lv8_FF? 1'b1: 1'b0);
assign notlhs6_fu_1128_p2 = (tmp_28_fu_1096_p4 != ap_const_lv8_FF? 1'b1: 1'b0);
assign notlhs_fu_551_p2 = (tmp_fu_537_p4 != ap_const_lv8_FF? 1'b1: 1'b0);
assign notrhs1_fu_935_p2 = (tmp_44_fu_908_p1 == ap_const_lv23_0? 1'b1: 1'b0);
assign notrhs2_fu_953_p2 = (tmp_45_fu_925_p1 == ap_const_lv23_0? 1'b1: 1'b0);
assign notrhs3_fu_1028_p2 = (tmp_47_fu_1001_p1 == ap_const_lv23_0? 1'b1: 1'b0);
assign notrhs4_fu_1046_p2 = (tmp_48_fu_1018_p1 == ap_const_lv23_0? 1'b1: 1'b0);
assign notrhs5_fu_1116_p2 = (tmp_50_fu_1089_p1 == ap_const_lv23_0? 1'b1: 1'b0);
assign notrhs6_fu_1134_p2 = (tmp_51_fu_1106_p1 == ap_const_lv23_0? 1'b1: 1'b0);
assign notrhs_fu_557_p2 = (tmp_42_fu_547_p1 == ap_const_lv23_0? 1'b1: 1'b0);
assign obj_detector_control_s_axi_U_ap_dummy_ce = ap_const_logic_1;
assign or_cond1_i_i_i_fu_522_p2 = (tmp_2_i_i_i_fu_516_p2 | tmp_1_i_i_i_fu_504_p2);
assign or_cond_i_i_i_fu_510_p2 = (tmp_i_i_i_fu_498_p2 & tmp_1_i_i_i_fu_504_p2);
assign p_Val2_s_fu_481_p1 = y_assign_reg_1232;
assign p_addr10_fu_772_p2 = ($signed(p_shl4_fu_756_p1) - $signed(p_shl5_fu_768_p1));
assign p_addr11_fu_782_p2 = ($signed(tmp_3_i_trn_cast_fu_778_p1) + $signed(p_addr5_cast_reg_1278));
assign p_addr12_fu_811_p2 = ($signed(p_shl8_fu_795_p1) - $signed(p_shl9_fu_807_p1));
assign p_addr13_fu_871_p2 = ($signed(tmp_5_i_trn_fu_837_p1) + $signed(p_addr10_reg_1297));
assign p_addr14_fu_841_p2 = ($signed(tmp_5_i_trn_fu_837_p1) + $signed(p_addr8_reg_1291));
assign p_addr15_fu_861_p2 = ($signed(tmp_8_i_trn_fu_857_p1) + $signed(p_addr8_reg_1291));
assign p_addr16_fu_885_p2 = ($signed(tmp_12_i_trn_fu_881_p1) + $signed(p_addr12_reg_1303));
assign p_addr1_fu_420_p2 = ($signed(p_addr_cast_reg_1190) + $signed(tmp_i_trn_cast_fu_416_p1));
assign p_addr2_fu_449_p2 = ($signed(p_shl2_fu_433_p1) - $signed(p_shl3_fu_445_p1));
assign p_addr3_fu_471_p2 = ($signed(tmp_i_trn_fu_467_p1) + $signed(p_addr2_reg_1203));
assign p_addr4_cast_fu_636_p1 = $signed(p_addr4_fu_630_p2);
assign p_addr4_fu_630_p2 = (p_shl6_cast_fu_614_p1 - p_shl7_cast_fu_626_p1);
assign p_addr5_cast_fu_670_p1 = $signed(p_addr5_fu_664_p2);
assign p_addr5_fu_664_p2 = (p_shl4_cast_fu_648_p1 - p_shl5_cast_fu_660_p1);
assign p_addr6_fu_704_p2 = ($signed(tmp_i4_trn_cast_fu_700_p1) + $signed(p_addr4_cast_reg_1272));
assign p_addr7_fu_876_p2 = ($signed(tmp_8_i_trn_fu_857_p1) + $signed(p_addr10_reg_1297));
assign p_addr8_fu_733_p2 = ($signed(p_shl_fu_717_p1) - $signed(p_shl1_fu_729_p1));
assign p_addr9_fu_743_p2 = ($signed(tmp_2_i_trn9_cast_fu_739_p1) + $signed(p_addr4_cast_reg_1272));
assign p_addr_cast_fu_400_p1 = $signed(p_addr_fu_394_p2);
assign p_addr_fu_394_p2 = (p_shl_cast_fu_378_p1 - p_shl1_cast_fu_390_p1);
assign p_shl1_cast_fu_390_p1 = tmp_1_fu_382_p3;
assign p_shl1_fu_729_p1 = $signed(tmp_35_fu_721_p3);
assign p_shl2_fu_433_p1 = $signed(tmp_20_fu_425_p3);
assign p_shl3_fu_445_p1 = $signed(tmp_27_fu_437_p3);
assign p_shl4_cast_fu_648_p1 = tmp_11_fu_640_p3;
assign p_shl4_fu_756_p1 = $signed(tmp_36_fu_748_p3);
assign p_shl5_cast_fu_660_p1 = tmp_18_fu_652_p3;
assign p_shl5_fu_768_p1 = $signed(tmp_37_fu_760_p3);
assign p_shl6_cast_fu_614_p1 = tmp_2_fu_606_p3;
assign p_shl7_cast_fu_626_p1 = tmp_6_fu_618_p3;
assign p_shl8_fu_795_p1 = $signed(tmp_38_fu_787_p3);
assign p_shl9_fu_807_p1 = $signed(tmp_39_fu_799_p3);
assign p_shl_cast_fu_378_p1 = tmp_s_fu_370_p3;
assign p_shl_fu_717_p1 = $signed(tmp_29_fu_709_p3);
assign res_1_fu_575_p3 = ((tmp_8_reg_1249[0:0]===1'b1)? ap_const_lv64_0: y_assign_reg_1232);
assign res_Addr_A = res_Addr_A_orig << ap_const_lv32_2;
assign res_Clk_A = ap_clk;
assign res_Din_A = grp_obj_detector_FCL_fu_312_ap_return;
assign res_Rst_A = ap_rst_n_inv;
assign res_addr_gep_fu_136_p3 = ap_const_lv64_0;
assign s0_d0 = grp_obj_detector_convolve_fu_299_conv_d0;
assign s1_d0 = tmp_13_i_reg_1259;
assign s2_d0 = ((tmp_34_reg_1388[0:0]===1'b1)? reg_341: max_4_reg_1381);
assign s3_d0 = grp_obj_detector_flatten_fu_323_out_r_d0;
assign sel_tmp1_i_fu_528_p2 = (or_cond_i_i_i_fu_510_p2 ^ or_cond1_i_i_i_fu_522_p2);
assign sel_tmp2_i_fu_581_p3 = ((sel_tmp1_i_reg_1244[0:0]===1'b1)? res_1_fu_575_p3: ap_const_lv64_0);
assign tmp_10_fu_915_p4 = {{max_3_i_to_int_fu_912_p1[ap_const_lv32_1E : ap_const_lv32_17]}};
assign tmp_11_fu_640_p3 = {{i2_reg_266}, {ap_const_lv4_0}};
assign tmp_12_fu_941_p2 = (notrhs1_fu_935_p2 | notlhs1_fu_929_p2);
assign tmp_12_i_trn_fu_881_p1 = j_i6_reg_288;
assign tmp_13_fu_959_p2 = (notrhs2_fu_953_p2 | notlhs2_fu_947_p2);
assign tmp_13_i_fu_329_p0 = ((or_cond_i_i_i_reg_1239[0:0]===1'b1)? y_assign_reg_1232: sel_tmp2_i_reg_1254);
assign tmp_14_fu_965_p2 = (tmp_12_fu_941_p2 & tmp_13_fu_959_p2);
assign tmp_16_fu_971_p2 = (tmp_14_fu_965_p2 & grp_fu_336_p2);
assign tmp_17_fu_991_p4 = {{max_7_i_to_int_fu_988_p1[ap_const_lv32_1E : ap_const_lv32_17]}};
assign tmp_18_fu_652_p3 = {{i2_reg_266}, {ap_const_lv2_0}};
assign tmp_19_fu_1008_p4 = {{max_6_i_to_int_fu_1005_p1[ap_const_lv32_1E : ap_const_lv32_17]}};
assign tmp_1_fu_382_p3 = {{i1_reg_233}, {ap_const_lv3_0}};
assign tmp_1_i_fu_694_p2 = (tmp_i3_fu_686_p3 | ap_const_lv5_1);
assign tmp_1_i_i_i_fu_504_p2 = (loc_V_1_fu_494_p1 == ap_const_lv52_0? 1'b1: 1'b0);
assign tmp_20_fu_425_p3 = {{p_addr1_fu_420_p2}, {ap_const_lv5_0}};
assign tmp_21_fu_1034_p2 = (notrhs3_fu_1028_p2 | notlhs3_fu_1022_p2);
assign tmp_22_fu_1052_p2 = (notrhs4_fu_1046_p2 | notlhs4_fu_1040_p2);
assign tmp_23_fu_1058_p2 = (tmp_21_fu_1034_p2 & tmp_22_fu_1052_p2);
assign tmp_25_fu_1064_p2 = (tmp_23_fu_1058_p2 & tmp_24_reg_1371);
assign tmp_26_fu_1079_p4 = {{max_8_i_to_int_fu_1075_p1[ap_const_lv32_1E : ap_const_lv32_17]}};
assign tmp_27_fu_437_p3 = {{p_addr1_fu_420_p2}, {ap_const_lv3_0}};
assign tmp_28_fu_1096_p4 = {{max_1_i_to_int_fu_1093_p1[ap_const_lv32_1E : ap_const_lv32_17]}};
assign tmp_29_fu_709_p3 = {{p_addr6_fu_704_p2}, {ap_const_lv5_0}};
assign tmp_2_fu_606_p3 = {{i2_reg_266}, {ap_const_lv5_0}};
assign tmp_2_i_i_i_fu_516_p2 = (loc_V_fu_484_p4 != ap_const_lv11_7FF? 1'b1: 1'b0);
assign tmp_2_i_trn9_cast_fu_739_p1 = tmp_1_i_fu_694_p2;
assign tmp_30_fu_1122_p2 = (notrhs5_fu_1116_p2 | notlhs5_fu_1110_p2);
assign tmp_31_fu_1140_p2 = (notrhs6_fu_1134_p2 | notlhs6_fu_1128_p2);
assign tmp_32_fu_1146_p2 = (tmp_30_fu_1122_p2 & tmp_31_fu_1140_p2);
assign tmp_34_fu_1152_p2 = (tmp_32_fu_1146_p2 & grp_fu_336_p2);
assign tmp_35_fu_721_p3 = {{p_addr6_fu_704_p2}, {ap_const_lv3_0}};
assign tmp_36_fu_748_p3 = {{p_addr9_fu_743_p2}, {ap_const_lv5_0}};
assign tmp_37_fu_760_p3 = {{p_addr9_fu_743_p2}, {ap_const_lv3_0}};
assign tmp_38_fu_787_p3 = {{p_addr11_fu_782_p2}, {ap_const_lv4_0}};
assign tmp_39_fu_799_p3 = {{p_addr11_fu_782_p2}, {ap_const_lv2_0}};
assign tmp_3_fu_563_p2 = (notrhs_fu_557_p2 | notlhs_fu_551_p2);
assign tmp_3_i_trn_cast_fu_778_p1 = i_i1_reg_277;
assign tmp_40_fu_476_p1 = $unsigned(p_addr3_fu_471_p2);
assign tmp_41_fu_846_p1 = $unsigned(p_addr14_fu_841_p2);
assign tmp_42_fu_547_p1 = inp_load_i_to_int_fu_534_p1[22:0];
assign tmp_43_fu_866_p1 = $unsigned(p_addr15_fu_861_p2);
assign tmp_44_fu_908_p1 = max_i_to_int_fu_894_p1[22:0];
assign tmp_45_fu_925_p1 = max_3_i_to_int_fu_912_p1[22:0];
assign tmp_46_fu_890_p1 = $unsigned(p_addr13_reg_1326);
assign tmp_47_fu_1001_p1 = max_7_i_to_int_fu_988_p1[22:0];
assign tmp_48_fu_1018_p1 = max_6_i_to_int_fu_1005_p1[22:0];
assign tmp_49_fu_984_p1 = $unsigned(p_addr7_reg_1331);
assign tmp_4_i_fu_829_p3 = {{j_i6_reg_288}, {ap_const_lv1_0}};
assign tmp_50_fu_1089_p1 = max_8_i_to_int_fu_1075_p1[22:0];
assign tmp_51_fu_1106_p1 = max_1_i_to_int_fu_1093_p1[22:0];
assign tmp_52_fu_1165_p1 = $unsigned(p_addr16_reg_1336);
assign tmp_5_i_trn_fu_837_p1 = tmp_4_i_fu_829_p3;
assign tmp_6_fu_618_p3 = {{i2_reg_266}, {ap_const_lv3_0}};
assign tmp_7_i_fu_851_p2 = (tmp_4_i_fu_829_p3 | ap_const_lv5_1);
assign tmp_8_fu_569_p2 = (tmp_3_fu_563_p2 & grp_fu_336_p2);
assign tmp_8_i_trn_fu_857_p1 = tmp_7_i_fu_851_p2;
assign tmp_9_fu_898_p4 = {{max_i_to_int_fu_894_p1[ap_const_lv32_1E : ap_const_lv32_17]}};
assign tmp_fu_537_p4 = {{inp_load_i_to_int_fu_534_p1[ap_const_lv32_1E : ap_const_lv32_17]}};
assign tmp_i3_fu_686_p3 = {{i_i1_reg_277}, {ap_const_lv1_0}};
assign tmp_i4_trn_cast_fu_700_p1 = tmp_i3_fu_686_p3;
assign tmp_i_i_i_fu_498_p2 = (loc_V_fu_484_p4 == ap_const_lv11_0? 1'b1: 1'b0);
assign tmp_i_trn_cast_fu_416_p1 = i_i_reg_244;
assign tmp_i_trn_fu_467_p1 = j_i_reg_255;
assign tmp_s_fu_370_p3 = {{i1_reg_233}, {ap_const_lv5_0}};
assign y_assign_fu_332_p0 = s0_q0;
always @ (posedge ap_clk)
begin
    res_addr_reg_1169 <= 1'b0;
    p_addr_cast_reg_1190[2:0] <= 3'b000;
    p_addr2_reg_1203[2:0] <= 3'b000;
    tmp_40_reg_1216[63:32] <= 32'b00000000000000000000000000000000;
    p_addr4_cast_reg_1272[2:0] <= 3'b000;
    p_addr5_cast_reg_1278[1:0] <= 2'b00;
    p_addr8_reg_1291[3:0] <= 4'b0000;
    p_addr10_reg_1297[3:0] <= 4'b1000;
    p_addr12_reg_1303[1:0] <= 2'b00;
    p_addr13_reg_1326[0] <= 1'b0;
    p_addr7_reg_1331[0] <= 1'b1;
end



endmodule //obj_detector

