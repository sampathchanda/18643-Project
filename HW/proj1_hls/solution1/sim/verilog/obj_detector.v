// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.2
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="obj_detector,hls_ip_2015_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.626000,HLS_SYN_LAT=565328,HLS_SYN_TPT=none,HLS_SYN_MEM=20,HLS_SYN_DSP=41,HLS_SYN_FF=9022,HLS_SYN_LUT=13519}" *)

module obj_detector (
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        ap_clk,
        ap_rst_n,
        A_Addr_A,
        A_EN_A,
        A_WEN_A,
        A_Din_A,
        A_Dout_A,
        A_Clk_A,
        A_Rst_A,
        W0_Addr_A,
        W0_EN_A,
        W0_WEN_A,
        W0_Din_A,
        W0_Dout_A,
        W0_Clk_A,
        W0_Rst_A,
        W1_Addr_A,
        W1_EN_A,
        W1_WEN_A,
        W1_Din_A,
        W1_Dout_A,
        W1_Clk_A,
        W1_Rst_A,
        res_Addr_A,
        res_EN_A,
        res_WEN_A,
        res_Din_A,
        res_Dout_A,
        res_Clk_A,
        res_Rst_A,
        interrupt
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 20'b1;
parameter    ap_ST_st2_fsm_1 = 20'b10;
parameter    ap_ST_st3_fsm_2 = 20'b100;
parameter    ap_ST_st4_fsm_3 = 20'b1000;
parameter    ap_ST_st5_fsm_4 = 20'b10000;
parameter    ap_ST_st6_fsm_5 = 20'b100000;
parameter    ap_ST_st7_fsm_6 = 20'b1000000;
parameter    ap_ST_st8_fsm_7 = 20'b10000000;
parameter    ap_ST_st9_fsm_8 = 20'b100000000;
parameter    ap_ST_st10_fsm_9 = 20'b1000000000;
parameter    ap_ST_st11_fsm_10 = 20'b10000000000;
parameter    ap_ST_st12_fsm_11 = 20'b100000000000;
parameter    ap_ST_st13_fsm_12 = 20'b1000000000000;
parameter    ap_ST_st14_fsm_13 = 20'b10000000000000;
parameter    ap_ST_st15_fsm_14 = 20'b100000000000000;
parameter    ap_ST_st16_fsm_15 = 20'b1000000000000000;
parameter    ap_ST_st17_fsm_16 = 20'b10000000000000000;
parameter    ap_ST_st18_fsm_17 = 20'b100000000000000000;
parameter    ap_ST_st19_fsm_18 = 20'b1000000000000000000;
parameter    ap_ST_st20_fsm_19 = 20'b10000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    ap_const_int64_8 = 8;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 5;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv32_12 = 32'b10010;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv32_13 = 32'b10011;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv32_11 = 32'b10001;
parameter    ap_const_lv32_E = 32'b1110;
parameter    ap_const_lv3_6 = 3'b110;
parameter    ap_const_lv3_1 = 3'b1;
parameter    ap_const_lv5_0 = 5'b00000;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv4_C = 4'b1100;
parameter    ap_const_lv4_1 = 4'b1;
parameter    ap_const_lv5_1 = 5'b1;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv32_1E = 32'b11110;
parameter    ap_const_lv8_FF = 8'b11111111;
parameter    ap_const_lv23_0 = 23'b00000000000000000000000;
parameter    ap_const_lv5_2 = 5'b10;
parameter    ap_true = 1'b1;
parameter    C_S_AXI_CONTROL_WSTRB_WIDTH = (C_S_AXI_CONTROL_DATA_WIDTH / ap_const_int64_8);
parameter    C_S_AXI_WSTRB_WIDTH = (C_S_AXI_DATA_WIDTH / ap_const_int64_8);

input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1 : 0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1 : 0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1 : 0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1 : 0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1 : 0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
input   ap_clk;
input   ap_rst_n;
output  [31:0] A_Addr_A;
output   A_EN_A;
output  [3:0] A_WEN_A;
output  [31:0] A_Din_A;
input  [31:0] A_Dout_A;
output   A_Clk_A;
output   A_Rst_A;
output  [31:0] W0_Addr_A;
output   W0_EN_A;
output  [3:0] W0_WEN_A;
output  [31:0] W0_Din_A;
input  [31:0] W0_Dout_A;
output   W0_Clk_A;
output   W0_Rst_A;
output  [31:0] W1_Addr_A;
output   W1_EN_A;
output  [3:0] W1_WEN_A;
output  [31:0] W1_Din_A;
input  [31:0] W1_Dout_A;
output   W1_Clk_A;
output   W1_Rst_A;
output  [31:0] res_Addr_A;
output   res_EN_A;
output  [3:0] res_WEN_A;
output  [31:0] res_Din_A;
input  [31:0] res_Dout_A;
output   res_Clk_A;
output   res_Rst_A;
output   interrupt;

reg A_EN_A;
reg W0_EN_A;
reg W1_EN_A;
reg res_EN_A;
reg[3:0] res_WEN_A;
reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [19:0] ap_CS_fsm = 20'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_61;
reg    ap_ready;
wire    obj_detector_control_s_axi_U_ap_dummy_ce;
wire   [31:0] s1_q0;
reg   [31:0] reg_275;
reg    ap_sig_cseq_ST_st9_fsm_8;
reg    ap_sig_bdd_128;
wire   [31:0] s1_q1;
reg    ap_sig_cseq_ST_st12_fsm_11;
reg    ap_sig_bdd_136;
wire   [2:0] i_1_fu_287_p2;
reg   [2:0] i_1_reg_883;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_bdd_145;
wire   [2:0] i_2_fu_299_p2;
reg   [2:0] i_2_reg_891;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_bdd_154;
wire   [2:0] i_3_fu_311_p2;
reg   [2:0] i_3_reg_899;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_bdd_163;
wire  signed [9:0] p_addr_cast_fu_347_p1;
reg  signed [9:0] p_addr_cast_reg_904;
wire   [0:0] exitcond_fu_305_p2;
wire  signed [8:0] p_addr1_cast_fu_381_p1;
reg  signed [8:0] p_addr1_cast_reg_910;
wire   [3:0] i_4_fu_391_p2;
reg   [3:0] i_4_reg_918;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_bdd_180;
wire  signed [31:0] p_addr4_fu_444_p2;
reg  signed [31:0] p_addr4_reg_923;
wire   [0:0] exitcond1_i_fu_385_p2;
wire  signed [31:0] p_addr8_fu_483_p2;
reg  signed [31:0] p_addr8_reg_929;
wire  signed [31:0] p_addr6_fu_522_p2;
reg  signed [31:0] p_addr6_reg_935;
wire   [3:0] j_fu_534_p2;
reg   [3:0] j_reg_943;
reg    ap_sig_cseq_ST_st8_fsm_7;
reg    ap_sig_bdd_198;
wire   [0:0] exitcond_i_fu_528_p2;
wire  signed [31:0] p_addr9_fu_582_p2;
reg  signed [31:0] p_addr9_reg_958;
wire  signed [31:0] p_addr3_fu_587_p2;
reg  signed [31:0] p_addr3_reg_963;
wire  signed [31:0] p_addr12_fu_596_p2;
reg  signed [31:0] p_addr12_reg_968;
reg   [31:0] max_1_reg_973;
wire   [0:0] tmp_9_fu_682_p2;
reg   [0:0] tmp_9_reg_985;
reg    ap_sig_cseq_ST_st10_fsm_9;
reg    ap_sig_bdd_223;
reg   [31:0] max_3_reg_990;
wire   [31:0] max_2_fu_688_p3;
reg   [31:0] max_2_reg_997;
reg    ap_sig_cseq_ST_st11_fsm_10;
reg    ap_sig_bdd_233;
wire   [0:0] grp_fu_271_p2;
reg   [0:0] tmp_16_reg_1003;
wire   [31:0] max_4_fu_780_p3;
reg   [31:0] max_4_reg_1013;
wire   [0:0] tmp_26_fu_863_p2;
reg   [0:0] tmp_26_reg_1020;
reg    ap_sig_cseq_ST_st13_fsm_12;
reg    ap_sig_bdd_248;
wire   [31:0] grp_obj_detector_FCL_fu_244_ap_return;
reg   [31:0] cost_0_reg_1025;
reg    ap_sig_cseq_ST_st17_fsm_16;
reg    ap_sig_bdd_257;
wire    grp_obj_detector_FCL_fu_244_ap_done;
reg   [31:0] cost_1_reg_1030;
reg    ap_sig_cseq_ST_st19_fsm_18;
reg    ap_sig_bdd_269;
reg   [11:0] s0_address0;
reg    s0_ce0;
reg    s0_we0;
wire   [31:0] s0_d0;
wire   [31:0] s0_q0;
reg   [11:0] s1_address0;
reg    s1_ce0;
reg    s1_we0;
wire   [31:0] s1_d0;
reg   [11:0] s1_address1;
reg    s1_ce1;
reg   [9:0] s2_address0;
reg    s2_ce0;
reg    s2_we0;
wire   [31:0] s2_d0;
wire   [31:0] s2_q0;
reg   [9:0] s3_address0;
reg    s3_ce0;
reg    s3_we0;
wire   [31:0] s3_d0;
wire   [31:0] s3_q0;
wire    grp_obj_detector_softmax_fu_223_ap_start;
wire    grp_obj_detector_softmax_fu_223_ap_done;
wire    grp_obj_detector_softmax_fu_223_ap_idle;
wire    grp_obj_detector_softmax_fu_223_ap_ready;
wire   [31:0] grp_obj_detector_softmax_fu_223_inp_0_read;
wire   [31:0] grp_obj_detector_softmax_fu_223_inp_1_read;
wire   [31:0] grp_obj_detector_softmax_fu_223_out_r_Addr_A;
wire    grp_obj_detector_softmax_fu_223_out_r_EN_A;
wire   [3:0] grp_obj_detector_softmax_fu_223_out_r_WEN_A;
wire   [31:0] grp_obj_detector_softmax_fu_223_out_r_Din_A;
wire   [31:0] grp_obj_detector_softmax_fu_223_out_r_Dout_A;
wire    grp_obj_detector_convolve_fu_231_ap_start;
wire    grp_obj_detector_convolve_fu_231_ap_done;
wire    grp_obj_detector_convolve_fu_231_ap_idle;
wire    grp_obj_detector_convolve_fu_231_ap_ready;
wire   [31:0] grp_obj_detector_convolve_fu_231_A_Addr_A;
wire    grp_obj_detector_convolve_fu_231_A_EN_A;
wire   [3:0] grp_obj_detector_convolve_fu_231_A_WEN_A;
wire   [31:0] grp_obj_detector_convolve_fu_231_A_Din_A;
wire   [31:0] grp_obj_detector_convolve_fu_231_A_Dout_A;
wire   [31:0] grp_obj_detector_convolve_fu_231_B_Addr_A;
wire    grp_obj_detector_convolve_fu_231_B_EN_A;
wire   [3:0] grp_obj_detector_convolve_fu_231_B_WEN_A;
wire   [31:0] grp_obj_detector_convolve_fu_231_B_Din_A;
wire   [31:0] grp_obj_detector_convolve_fu_231_B_Dout_A;
wire   [2:0] grp_obj_detector_convolve_fu_231_tmp;
wire   [11:0] grp_obj_detector_convolve_fu_231_conv_address0;
wire    grp_obj_detector_convolve_fu_231_conv_ce0;
wire    grp_obj_detector_convolve_fu_231_conv_we0;
wire   [31:0] grp_obj_detector_convolve_fu_231_conv_d0;
wire   [2:0] grp_obj_detector_convolve_fu_231_tmp1;
wire    grp_obj_detector_FCL_fu_244_ap_start;
wire    grp_obj_detector_FCL_fu_244_ap_idle;
wire    grp_obj_detector_FCL_fu_244_ap_ready;
wire   [9:0] grp_obj_detector_FCL_fu_244_inp_address0;
wire    grp_obj_detector_FCL_fu_244_inp_ce0;
wire   [31:0] grp_obj_detector_FCL_fu_244_inp_q0;
wire   [31:0] grp_obj_detector_FCL_fu_244_W_Addr_A;
wire    grp_obj_detector_FCL_fu_244_W_EN_A;
wire   [3:0] grp_obj_detector_FCL_fu_244_W_WEN_A;
wire   [31:0] grp_obj_detector_FCL_fu_244_W_Din_A;
wire   [31:0] grp_obj_detector_FCL_fu_244_W_Dout_A;
reg   [0:0] grp_obj_detector_FCL_fu_244_W_offset;
wire    grp_obj_detector_ReLU_fu_255_ap_start;
wire    grp_obj_detector_ReLU_fu_255_ap_done;
wire    grp_obj_detector_ReLU_fu_255_ap_idle;
wire    grp_obj_detector_ReLU_fu_255_ap_ready;
wire   [11:0] grp_obj_detector_ReLU_fu_255_inp_address0;
wire    grp_obj_detector_ReLU_fu_255_inp_ce0;
wire   [31:0] grp_obj_detector_ReLU_fu_255_inp_q0;
wire   [2:0] grp_obj_detector_ReLU_fu_255_tmp_2;
wire   [11:0] grp_obj_detector_ReLU_fu_255_out_r_address0;
wire    grp_obj_detector_ReLU_fu_255_out_r_ce0;
wire    grp_obj_detector_ReLU_fu_255_out_r_we0;
wire   [31:0] grp_obj_detector_ReLU_fu_255_out_r_d0;
wire   [2:0] grp_obj_detector_ReLU_fu_255_tmp_21;
wire    grp_obj_detector_flatten_fu_265_ap_start;
wire    grp_obj_detector_flatten_fu_265_ap_done;
wire    grp_obj_detector_flatten_fu_265_ap_idle;
wire    grp_obj_detector_flatten_fu_265_ap_ready;
wire   [9:0] grp_obj_detector_flatten_fu_265_inp_address0;
wire    grp_obj_detector_flatten_fu_265_inp_ce0;
wire   [31:0] grp_obj_detector_flatten_fu_265_inp_q0;
wire   [9:0] grp_obj_detector_flatten_fu_265_out_r_address0;
wire    grp_obj_detector_flatten_fu_265_out_r_ce0;
wire    grp_obj_detector_flatten_fu_265_out_r_we0;
wire   [31:0] grp_obj_detector_flatten_fu_265_out_r_d0;
reg   [2:0] i_reg_166;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_bdd_400;
reg   [2:0] i1_reg_178;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_bdd_412;
wire   [0:0] exitcond2_fu_281_p2;
reg   [2:0] i2_reg_190;
wire   [0:0] exitcond1_fu_293_p2;
reg   [3:0] i_i_reg_201;
reg   [3:0] j_i_reg_212;
reg    ap_sig_cseq_ST_st14_fsm_13;
reg    ap_sig_bdd_441;
reg    grp_obj_detector_softmax_fu_223_ap_start_ap_start_reg = 1'b0;
reg    ap_sig_cseq_ST_st20_fsm_19;
reg    ap_sig_bdd_450;
reg    grp_obj_detector_convolve_fu_231_ap_start_ap_start_reg = 1'b0;
reg    grp_obj_detector_FCL_fu_244_ap_start_ap_start_reg = 1'b0;
reg    ap_sig_cseq_ST_st16_fsm_15;
reg    ap_sig_bdd_462;
reg    ap_sig_cseq_ST_st18_fsm_17;
reg    ap_sig_bdd_469;
reg    grp_obj_detector_ReLU_fu_255_ap_start_ap_start_reg = 1'b0;
reg    grp_obj_detector_flatten_fu_265_ap_start_ap_start_reg = 1'b0;
reg    ap_sig_cseq_ST_st15_fsm_14;
reg    ap_sig_bdd_485;
wire   [63:0] tmp_30_fu_557_p1;
wire   [63:0] tmp_31_fu_577_p1;
wire   [63:0] tmp_34_fu_601_p1;
wire   [63:0] tmp_37_fu_695_p1;
wire   [63:0] tmp_40_fu_876_p1;
reg   [31:0] grp_fu_271_p0;
reg   [31:0] grp_fu_271_p1;
wire   [7:0] tmp_1_fu_317_p3;
wire   [5:0] tmp_3_fu_329_p3;
wire   [8:0] p_shl2_cast_fu_325_p1;
wire   [8:0] p_shl3_cast_fu_337_p1;
wire   [8:0] p_addr_fu_341_p2;
wire   [6:0] tmp_6_fu_351_p3;
wire   [4:0] tmp_10_fu_363_p3;
wire   [7:0] p_shl_cast_fu_359_p1;
wire   [7:0] p_shl1_cast_fu_371_p1;
wire   [7:0] p_addr1_fu_375_p2;
wire   [4:0] tmp_i_fu_397_p3;
wire   [9:0] tmp_i_trn_cast_fu_411_p1;
wire  signed [9:0] p_addr2_fu_415_p2;
wire   [14:0] tmp_12_fu_420_p3;
wire   [12:0] tmp_19_fu_432_p3;
wire  signed [31:0] p_shl8_fu_428_p1;
wire  signed [31:0] p_shl9_fu_440_p1;
wire   [4:0] tmp_7_i_fu_405_p2;
wire   [9:0] tmp_8_i_trn5_cast_fu_450_p1;
wire  signed [9:0] p_addr7_fu_454_p2;
wire   [14:0] tmp_21_fu_459_p3;
wire   [12:0] tmp_27_fu_471_p3;
wire  signed [31:0] p_shl6_fu_467_p1;
wire  signed [31:0] p_shl7_fu_479_p1;
wire   [8:0] tmp_9_i_trn_cast_fu_489_p1;
wire  signed [8:0] p_addr5_fu_493_p2;
wire   [12:0] tmp_28_fu_498_p3;
wire   [10:0] tmp_29_fu_510_p3;
wire  signed [31:0] p_shl4_fu_506_p1;
wire  signed [31:0] p_shl5_fu_518_p1;
wire   [4:0] tmp_1_i_fu_540_p3;
wire   [31:0] tmp_2_i_trn_fu_548_p1;
wire  signed [31:0] p_addr10_fu_552_p2;
wire   [4:0] tmp_3_i_fu_562_p2;
wire   [31:0] tmp_4_i_trn_fu_568_p1;
wire  signed [31:0] p_addr11_fu_572_p2;
wire   [31:0] tmp_12_i_trn_fu_592_p1;
wire   [31:0] max_i_to_int_fu_605_p1;
wire   [31:0] max_3_i_to_int_fu_623_p1;
wire   [7:0] tmp_fu_609_p4;
wire   [22:0] tmp_32_fu_619_p1;
wire   [0:0] notrhs_fu_646_p2;
wire   [0:0] notlhs_fu_640_p2;
wire   [7:0] tmp_2_fu_626_p4;
wire   [22:0] tmp_33_fu_636_p1;
wire   [0:0] notrhs1_fu_664_p2;
wire   [0:0] notlhs9_fu_658_p2;
wire   [0:0] tmp_4_fu_652_p2;
wire   [0:0] tmp_5_fu_670_p2;
wire   [0:0] tmp_7_fu_676_p2;
wire   [31:0] max_7_i_to_int_fu_699_p1;
wire   [31:0] max_6_i_to_int_fu_716_p1;
wire   [7:0] tmp_s_fu_702_p4;
wire   [22:0] tmp_35_fu_712_p1;
wire   [0:0] notrhs2_fu_739_p2;
wire   [0:0] notlhs1_fu_733_p2;
wire   [7:0] tmp_11_fu_719_p4;
wire   [22:0] tmp_36_fu_729_p1;
wire   [0:0] notrhs3_fu_757_p2;
wire   [0:0] notlhs2_fu_751_p2;
wire   [0:0] tmp_13_fu_745_p2;
wire   [0:0] tmp_14_fu_763_p2;
wire   [0:0] tmp_15_fu_769_p2;
wire   [0:0] tmp_17_fu_775_p2;
wire   [31:0] max_8_i_to_int_fu_786_p1;
wire   [31:0] max_1_i_to_int_fu_804_p1;
wire   [7:0] tmp_18_fu_790_p4;
wire   [22:0] tmp_38_fu_800_p1;
wire   [0:0] notrhs4_fu_827_p2;
wire   [0:0] notlhs3_fu_821_p2;
wire   [7:0] tmp_20_fu_807_p4;
wire   [22:0] tmp_39_fu_817_p1;
wire   [0:0] notrhs5_fu_845_p2;
wire   [0:0] notlhs4_fu_839_p2;
wire   [0:0] tmp_22_fu_833_p2;
wire   [0:0] tmp_23_fu_851_p2;
wire   [0:0] tmp_24_fu_857_p2;
wire   [4:0] grp_fu_271_opcode;
reg   [19:0] ap_NS_fsm;


obj_detector_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
obj_detector_control_s_axi_U(
    .AWVALID( s_axi_control_AWVALID ),
    .AWREADY( s_axi_control_AWREADY ),
    .AWADDR( s_axi_control_AWADDR ),
    .WVALID( s_axi_control_WVALID ),
    .WREADY( s_axi_control_WREADY ),
    .WDATA( s_axi_control_WDATA ),
    .WSTRB( s_axi_control_WSTRB ),
    .ARVALID( s_axi_control_ARVALID ),
    .ARREADY( s_axi_control_ARREADY ),
    .ARADDR( s_axi_control_ARADDR ),
    .RVALID( s_axi_control_RVALID ),
    .RREADY( s_axi_control_RREADY ),
    .RDATA( s_axi_control_RDATA ),
    .RRESP( s_axi_control_RRESP ),
    .BVALID( s_axi_control_BVALID ),
    .BREADY( s_axi_control_BREADY ),
    .BRESP( s_axi_control_BRESP ),
    .ACLK( ap_clk ),
    .ARESET( ap_rst_n_inv ),
    .ACLK_EN( obj_detector_control_s_axi_U_ap_dummy_ce ),
    .ap_start( ap_start ),
    .interrupt( interrupt ),
    .ap_ready( ap_ready ),
    .ap_done( ap_done ),
    .ap_idle( ap_idle )
);

obj_detector_s0 #(
    .DataWidth( 32 ),
    .AddressRange( 3456 ),
    .AddressWidth( 12 ))
s0_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .address0( s0_address0 ),
    .ce0( s0_ce0 ),
    .we0( s0_we0 ),
    .d0( s0_d0 ),
    .q0( s0_q0 )
);

obj_detector_s1 #(
    .DataWidth( 32 ),
    .AddressRange( 3456 ),
    .AddressWidth( 12 ))
s1_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .address0( s1_address0 ),
    .ce0( s1_ce0 ),
    .we0( s1_we0 ),
    .d0( s1_d0 ),
    .q0( s1_q0 ),
    .address1( s1_address1 ),
    .ce1( s1_ce1 ),
    .q1( s1_q1 )
);

obj_detector_s2 #(
    .DataWidth( 32 ),
    .AddressRange( 864 ),
    .AddressWidth( 10 ))
s2_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .address0( s2_address0 ),
    .ce0( s2_ce0 ),
    .we0( s2_we0 ),
    .d0( s2_d0 ),
    .q0( s2_q0 )
);

obj_detector_s2 #(
    .DataWidth( 32 ),
    .AddressRange( 864 ),
    .AddressWidth( 10 ))
s3_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .address0( s3_address0 ),
    .ce0( s3_ce0 ),
    .we0( s3_we0 ),
    .d0( s3_d0 ),
    .q0( s3_q0 )
);

obj_detector_softmax grp_obj_detector_softmax_fu_223(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst_n_inv ),
    .ap_start( grp_obj_detector_softmax_fu_223_ap_start ),
    .ap_done( grp_obj_detector_softmax_fu_223_ap_done ),
    .ap_idle( grp_obj_detector_softmax_fu_223_ap_idle ),
    .ap_ready( grp_obj_detector_softmax_fu_223_ap_ready ),
    .inp_0_read( grp_obj_detector_softmax_fu_223_inp_0_read ),
    .inp_1_read( grp_obj_detector_softmax_fu_223_inp_1_read ),
    .out_r_Addr_A( grp_obj_detector_softmax_fu_223_out_r_Addr_A ),
    .out_r_EN_A( grp_obj_detector_softmax_fu_223_out_r_EN_A ),
    .out_r_WEN_A( grp_obj_detector_softmax_fu_223_out_r_WEN_A ),
    .out_r_Din_A( grp_obj_detector_softmax_fu_223_out_r_Din_A ),
    .out_r_Dout_A( grp_obj_detector_softmax_fu_223_out_r_Dout_A )
);

obj_detector_convolve grp_obj_detector_convolve_fu_231(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst_n_inv ),
    .ap_start( grp_obj_detector_convolve_fu_231_ap_start ),
    .ap_done( grp_obj_detector_convolve_fu_231_ap_done ),
    .ap_idle( grp_obj_detector_convolve_fu_231_ap_idle ),
    .ap_ready( grp_obj_detector_convolve_fu_231_ap_ready ),
    .A_Addr_A( grp_obj_detector_convolve_fu_231_A_Addr_A ),
    .A_EN_A( grp_obj_detector_convolve_fu_231_A_EN_A ),
    .A_WEN_A( grp_obj_detector_convolve_fu_231_A_WEN_A ),
    .A_Din_A( grp_obj_detector_convolve_fu_231_A_Din_A ),
    .A_Dout_A( grp_obj_detector_convolve_fu_231_A_Dout_A ),
    .B_Addr_A( grp_obj_detector_convolve_fu_231_B_Addr_A ),
    .B_EN_A( grp_obj_detector_convolve_fu_231_B_EN_A ),
    .B_WEN_A( grp_obj_detector_convolve_fu_231_B_WEN_A ),
    .B_Din_A( grp_obj_detector_convolve_fu_231_B_Din_A ),
    .B_Dout_A( grp_obj_detector_convolve_fu_231_B_Dout_A ),
    .tmp( grp_obj_detector_convolve_fu_231_tmp ),
    .conv_address0( grp_obj_detector_convolve_fu_231_conv_address0 ),
    .conv_ce0( grp_obj_detector_convolve_fu_231_conv_ce0 ),
    .conv_we0( grp_obj_detector_convolve_fu_231_conv_we0 ),
    .conv_d0( grp_obj_detector_convolve_fu_231_conv_d0 ),
    .tmp1( grp_obj_detector_convolve_fu_231_tmp1 )
);

obj_detector_FCL grp_obj_detector_FCL_fu_244(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst_n_inv ),
    .ap_start( grp_obj_detector_FCL_fu_244_ap_start ),
    .ap_done( grp_obj_detector_FCL_fu_244_ap_done ),
    .ap_idle( grp_obj_detector_FCL_fu_244_ap_idle ),
    .ap_ready( grp_obj_detector_FCL_fu_244_ap_ready ),
    .inp_address0( grp_obj_detector_FCL_fu_244_inp_address0 ),
    .inp_ce0( grp_obj_detector_FCL_fu_244_inp_ce0 ),
    .inp_q0( grp_obj_detector_FCL_fu_244_inp_q0 ),
    .W_Addr_A( grp_obj_detector_FCL_fu_244_W_Addr_A ),
    .W_EN_A( grp_obj_detector_FCL_fu_244_W_EN_A ),
    .W_WEN_A( grp_obj_detector_FCL_fu_244_W_WEN_A ),
    .W_Din_A( grp_obj_detector_FCL_fu_244_W_Din_A ),
    .W_Dout_A( grp_obj_detector_FCL_fu_244_W_Dout_A ),
    .W_offset( grp_obj_detector_FCL_fu_244_W_offset ),
    .ap_return( grp_obj_detector_FCL_fu_244_ap_return )
);

obj_detector_ReLU grp_obj_detector_ReLU_fu_255(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst_n_inv ),
    .ap_start( grp_obj_detector_ReLU_fu_255_ap_start ),
    .ap_done( grp_obj_detector_ReLU_fu_255_ap_done ),
    .ap_idle( grp_obj_detector_ReLU_fu_255_ap_idle ),
    .ap_ready( grp_obj_detector_ReLU_fu_255_ap_ready ),
    .inp_address0( grp_obj_detector_ReLU_fu_255_inp_address0 ),
    .inp_ce0( grp_obj_detector_ReLU_fu_255_inp_ce0 ),
    .inp_q0( grp_obj_detector_ReLU_fu_255_inp_q0 ),
    .tmp_2( grp_obj_detector_ReLU_fu_255_tmp_2 ),
    .out_r_address0( grp_obj_detector_ReLU_fu_255_out_r_address0 ),
    .out_r_ce0( grp_obj_detector_ReLU_fu_255_out_r_ce0 ),
    .out_r_we0( grp_obj_detector_ReLU_fu_255_out_r_we0 ),
    .out_r_d0( grp_obj_detector_ReLU_fu_255_out_r_d0 ),
    .tmp_21( grp_obj_detector_ReLU_fu_255_tmp_21 )
);

obj_detector_flatten grp_obj_detector_flatten_fu_265(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst_n_inv ),
    .ap_start( grp_obj_detector_flatten_fu_265_ap_start ),
    .ap_done( grp_obj_detector_flatten_fu_265_ap_done ),
    .ap_idle( grp_obj_detector_flatten_fu_265_ap_idle ),
    .ap_ready( grp_obj_detector_flatten_fu_265_ap_ready ),
    .inp_address0( grp_obj_detector_flatten_fu_265_inp_address0 ),
    .inp_ce0( grp_obj_detector_flatten_fu_265_inp_ce0 ),
    .inp_q0( grp_obj_detector_flatten_fu_265_inp_q0 ),
    .out_r_address0( grp_obj_detector_flatten_fu_265_out_r_address0 ),
    .out_r_ce0( grp_obj_detector_flatten_fu_265_out_r_ce0 ),
    .out_r_we0( grp_obj_detector_flatten_fu_265_out_r_we0 ),
    .out_r_d0( grp_obj_detector_flatten_fu_265_out_r_d0 )
);

obj_detector_fcmp_32ns_32ns_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
obj_detector_fcmp_32ns_32ns_1_1_U25(
    .din0( grp_fu_271_p0 ),
    .din1( grp_fu_271_p1 ),
    .opcode( grp_fu_271_opcode ),
    .dout( grp_fu_271_p2 )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// grp_obj_detector_FCL_fu_244_ap_start_ap_start_reg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_grp_obj_detector_FCL_fu_244_ap_start_ap_start_reg
    if (ap_rst_n_inv == 1'b1) begin
        grp_obj_detector_FCL_fu_244_ap_start_ap_start_reg <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_st16_fsm_15) | (ap_const_logic_1 == ap_sig_cseq_ST_st18_fsm_17))) begin
            grp_obj_detector_FCL_fu_244_ap_start_ap_start_reg <= ap_const_logic_1;
        end else if ((ap_const_logic_1 == grp_obj_detector_FCL_fu_244_ap_ready)) begin
            grp_obj_detector_FCL_fu_244_ap_start_ap_start_reg <= ap_const_logic_0;
        end
    end
end

/// grp_obj_detector_ReLU_fu_255_ap_start_ap_start_reg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_grp_obj_detector_ReLU_fu_255_ap_start_ap_start_reg
    if (ap_rst_n_inv == 1'b1) begin
        grp_obj_detector_ReLU_fu_255_ap_start_ap_start_reg <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & (ap_const_lv1_0 == exitcond1_fu_293_p2))) begin
            grp_obj_detector_ReLU_fu_255_ap_start_ap_start_reg <= ap_const_logic_1;
        end else if ((ap_const_logic_1 == grp_obj_detector_ReLU_fu_255_ap_ready)) begin
            grp_obj_detector_ReLU_fu_255_ap_start_ap_start_reg <= ap_const_logic_0;
        end
    end
end

/// grp_obj_detector_convolve_fu_231_ap_start_ap_start_reg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_grp_obj_detector_convolve_fu_231_ap_start_ap_start_reg
    if (ap_rst_n_inv == 1'b1) begin
        grp_obj_detector_convolve_fu_231_ap_start_ap_start_reg <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (ap_const_lv1_0 == exitcond2_fu_281_p2))) begin
            grp_obj_detector_convolve_fu_231_ap_start_ap_start_reg <= ap_const_logic_1;
        end else if ((ap_const_logic_1 == grp_obj_detector_convolve_fu_231_ap_ready)) begin
            grp_obj_detector_convolve_fu_231_ap_start_ap_start_reg <= ap_const_logic_0;
        end
    end
end

/// grp_obj_detector_flatten_fu_265_ap_start_ap_start_reg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_grp_obj_detector_flatten_fu_265_ap_start_ap_start_reg
    if (ap_rst_n_inv == 1'b1) begin
        grp_obj_detector_flatten_fu_265_ap_start_ap_start_reg <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) & ~(exitcond_fu_305_p2 == ap_const_lv1_0))) begin
            grp_obj_detector_flatten_fu_265_ap_start_ap_start_reg <= ap_const_logic_1;
        end else if ((ap_const_logic_1 == grp_obj_detector_flatten_fu_265_ap_ready)) begin
            grp_obj_detector_flatten_fu_265_ap_start_ap_start_reg <= ap_const_logic_0;
        end
    end
end

/// grp_obj_detector_softmax_fu_223_ap_start_ap_start_reg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_grp_obj_detector_softmax_fu_223_ap_start_ap_start_reg
    if (ap_rst_n_inv == 1'b1) begin
        grp_obj_detector_softmax_fu_223_ap_start_ap_start_reg <= ap_const_logic_0;
    end else begin
        if ((~(ap_const_logic_0 == grp_obj_detector_FCL_fu_244_ap_done) & (ap_const_logic_1 == ap_sig_cseq_ST_st19_fsm_18))) begin
            grp_obj_detector_softmax_fu_223_ap_start_ap_start_reg <= ap_const_logic_1;
        end else if ((ap_const_logic_1 == grp_obj_detector_softmax_fu_223_ap_ready)) begin
            grp_obj_detector_softmax_fu_223_ap_start_ap_start_reg <= ap_const_logic_0;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(ap_const_lv1_0 == exitcond2_fu_281_p2))) begin
        i1_reg_178 <= ap_const_lv3_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) & ~(ap_const_logic_0 == grp_obj_detector_ReLU_fu_255_ap_done))) begin
        i1_reg_178 <= i_2_reg_891;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6) & ~(ap_const_lv1_0 == exitcond1_i_fu_385_p2))) begin
        i2_reg_190 <= i_3_reg_899;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & ~(ap_const_lv1_0 == exitcond1_fu_293_p2))) begin
        i2_reg_190 <= ap_const_lv3_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7) & ~(ap_const_lv1_0 == exitcond_i_fu_528_p2))) begin
        i_i_reg_201 <= i_4_reg_918;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) & (exitcond_fu_305_p2 == ap_const_lv1_0))) begin
        i_i_reg_201 <= ap_const_lv4_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & ~(ap_const_logic_0 == grp_obj_detector_convolve_fu_231_ap_done))) begin
        i_reg_166 <= i_1_reg_883;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        i_reg_166 <= ap_const_lv3_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6) & (ap_const_lv1_0 == exitcond1_i_fu_385_p2))) begin
        j_i_reg_212 <= ap_const_lv4_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        j_i_reg_212 <= j_reg_943;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        reg_275 <= s1_q1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        reg_275 <= s1_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st17_fsm_16) & ~(ap_const_logic_0 == grp_obj_detector_FCL_fu_244_ap_done))) begin
        cost_0_reg_1025 <= grp_obj_detector_FCL_fu_244_ap_return;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((~(ap_const_logic_0 == grp_obj_detector_FCL_fu_244_ap_done) & (ap_const_logic_1 == ap_sig_cseq_ST_st19_fsm_18))) begin
        cost_1_reg_1030 <= grp_obj_detector_FCL_fu_244_ap_return;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        i_1_reg_883 <= i_1_fu_287_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        i_2_reg_891 <= i_2_fu_299_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        i_3_reg_899 <= i_3_fu_311_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        i_4_reg_918 <= i_4_fu_391_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        j_reg_943 <= j_fu_534_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        max_1_reg_973 <= s1_q1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        max_2_reg_997 <= max_2_fu_688_p3;
        tmp_16_reg_1003 <= grp_fu_271_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        max_3_reg_990 <= s1_q0;
        tmp_9_reg_985 <= tmp_9_fu_682_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        max_4_reg_1013 <= max_4_fu_780_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7) & (ap_const_lv1_0 == exitcond_i_fu_528_p2))) begin
        p_addr12_reg_968 <= p_addr12_fu_596_p2;
        p_addr3_reg_963[31 : 1] <= p_addr3_fu_587_p2[31 : 1];
        p_addr9_reg_958[31 : 1] <= p_addr9_fu_582_p2[31 : 1];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) & (exitcond_fu_305_p2 == ap_const_lv1_0))) begin
        p_addr1_cast_reg_910[8 : 2] <= p_addr1_cast_fu_381_p1[8 : 2];
        p_addr_cast_reg_904[9 : 3] <= p_addr_cast_fu_347_p1[9 : 3];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6) & (ap_const_lv1_0 == exitcond1_i_fu_385_p2))) begin
        p_addr4_reg_923[31 : 4] <= p_addr4_fu_444_p2[31 : 4];
        p_addr6_reg_935[31 : 2] <= p_addr6_fu_522_p2[31 : 2];
        p_addr8_reg_929[31 : 4] <= p_addr8_fu_483_p2[31 : 4];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st13_fsm_12)) begin
        tmp_26_reg_1020 <= tmp_26_fu_863_p2;
    end
end

/// A_EN_A assign process. ///
always @ (grp_obj_detector_convolve_fu_231_A_EN_A or ap_sig_cseq_ST_st3_fsm_2)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        A_EN_A = grp_obj_detector_convolve_fu_231_A_EN_A;
    end else begin
        A_EN_A = ap_const_logic_0;
    end
end

/// W0_EN_A assign process. ///
always @ (grp_obj_detector_convolve_fu_231_B_EN_A or ap_sig_cseq_ST_st3_fsm_2)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        W0_EN_A = grp_obj_detector_convolve_fu_231_B_EN_A;
    end else begin
        W0_EN_A = ap_const_logic_0;
    end
end

/// W1_EN_A assign process. ///
always @ (ap_sig_cseq_ST_st17_fsm_16 or ap_sig_cseq_ST_st19_fsm_18 or grp_obj_detector_FCL_fu_244_W_EN_A)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st17_fsm_16) | (ap_const_logic_1 == ap_sig_cseq_ST_st19_fsm_18))) begin
        W1_EN_A = grp_obj_detector_FCL_fu_244_W_EN_A;
    end else begin
        W1_EN_A = ap_const_logic_0;
    end
end

/// ap_done assign process. ///
always @ (grp_obj_detector_softmax_fu_223_ap_done or ap_sig_cseq_ST_st20_fsm_19)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st20_fsm_19) & ~(ap_const_logic_0 == grp_obj_detector_softmax_fu_223_ap_done))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (grp_obj_detector_softmax_fu_223_ap_done or ap_sig_cseq_ST_st20_fsm_19)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st20_fsm_19) & ~(ap_const_logic_0 == grp_obj_detector_softmax_fu_223_ap_done))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st10_fsm_9 assign process. ///
always @ (ap_sig_bdd_223)
begin
    if (ap_sig_bdd_223) begin
        ap_sig_cseq_ST_st10_fsm_9 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st10_fsm_9 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st11_fsm_10 assign process. ///
always @ (ap_sig_bdd_233)
begin
    if (ap_sig_bdd_233) begin
        ap_sig_cseq_ST_st11_fsm_10 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st11_fsm_10 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st12_fsm_11 assign process. ///
always @ (ap_sig_bdd_136)
begin
    if (ap_sig_bdd_136) begin
        ap_sig_cseq_ST_st12_fsm_11 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st12_fsm_11 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st13_fsm_12 assign process. ///
always @ (ap_sig_bdd_248)
begin
    if (ap_sig_bdd_248) begin
        ap_sig_cseq_ST_st13_fsm_12 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st13_fsm_12 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st14_fsm_13 assign process. ///
always @ (ap_sig_bdd_441)
begin
    if (ap_sig_bdd_441) begin
        ap_sig_cseq_ST_st14_fsm_13 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st14_fsm_13 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st15_fsm_14 assign process. ///
always @ (ap_sig_bdd_485)
begin
    if (ap_sig_bdd_485) begin
        ap_sig_cseq_ST_st15_fsm_14 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st15_fsm_14 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st16_fsm_15 assign process. ///
always @ (ap_sig_bdd_462)
begin
    if (ap_sig_bdd_462) begin
        ap_sig_cseq_ST_st16_fsm_15 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st16_fsm_15 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st17_fsm_16 assign process. ///
always @ (ap_sig_bdd_257)
begin
    if (ap_sig_bdd_257) begin
        ap_sig_cseq_ST_st17_fsm_16 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st17_fsm_16 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st18_fsm_17 assign process. ///
always @ (ap_sig_bdd_469)
begin
    if (ap_sig_bdd_469) begin
        ap_sig_cseq_ST_st18_fsm_17 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st18_fsm_17 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st19_fsm_18 assign process. ///
always @ (ap_sig_bdd_269)
begin
    if (ap_sig_bdd_269) begin
        ap_sig_cseq_ST_st19_fsm_18 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st19_fsm_18 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st1_fsm_0 assign process. ///
always @ (ap_sig_bdd_61)
begin
    if (ap_sig_bdd_61) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st20_fsm_19 assign process. ///
always @ (ap_sig_bdd_450)
begin
    if (ap_sig_bdd_450) begin
        ap_sig_cseq_ST_st20_fsm_19 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st20_fsm_19 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st2_fsm_1 assign process. ///
always @ (ap_sig_bdd_145)
begin
    if (ap_sig_bdd_145) begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st3_fsm_2 assign process. ///
always @ (ap_sig_bdd_400)
begin
    if (ap_sig_bdd_400) begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st4_fsm_3 assign process. ///
always @ (ap_sig_bdd_154)
begin
    if (ap_sig_bdd_154) begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st5_fsm_4 assign process. ///
always @ (ap_sig_bdd_412)
begin
    if (ap_sig_bdd_412) begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st6_fsm_5 assign process. ///
always @ (ap_sig_bdd_163)
begin
    if (ap_sig_bdd_163) begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st7_fsm_6 assign process. ///
always @ (ap_sig_bdd_180)
begin
    if (ap_sig_bdd_180) begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st8_fsm_7 assign process. ///
always @ (ap_sig_bdd_198)
begin
    if (ap_sig_bdd_198) begin
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st9_fsm_8 assign process. ///
always @ (ap_sig_bdd_128)
begin
    if (ap_sig_bdd_128) begin
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_0;
    end
end

/// grp_fu_271_p0 assign process. ///
always @ (reg_275 or ap_sig_cseq_ST_st10_fsm_9 or max_3_reg_990 or ap_sig_cseq_ST_st11_fsm_10 or ap_sig_cseq_ST_st13_fsm_12)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        grp_fu_271_p0 = max_3_reg_990;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9) | (ap_const_logic_1 == ap_sig_cseq_ST_st13_fsm_12))) begin
        grp_fu_271_p0 = reg_275;
    end else begin
        grp_fu_271_p0 = 'bx;
    end
end

/// grp_fu_271_p1 assign process. ///
always @ (max_1_reg_973 or ap_sig_cseq_ST_st10_fsm_9 or max_2_fu_688_p3 or ap_sig_cseq_ST_st11_fsm_10 or max_4_reg_1013 or ap_sig_cseq_ST_st13_fsm_12)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st13_fsm_12)) begin
        grp_fu_271_p1 = max_4_reg_1013;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        grp_fu_271_p1 = max_2_fu_688_p3;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        grp_fu_271_p1 = max_1_reg_973;
    end else begin
        grp_fu_271_p1 = 'bx;
    end
end

/// grp_obj_detector_FCL_fu_244_W_offset assign process. ///
always @ (ap_sig_cseq_ST_st17_fsm_16 or ap_sig_cseq_ST_st19_fsm_18)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st19_fsm_18)) begin
        grp_obj_detector_FCL_fu_244_W_offset = ap_const_lv1_1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st17_fsm_16)) begin
        grp_obj_detector_FCL_fu_244_W_offset = ap_const_lv1_0;
    end else begin
        grp_obj_detector_FCL_fu_244_W_offset = 'bx;
    end
end

/// res_EN_A assign process. ///
always @ (grp_obj_detector_softmax_fu_223_out_r_EN_A or ap_sig_cseq_ST_st20_fsm_19)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st20_fsm_19)) begin
        res_EN_A = grp_obj_detector_softmax_fu_223_out_r_EN_A;
    end else begin
        res_EN_A = ap_const_logic_0;
    end
end

/// res_WEN_A assign process. ///
always @ (grp_obj_detector_softmax_fu_223_out_r_WEN_A or ap_sig_cseq_ST_st20_fsm_19)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st20_fsm_19)) begin
        res_WEN_A = grp_obj_detector_softmax_fu_223_out_r_WEN_A;
    end else begin
        res_WEN_A = ap_const_logic_0;
    end
end

/// s0_address0 assign process. ///
always @ (grp_obj_detector_convolve_fu_231_conv_address0 or grp_obj_detector_ReLU_fu_255_inp_address0 or ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st5_fsm_4)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        s0_address0 = grp_obj_detector_ReLU_fu_255_inp_address0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        s0_address0 = grp_obj_detector_convolve_fu_231_conv_address0;
    end else begin
        s0_address0 = 'bx;
    end
end

/// s0_ce0 assign process. ///
always @ (grp_obj_detector_convolve_fu_231_conv_ce0 or grp_obj_detector_ReLU_fu_255_inp_ce0 or ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st5_fsm_4)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        s0_ce0 = grp_obj_detector_ReLU_fu_255_inp_ce0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        s0_ce0 = grp_obj_detector_convolve_fu_231_conv_ce0;
    end else begin
        s0_ce0 = ap_const_logic_0;
    end
end

/// s0_we0 assign process. ///
always @ (grp_obj_detector_convolve_fu_231_conv_we0 or ap_sig_cseq_ST_st3_fsm_2)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        s0_we0 = grp_obj_detector_convolve_fu_231_conv_we0;
    end else begin
        s0_we0 = ap_const_logic_0;
    end
end

/// s1_address0 assign process. ///
always @ (ap_sig_cseq_ST_st9_fsm_8 or ap_sig_cseq_ST_st8_fsm_7 or grp_obj_detector_ReLU_fu_255_out_r_address0 or ap_sig_cseq_ST_st5_fsm_4 or tmp_30_fu_557_p1 or tmp_34_fu_601_p1)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        s1_address0 = tmp_34_fu_601_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        s1_address0 = tmp_30_fu_557_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        s1_address0 = grp_obj_detector_ReLU_fu_255_out_r_address0;
    end else begin
        s1_address0 = 'bx;
    end
end

/// s1_address1 assign process. ///
always @ (ap_sig_cseq_ST_st8_fsm_7 or ap_sig_cseq_ST_st11_fsm_10 or tmp_31_fu_577_p1 or tmp_37_fu_695_p1)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        s1_address1 = tmp_37_fu_695_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        s1_address1 = tmp_31_fu_577_p1;
    end else begin
        s1_address1 = 'bx;
    end
end

/// s1_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st9_fsm_8 or ap_sig_cseq_ST_st8_fsm_7 or grp_obj_detector_ReLU_fu_255_out_r_ce0 or ap_sig_cseq_ST_st5_fsm_4)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8) | (ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7))) begin
        s1_ce0 = ap_const_logic_1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        s1_ce0 = grp_obj_detector_ReLU_fu_255_out_r_ce0;
    end else begin
        s1_ce0 = ap_const_logic_0;
    end
end

/// s1_ce1 assign process. ///
always @ (ap_sig_cseq_ST_st8_fsm_7 or ap_sig_cseq_ST_st11_fsm_10)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7) | (ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10))) begin
        s1_ce1 = ap_const_logic_1;
    end else begin
        s1_ce1 = ap_const_logic_0;
    end
end

/// s1_we0 assign process. ///
always @ (grp_obj_detector_ReLU_fu_255_out_r_we0 or ap_sig_cseq_ST_st5_fsm_4)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        s1_we0 = grp_obj_detector_ReLU_fu_255_out_r_we0;
    end else begin
        s1_we0 = ap_const_logic_0;
    end
end

/// s2_address0 assign process. ///
always @ (grp_obj_detector_flatten_fu_265_inp_address0 or ap_sig_cseq_ST_st14_fsm_13 or ap_sig_cseq_ST_st15_fsm_14 or tmp_40_fu_876_p1)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        s2_address0 = tmp_40_fu_876_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st15_fsm_14)) begin
        s2_address0 = grp_obj_detector_flatten_fu_265_inp_address0;
    end else begin
        s2_address0 = 'bx;
    end
end

/// s2_ce0 assign process. ///
always @ (grp_obj_detector_flatten_fu_265_inp_ce0 or ap_sig_cseq_ST_st14_fsm_13 or ap_sig_cseq_ST_st15_fsm_14)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        s2_ce0 = ap_const_logic_1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st15_fsm_14)) begin
        s2_ce0 = grp_obj_detector_flatten_fu_265_inp_ce0;
    end else begin
        s2_ce0 = ap_const_logic_0;
    end
end

/// s2_we0 assign process. ///
always @ (ap_sig_cseq_ST_st14_fsm_13)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        s2_we0 = ap_const_logic_1;
    end else begin
        s2_we0 = ap_const_logic_0;
    end
end

/// s3_address0 assign process. ///
always @ (ap_sig_cseq_ST_st17_fsm_16 or ap_sig_cseq_ST_st19_fsm_18 or grp_obj_detector_FCL_fu_244_inp_address0 or grp_obj_detector_flatten_fu_265_out_r_address0 or ap_sig_cseq_ST_st15_fsm_14)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st15_fsm_14)) begin
        s3_address0 = grp_obj_detector_flatten_fu_265_out_r_address0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st17_fsm_16) | (ap_const_logic_1 == ap_sig_cseq_ST_st19_fsm_18))) begin
        s3_address0 = grp_obj_detector_FCL_fu_244_inp_address0;
    end else begin
        s3_address0 = 'bx;
    end
end

/// s3_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st17_fsm_16 or ap_sig_cseq_ST_st19_fsm_18 or grp_obj_detector_FCL_fu_244_inp_ce0 or grp_obj_detector_flatten_fu_265_out_r_ce0 or ap_sig_cseq_ST_st15_fsm_14)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st15_fsm_14)) begin
        s3_ce0 = grp_obj_detector_flatten_fu_265_out_r_ce0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st17_fsm_16) | (ap_const_logic_1 == ap_sig_cseq_ST_st19_fsm_18))) begin
        s3_ce0 = grp_obj_detector_FCL_fu_244_inp_ce0;
    end else begin
        s3_ce0 = ap_const_logic_0;
    end
end

/// s3_we0 assign process. ///
always @ (grp_obj_detector_flatten_fu_265_out_r_we0 or ap_sig_cseq_ST_st15_fsm_14)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st15_fsm_14)) begin
        s3_we0 = grp_obj_detector_flatten_fu_265_out_r_we0;
    end else begin
        s3_we0 = ap_const_logic_0;
    end
end
/// the next state (ap_NS_fsm) of the state machine. ///
always @ (ap_start or ap_CS_fsm or exitcond_fu_305_p2 or exitcond1_i_fu_385_p2 or exitcond_i_fu_528_p2 or grp_obj_detector_FCL_fu_244_ap_done or grp_obj_detector_softmax_fu_223_ap_done or grp_obj_detector_convolve_fu_231_ap_done or grp_obj_detector_ReLU_fu_255_ap_done or grp_obj_detector_flatten_fu_265_ap_done or exitcond2_fu_281_p2 or exitcond1_fu_293_p2)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            if (~(ap_const_lv1_0 == exitcond2_fu_281_p2)) begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_st3_fsm_2 : 
        begin
            if (~(ap_const_logic_0 == grp_obj_detector_convolve_fu_231_ap_done)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_st4_fsm_3 : 
        begin
            if (~(ap_const_lv1_0 == exitcond1_fu_293_p2)) begin
                ap_NS_fsm = ap_ST_st6_fsm_5;
            end else begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end
        end
        ap_ST_st5_fsm_4 : 
        begin
            if (~(ap_const_logic_0 == grp_obj_detector_ReLU_fu_255_ap_done)) begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end
        end
        ap_ST_st6_fsm_5 : 
        begin
            if ((exitcond_fu_305_p2 == ap_const_lv1_0)) begin
                ap_NS_fsm = ap_ST_st7_fsm_6;
            end else begin
                ap_NS_fsm = ap_ST_st15_fsm_14;
            end
        end
        ap_ST_st7_fsm_6 : 
        begin
            if ((ap_const_lv1_0 == exitcond1_i_fu_385_p2)) begin
                ap_NS_fsm = ap_ST_st8_fsm_7;
            end else begin
                ap_NS_fsm = ap_ST_st6_fsm_5;
            end
        end
        ap_ST_st8_fsm_7 : 
        begin
            if ((ap_const_lv1_0 == exitcond_i_fu_528_p2)) begin
                ap_NS_fsm = ap_ST_st9_fsm_8;
            end else begin
                ap_NS_fsm = ap_ST_st7_fsm_6;
            end
        end
        ap_ST_st9_fsm_8 : 
        begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st10_fsm_9 : 
        begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st11_fsm_10 : 
        begin
            ap_NS_fsm = ap_ST_st12_fsm_11;
        end
        ap_ST_st12_fsm_11 : 
        begin
            ap_NS_fsm = ap_ST_st13_fsm_12;
        end
        ap_ST_st13_fsm_12 : 
        begin
            ap_NS_fsm = ap_ST_st14_fsm_13;
        end
        ap_ST_st14_fsm_13 : 
        begin
            ap_NS_fsm = ap_ST_st8_fsm_7;
        end
        ap_ST_st15_fsm_14 : 
        begin
            if (~(ap_const_logic_0 == grp_obj_detector_flatten_fu_265_ap_done)) begin
                ap_NS_fsm = ap_ST_st16_fsm_15;
            end else begin
                ap_NS_fsm = ap_ST_st15_fsm_14;
            end
        end
        ap_ST_st16_fsm_15 : 
        begin
            ap_NS_fsm = ap_ST_st17_fsm_16;
        end
        ap_ST_st17_fsm_16 : 
        begin
            if (~(ap_const_logic_0 == grp_obj_detector_FCL_fu_244_ap_done)) begin
                ap_NS_fsm = ap_ST_st18_fsm_17;
            end else begin
                ap_NS_fsm = ap_ST_st17_fsm_16;
            end
        end
        ap_ST_st18_fsm_17 : 
        begin
            ap_NS_fsm = ap_ST_st19_fsm_18;
        end
        ap_ST_st19_fsm_18 : 
        begin
            if (~(ap_const_logic_0 == grp_obj_detector_FCL_fu_244_ap_done)) begin
                ap_NS_fsm = ap_ST_st20_fsm_19;
            end else begin
                ap_NS_fsm = ap_ST_st19_fsm_18;
            end
        end
        ap_ST_st20_fsm_19 : 
        begin
            if (~(ap_const_logic_0 == grp_obj_detector_softmax_fu_223_ap_done)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st20_fsm_19;
            end
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign A_Addr_A = grp_obj_detector_convolve_fu_231_A_Addr_A;
assign A_Clk_A = ap_clk;
assign A_Din_A = ap_const_lv32_0;
assign A_Rst_A = ap_rst_n_inv;
assign A_WEN_A = ap_const_lv4_0;
assign W0_Addr_A = grp_obj_detector_convolve_fu_231_B_Addr_A;
assign W0_Clk_A = ap_clk;
assign W0_Din_A = ap_const_lv32_0;
assign W0_Rst_A = ap_rst_n_inv;
assign W0_WEN_A = ap_const_lv4_0;
assign W1_Addr_A = grp_obj_detector_FCL_fu_244_W_Addr_A;
assign W1_Clk_A = ap_clk;
assign W1_Din_A = ap_const_lv32_0;
assign W1_Rst_A = ap_rst_n_inv;
assign W1_WEN_A = ap_const_lv4_0;

/// ap_rst_n_inv assign process. ///
always @ (ap_rst_n)
begin
    ap_rst_n_inv = ~ap_rst_n;
end

/// ap_sig_bdd_128 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_128 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_8]);
end

/// ap_sig_bdd_136 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_136 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_B]);
end

/// ap_sig_bdd_145 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_145 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end

/// ap_sig_bdd_154 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_154 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3]);
end

/// ap_sig_bdd_163 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_163 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5]);
end

/// ap_sig_bdd_180 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_180 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_6]);
end

/// ap_sig_bdd_198 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_198 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_7]);
end

/// ap_sig_bdd_223 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_223 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_9]);
end

/// ap_sig_bdd_233 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_233 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_A]);
end

/// ap_sig_bdd_248 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_248 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_C]);
end

/// ap_sig_bdd_257 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_257 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_10]);
end

/// ap_sig_bdd_269 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_269 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_12]);
end

/// ap_sig_bdd_400 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_400 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end

/// ap_sig_bdd_412 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_412 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4]);
end

/// ap_sig_bdd_441 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_441 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_D]);
end

/// ap_sig_bdd_450 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_450 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_13]);
end

/// ap_sig_bdd_462 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_462 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_F]);
end

/// ap_sig_bdd_469 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_469 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_11]);
end

/// ap_sig_bdd_485 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_485 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_E]);
end

/// ap_sig_bdd_61 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_61 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end
assign exitcond1_fu_293_p2 = (i1_reg_178 == ap_const_lv3_6? 1'b1: 1'b0);
assign exitcond1_i_fu_385_p2 = (i_i_reg_201 == ap_const_lv4_C? 1'b1: 1'b0);
assign exitcond2_fu_281_p2 = (i_reg_166 == ap_const_lv3_6? 1'b1: 1'b0);
assign exitcond_fu_305_p2 = (i2_reg_190 == ap_const_lv3_6? 1'b1: 1'b0);
assign exitcond_i_fu_528_p2 = (j_i_reg_212 == ap_const_lv4_C? 1'b1: 1'b0);
assign grp_fu_271_opcode = ap_const_lv5_2;
assign grp_obj_detector_FCL_fu_244_W_Dout_A = W1_Dout_A;
assign grp_obj_detector_FCL_fu_244_ap_start = grp_obj_detector_FCL_fu_244_ap_start_ap_start_reg;
assign grp_obj_detector_FCL_fu_244_inp_q0 = s3_q0;
assign grp_obj_detector_ReLU_fu_255_ap_start = grp_obj_detector_ReLU_fu_255_ap_start_ap_start_reg;
assign grp_obj_detector_ReLU_fu_255_inp_q0 = s0_q0;
assign grp_obj_detector_ReLU_fu_255_tmp_2 = i1_reg_178;
assign grp_obj_detector_ReLU_fu_255_tmp_21 = i1_reg_178;
assign grp_obj_detector_convolve_fu_231_A_Dout_A = A_Dout_A;
assign grp_obj_detector_convolve_fu_231_B_Dout_A = W0_Dout_A;
assign grp_obj_detector_convolve_fu_231_ap_start = grp_obj_detector_convolve_fu_231_ap_start_ap_start_reg;
assign grp_obj_detector_convolve_fu_231_tmp = i_reg_166;
assign grp_obj_detector_convolve_fu_231_tmp1 = i_reg_166;
assign grp_obj_detector_flatten_fu_265_ap_start = grp_obj_detector_flatten_fu_265_ap_start_ap_start_reg;
assign grp_obj_detector_flatten_fu_265_inp_q0 = s2_q0;
assign grp_obj_detector_softmax_fu_223_ap_start = grp_obj_detector_softmax_fu_223_ap_start_ap_start_reg;
assign grp_obj_detector_softmax_fu_223_inp_0_read = cost_0_reg_1025;
assign grp_obj_detector_softmax_fu_223_inp_1_read = cost_1_reg_1030;
assign grp_obj_detector_softmax_fu_223_out_r_Dout_A = ap_const_lv32_0;
assign i_1_fu_287_p2 = (i_reg_166 + ap_const_lv3_1);
assign i_2_fu_299_p2 = (i1_reg_178 + ap_const_lv3_1);
assign i_3_fu_311_p2 = (i2_reg_190 + ap_const_lv3_1);
assign i_4_fu_391_p2 = (i_i_reg_201 + ap_const_lv4_1);
assign j_fu_534_p2 = (j_i_reg_212 + ap_const_lv4_1);
assign max_1_i_to_int_fu_804_p1 = max_4_reg_1013;
assign max_2_fu_688_p3 = ((tmp_9_reg_985[0:0]===1'b1)? reg_275: max_1_reg_973);
assign max_3_i_to_int_fu_623_p1 = max_1_reg_973;
assign max_4_fu_780_p3 = ((tmp_17_fu_775_p2[0:0]===1'b1)? max_3_reg_990: max_2_reg_997);
assign max_6_i_to_int_fu_716_p1 = max_2_reg_997;
assign max_7_i_to_int_fu_699_p1 = max_3_reg_990;
assign max_8_i_to_int_fu_786_p1 = reg_275;
assign max_i_to_int_fu_605_p1 = reg_275;
assign notlhs1_fu_733_p2 = (tmp_s_fu_702_p4 != ap_const_lv8_FF? 1'b1: 1'b0);
assign notlhs2_fu_751_p2 = (tmp_11_fu_719_p4 != ap_const_lv8_FF? 1'b1: 1'b0);
assign notlhs3_fu_821_p2 = (tmp_18_fu_790_p4 != ap_const_lv8_FF? 1'b1: 1'b0);
assign notlhs4_fu_839_p2 = (tmp_20_fu_807_p4 != ap_const_lv8_FF? 1'b1: 1'b0);
assign notlhs9_fu_658_p2 = (tmp_2_fu_626_p4 != ap_const_lv8_FF? 1'b1: 1'b0);
assign notlhs_fu_640_p2 = (tmp_fu_609_p4 != ap_const_lv8_FF? 1'b1: 1'b0);
assign notrhs1_fu_664_p2 = (tmp_33_fu_636_p1 == ap_const_lv23_0? 1'b1: 1'b0);
assign notrhs2_fu_739_p2 = (tmp_35_fu_712_p1 == ap_const_lv23_0? 1'b1: 1'b0);
assign notrhs3_fu_757_p2 = (tmp_36_fu_729_p1 == ap_const_lv23_0? 1'b1: 1'b0);
assign notrhs4_fu_827_p2 = (tmp_38_fu_800_p1 == ap_const_lv23_0? 1'b1: 1'b0);
assign notrhs5_fu_845_p2 = (tmp_39_fu_817_p1 == ap_const_lv23_0? 1'b1: 1'b0);
assign notrhs_fu_646_p2 = (tmp_32_fu_619_p1 == ap_const_lv23_0? 1'b1: 1'b0);
assign obj_detector_control_s_axi_U_ap_dummy_ce = ap_const_logic_1;
assign p_addr10_fu_552_p2 = ($signed(tmp_2_i_trn_fu_548_p1) + $signed(p_addr4_reg_923));
assign p_addr11_fu_572_p2 = ($signed(tmp_4_i_trn_fu_568_p1) + $signed(p_addr4_reg_923));
assign p_addr12_fu_596_p2 = ($signed(tmp_12_i_trn_fu_592_p1) + $signed(p_addr6_reg_935));
assign p_addr1_cast_fu_381_p1 = $signed(p_addr1_fu_375_p2);
assign p_addr1_fu_375_p2 = (p_shl_cast_fu_359_p1 - p_shl1_cast_fu_371_p1);
assign p_addr2_fu_415_p2 = ($signed(tmp_i_trn_cast_fu_411_p1) + $signed(p_addr_cast_reg_904));
assign p_addr3_fu_587_p2 = ($signed(tmp_4_i_trn_fu_568_p1) + $signed(p_addr8_reg_929));
assign p_addr4_fu_444_p2 = ($signed(p_shl8_fu_428_p1) - $signed(p_shl9_fu_440_p1));
assign p_addr5_fu_493_p2 = ($signed(tmp_9_i_trn_cast_fu_489_p1) + $signed(p_addr1_cast_reg_910));
assign p_addr6_fu_522_p2 = ($signed(p_shl4_fu_506_p1) - $signed(p_shl5_fu_518_p1));
assign p_addr7_fu_454_p2 = ($signed(tmp_8_i_trn5_cast_fu_450_p1) + $signed(p_addr_cast_reg_904));
assign p_addr8_fu_483_p2 = ($signed(p_shl6_fu_467_p1) - $signed(p_shl7_fu_479_p1));
assign p_addr9_fu_582_p2 = ($signed(tmp_2_i_trn_fu_548_p1) + $signed(p_addr8_reg_929));
assign p_addr_cast_fu_347_p1 = $signed(p_addr_fu_341_p2);
assign p_addr_fu_341_p2 = (p_shl2_cast_fu_325_p1 - p_shl3_cast_fu_337_p1);
assign p_shl1_cast_fu_371_p1 = tmp_10_fu_363_p3;
assign p_shl2_cast_fu_325_p1 = tmp_1_fu_317_p3;
assign p_shl3_cast_fu_337_p1 = tmp_3_fu_329_p3;
assign p_shl4_fu_506_p1 = $signed(tmp_28_fu_498_p3);
assign p_shl5_fu_518_p1 = $signed(tmp_29_fu_510_p3);
assign p_shl6_fu_467_p1 = $signed(tmp_21_fu_459_p3);
assign p_shl7_fu_479_p1 = $signed(tmp_27_fu_471_p3);
assign p_shl8_fu_428_p1 = $signed(tmp_12_fu_420_p3);
assign p_shl9_fu_440_p1 = $signed(tmp_19_fu_432_p3);
assign p_shl_cast_fu_359_p1 = tmp_6_fu_351_p3;
assign res_Addr_A = grp_obj_detector_softmax_fu_223_out_r_Addr_A;
assign res_Clk_A = ap_clk;
assign res_Din_A = grp_obj_detector_softmax_fu_223_out_r_Din_A;
assign res_Rst_A = ap_rst_n_inv;
assign s0_d0 = grp_obj_detector_convolve_fu_231_conv_d0;
assign s1_d0 = grp_obj_detector_ReLU_fu_255_out_r_d0;
assign s2_d0 = ((tmp_26_reg_1020[0:0]===1'b1)? reg_275: max_4_reg_1013);
assign s3_d0 = grp_obj_detector_flatten_fu_265_out_r_d0;
assign tmp_10_fu_363_p3 = {{i2_reg_190}, {ap_const_lv2_0}};
assign tmp_11_fu_719_p4 = {{max_6_i_to_int_fu_716_p1[ap_const_lv32_1E : ap_const_lv32_17]}};
assign tmp_12_fu_420_p3 = {{p_addr2_fu_415_p2}, {ap_const_lv5_0}};
assign tmp_12_i_trn_fu_592_p1 = j_i_reg_212;
assign tmp_13_fu_745_p2 = (notrhs2_fu_739_p2 | notlhs1_fu_733_p2);
assign tmp_14_fu_763_p2 = (notrhs3_fu_757_p2 | notlhs2_fu_751_p2);
assign tmp_15_fu_769_p2 = (tmp_13_fu_745_p2 & tmp_14_fu_763_p2);
assign tmp_17_fu_775_p2 = (tmp_15_fu_769_p2 & tmp_16_reg_1003);
assign tmp_18_fu_790_p4 = {{max_8_i_to_int_fu_786_p1[ap_const_lv32_1E : ap_const_lv32_17]}};
assign tmp_19_fu_432_p3 = {{p_addr2_fu_415_p2}, {ap_const_lv3_0}};
assign tmp_1_fu_317_p3 = {{i2_reg_190}, {ap_const_lv5_0}};
assign tmp_1_i_fu_540_p3 = {{j_i_reg_212}, {ap_const_lv1_0}};
assign tmp_20_fu_807_p4 = {{max_1_i_to_int_fu_804_p1[ap_const_lv32_1E : ap_const_lv32_17]}};
assign tmp_21_fu_459_p3 = {{p_addr7_fu_454_p2}, {ap_const_lv5_0}};
assign tmp_22_fu_833_p2 = (notrhs4_fu_827_p2 | notlhs3_fu_821_p2);
assign tmp_23_fu_851_p2 = (notrhs5_fu_845_p2 | notlhs4_fu_839_p2);
assign tmp_24_fu_857_p2 = (tmp_22_fu_833_p2 & tmp_23_fu_851_p2);
assign tmp_26_fu_863_p2 = (tmp_24_fu_857_p2 & grp_fu_271_p2);
assign tmp_27_fu_471_p3 = {{p_addr7_fu_454_p2}, {ap_const_lv3_0}};
assign tmp_28_fu_498_p3 = {{p_addr5_fu_493_p2}, {ap_const_lv4_0}};
assign tmp_29_fu_510_p3 = {{p_addr5_fu_493_p2}, {ap_const_lv2_0}};
assign tmp_2_fu_626_p4 = {{max_3_i_to_int_fu_623_p1[ap_const_lv32_1E : ap_const_lv32_17]}};
assign tmp_2_i_trn_fu_548_p1 = tmp_1_i_fu_540_p3;
assign tmp_30_fu_557_p1 = $unsigned(p_addr10_fu_552_p2);
assign tmp_31_fu_577_p1 = $unsigned(p_addr11_fu_572_p2);
assign tmp_32_fu_619_p1 = max_i_to_int_fu_605_p1[22:0];
assign tmp_33_fu_636_p1 = max_3_i_to_int_fu_623_p1[22:0];
assign tmp_34_fu_601_p1 = $unsigned(p_addr9_reg_958);
assign tmp_35_fu_712_p1 = max_7_i_to_int_fu_699_p1[22:0];
assign tmp_36_fu_729_p1 = max_6_i_to_int_fu_716_p1[22:0];
assign tmp_37_fu_695_p1 = $unsigned(p_addr3_reg_963);
assign tmp_38_fu_800_p1 = max_8_i_to_int_fu_786_p1[22:0];
assign tmp_39_fu_817_p1 = max_1_i_to_int_fu_804_p1[22:0];
assign tmp_3_fu_329_p3 = {{i2_reg_190}, {ap_const_lv3_0}};
assign tmp_3_i_fu_562_p2 = (tmp_1_i_fu_540_p3 | ap_const_lv5_1);
assign tmp_40_fu_876_p1 = $unsigned(p_addr12_reg_968);
assign tmp_4_fu_652_p2 = (notrhs_fu_646_p2 | notlhs_fu_640_p2);
assign tmp_4_i_trn_fu_568_p1 = tmp_3_i_fu_562_p2;
assign tmp_5_fu_670_p2 = (notrhs1_fu_664_p2 | notlhs9_fu_658_p2);
assign tmp_6_fu_351_p3 = {{i2_reg_190}, {ap_const_lv4_0}};
assign tmp_7_fu_676_p2 = (tmp_4_fu_652_p2 & tmp_5_fu_670_p2);
assign tmp_7_i_fu_405_p2 = (tmp_i_fu_397_p3 | ap_const_lv5_1);
assign tmp_8_i_trn5_cast_fu_450_p1 = tmp_7_i_fu_405_p2;
assign tmp_9_fu_682_p2 = (tmp_7_fu_676_p2 & grp_fu_271_p2);
assign tmp_9_i_trn_cast_fu_489_p1 = i_i_reg_201;
assign tmp_fu_609_p4 = {{max_i_to_int_fu_605_p1[ap_const_lv32_1E : ap_const_lv32_17]}};
assign tmp_i_fu_397_p3 = {{i_i_reg_201}, {ap_const_lv1_0}};
assign tmp_i_trn_cast_fu_411_p1 = tmp_i_fu_397_p3;
assign tmp_s_fu_702_p4 = {{max_7_i_to_int_fu_699_p1[ap_const_lv32_1E : ap_const_lv32_17]}};
always @ (posedge ap_clk)
begin
    p_addr_cast_reg_904[2:0] <= 3'b000;
    p_addr1_cast_reg_910[1:0] <= 2'b00;
    p_addr4_reg_923[3:0] <= 4'b0000;
    p_addr8_reg_929[3:0] <= 4'b1000;
    p_addr6_reg_935[1:0] <= 2'b00;
    p_addr9_reg_958[0] <= 1'b0;
    p_addr3_reg_963[0] <= 1'b1;
end



endmodule //obj_detector

