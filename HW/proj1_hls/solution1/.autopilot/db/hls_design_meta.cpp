#include "hls_design_meta.h"
const Port_Property HLS_Design_Meta::port_props[]={
	Port_Property("s_axi_control_AWVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_AWREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_AWADDR", 5, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_WVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_WREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_WDATA", 32, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_WSTRB", 4, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_ARVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_ARREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_ARADDR", 5, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_RVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_RREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_RDATA", 32, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_RRESP", 2, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_BVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_BREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_BRESP", 2, hls_out, -1, "", "", 1),
	Port_Property("ap_clk", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_rst_n", 1, hls_in, -1, "", "", 1),
	Port_Property("A_Addr_A", 32, hls_out, 0, "bram", "mem_address", 1),
	Port_Property("A_EN_A", 1, hls_out, 0, "bram", "mem_ce", 1),
	Port_Property("A_WEN_A", 4, hls_out, 0, "bram", "mem_we", 1),
	Port_Property("A_Din_A", 32, hls_out, 0, "bram", "mem_din", 1),
	Port_Property("A_Dout_A", 32, hls_in, 0, "bram", "mem_dout", 1),
	Port_Property("A_Clk_A", 1, hls_out, 0, "bram", "mem_clk", 1),
	Port_Property("A_Rst_A", 1, hls_out, 0, "bram", "mem_rst", 1),
	Port_Property("W0_Addr_A", 32, hls_out, 1, "bram", "mem_address", 1),
	Port_Property("W0_EN_A", 1, hls_out, 1, "bram", "mem_ce", 1),
	Port_Property("W0_WEN_A", 4, hls_out, 1, "bram", "mem_we", 1),
	Port_Property("W0_Din_A", 32, hls_out, 1, "bram", "mem_din", 1),
	Port_Property("W0_Dout_A", 32, hls_in, 1, "bram", "mem_dout", 1),
	Port_Property("W0_Clk_A", 1, hls_out, 1, "bram", "mem_clk", 1),
	Port_Property("W0_Rst_A", 1, hls_out, 1, "bram", "mem_rst", 1),
	Port_Property("W1_Addr_A", 32, hls_out, 2, "bram", "mem_address", 1),
	Port_Property("W1_EN_A", 1, hls_out, 2, "bram", "mem_ce", 1),
	Port_Property("W1_WEN_A", 4, hls_out, 2, "bram", "mem_we", 1),
	Port_Property("W1_Din_A", 32, hls_out, 2, "bram", "mem_din", 1),
	Port_Property("W1_Dout_A", 32, hls_in, 2, "bram", "mem_dout", 1),
	Port_Property("W1_Clk_A", 1, hls_out, 2, "bram", "mem_clk", 1),
	Port_Property("W1_Rst_A", 1, hls_out, 2, "bram", "mem_rst", 1),
	Port_Property("res_Addr_A", 32, hls_out, 3, "bram", "mem_address", 1),
	Port_Property("res_EN_A", 1, hls_out, 3, "bram", "mem_ce", 1),
	Port_Property("res_WEN_A", 4, hls_out, 3, "bram", "mem_we", 1),
	Port_Property("res_Din_A", 32, hls_out, 3, "bram", "mem_din", 1),
	Port_Property("res_Dout_A", 32, hls_in, 3, "bram", "mem_dout", 1),
	Port_Property("res_Clk_A", 1, hls_out, 3, "bram", "mem_clk", 1),
	Port_Property("res_Rst_A", 1, hls_out, 3, "bram", "mem_rst", 1),
	Port_Property("interrupt", 1, hls_out, -1, "", "", 1),
};
const char* HLS_Design_Meta::dut_name = "obj_detector";
