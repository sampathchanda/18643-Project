// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.2
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _obj_detector_ReLU_HH_
#define _obj_detector_ReLU_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "obj_detector_fcmp_32ns_32ns_1_1.h"

namespace ap_rtl {

struct obj_detector_ReLU : public sc_module {
    // Port declarations 15
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<12> > inp_address0;
    sc_out< sc_logic > inp_ce0;
    sc_in< sc_lv<32> > inp_q0;
    sc_in< sc_lv<3> > tmp_2;
    sc_out< sc_lv<12> > out_r_address0;
    sc_out< sc_logic > out_r_ce0;
    sc_out< sc_logic > out_r_we0;
    sc_out< sc_lv<32> > out_r_d0;
    sc_in< sc_lv<3> > tmp_21;


    // Module declarations
    obj_detector_ReLU(sc_module_name name);
    SC_HAS_PROCESS(obj_detector_ReLU);

    ~obj_detector_ReLU();

    sc_trace_file* mVcdFile;

    obj_detector_fcmp_32ns_32ns_1_1<1,1,32,32,1>* obj_detector_fcmp_32ns_32ns_1_1_U14;
    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_bdd_22;
    sc_signal< sc_lv<10> > p_addr_cast_fu_146_p1;
    sc_signal< sc_lv<10> > p_addr_cast_reg_356;
    sc_signal< sc_lv<10> > p_addr12_cast_fu_180_p1;
    sc_signal< sc_lv<10> > p_addr12_cast_reg_361;
    sc_signal< sc_lv<5> > i_5_fu_190_p2;
    sc_signal< sc_lv<5> > i_5_reg_369;
    sc_signal< sc_logic > ap_sig_cseq_ST_st2_fsm_1;
    sc_signal< bool > ap_sig_bdd_56;
    sc_signal< sc_lv<32> > p_addr2_fu_229_p2;
    sc_signal< sc_lv<32> > p_addr2_reg_374;
    sc_signal< sc_lv<1> > exitcond1_fu_184_p2;
    sc_signal< sc_lv<32> > p_addr15_fu_264_p2;
    sc_signal< sc_lv<32> > p_addr15_reg_379;
    sc_signal< sc_lv<5> > j_1_fu_276_p2;
    sc_signal< sc_lv<5> > j_1_reg_387;
    sc_signal< sc_logic > ap_sig_cseq_ST_st3_fsm_2;
    sc_signal< bool > ap_sig_bdd_73;
    sc_signal< sc_lv<1> > exitcond_fu_270_p2;
    sc_signal< sc_lv<32> > p_addr16_fu_296_p2;
    sc_signal< sc_lv<32> > p_addr16_reg_397;
    sc_signal< sc_lv<5> > i_reg_88;
    sc_signal< sc_lv<5> > j_reg_99;
    sc_signal< sc_logic > ap_sig_cseq_ST_st4_fsm_3;
    sc_signal< bool > ap_sig_bdd_94;
    sc_signal< sc_lv<64> > tmp_392_fu_291_p1;
    sc_signal< sc_lv<64> > tmp_394_fu_343_p1;
    sc_signal< sc_lv<32> > tmp_330_fu_110_p0;
    sc_signal< sc_lv<32> > tmp_330_fu_110_p1;
    sc_signal< sc_lv<8> > tmp_fu_116_p3;
    sc_signal< sc_lv<6> > tmp_385_fu_128_p3;
    sc_signal< sc_lv<9> > p_shl9_cast_fu_124_p1;
    sc_signal< sc_lv<9> > p_shl10_cast_fu_136_p1;
    sc_signal< sc_lv<9> > p_addr_fu_140_p2;
    sc_signal< sc_lv<8> > tmp_386_fu_150_p3;
    sc_signal< sc_lv<6> > tmp_387_fu_162_p3;
    sc_signal< sc_lv<9> > p_shl_cast_fu_158_p1;
    sc_signal< sc_lv<9> > p_shl11_cast_fu_170_p1;
    sc_signal< sc_lv<9> > p_addr12_fu_174_p2;
    sc_signal< sc_lv<10> > tmp_trn_cast_fu_196_p1;
    sc_signal< sc_lv<10> > p_addr1_fu_200_p2;
    sc_signal< sc_lv<15> > tmp_388_fu_205_p3;
    sc_signal< sc_lv<13> > tmp_389_fu_217_p3;
    sc_signal< sc_lv<32> > p_shl_fu_213_p1;
    sc_signal< sc_lv<32> > p_shl1_fu_225_p1;
    sc_signal< sc_lv<10> > p_addr13_fu_235_p2;
    sc_signal< sc_lv<15> > tmp_390_fu_240_p3;
    sc_signal< sc_lv<13> > tmp_391_fu_252_p3;
    sc_signal< sc_lv<32> > p_shl2_fu_248_p1;
    sc_signal< sc_lv<32> > p_shl3_fu_260_p1;
    sc_signal< sc_lv<32> > tmp_trn_fu_282_p1;
    sc_signal< sc_lv<32> > p_addr3_fu_286_p2;
    sc_signal< sc_lv<32> > inp_load_to_int_fu_301_p1;
    sc_signal< sc_lv<8> > tmp_s_fu_305_p4;
    sc_signal< sc_lv<23> > tmp_393_fu_315_p1;
    sc_signal< sc_lv<1> > notrhs_fu_325_p2;
    sc_signal< sc_lv<1> > notlhs_fu_319_p2;
    sc_signal< sc_lv<1> > tmp_329_fu_331_p2;
    sc_signal< sc_lv<1> > tmp_330_fu_110_p2;
    sc_signal< sc_lv<1> > tmp_331_fu_337_p2;
    sc_signal< sc_lv<5> > tmp_330_fu_110_opcode;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_st1_fsm_0;
    static const sc_lv<4> ap_ST_st2_fsm_1;
    static const sc_lv<4> ap_ST_st3_fsm_2;
    static const sc_lv<4> ap_ST_st4_fsm_3;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<5> ap_const_lv5_18;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<23> ap_const_lv23_0;
    static const sc_lv<5> ap_const_lv5_2;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sig_bdd_22();
    void thread_ap_sig_bdd_56();
    void thread_ap_sig_bdd_73();
    void thread_ap_sig_bdd_94();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_ap_sig_cseq_ST_st2_fsm_1();
    void thread_ap_sig_cseq_ST_st3_fsm_2();
    void thread_ap_sig_cseq_ST_st4_fsm_3();
    void thread_exitcond1_fu_184_p2();
    void thread_exitcond_fu_270_p2();
    void thread_i_5_fu_190_p2();
    void thread_inp_address0();
    void thread_inp_ce0();
    void thread_inp_load_to_int_fu_301_p1();
    void thread_j_1_fu_276_p2();
    void thread_notlhs_fu_319_p2();
    void thread_notrhs_fu_325_p2();
    void thread_out_r_address0();
    void thread_out_r_ce0();
    void thread_out_r_d0();
    void thread_out_r_we0();
    void thread_p_addr12_cast_fu_180_p1();
    void thread_p_addr12_fu_174_p2();
    void thread_p_addr13_fu_235_p2();
    void thread_p_addr15_fu_264_p2();
    void thread_p_addr16_fu_296_p2();
    void thread_p_addr1_fu_200_p2();
    void thread_p_addr2_fu_229_p2();
    void thread_p_addr3_fu_286_p2();
    void thread_p_addr_cast_fu_146_p1();
    void thread_p_addr_fu_140_p2();
    void thread_p_shl10_cast_fu_136_p1();
    void thread_p_shl11_cast_fu_170_p1();
    void thread_p_shl1_fu_225_p1();
    void thread_p_shl2_fu_248_p1();
    void thread_p_shl3_fu_260_p1();
    void thread_p_shl9_cast_fu_124_p1();
    void thread_p_shl_cast_fu_158_p1();
    void thread_p_shl_fu_213_p1();
    void thread_tmp_329_fu_331_p2();
    void thread_tmp_330_fu_110_opcode();
    void thread_tmp_330_fu_110_p0();
    void thread_tmp_330_fu_110_p1();
    void thread_tmp_331_fu_337_p2();
    void thread_tmp_385_fu_128_p3();
    void thread_tmp_386_fu_150_p3();
    void thread_tmp_387_fu_162_p3();
    void thread_tmp_388_fu_205_p3();
    void thread_tmp_389_fu_217_p3();
    void thread_tmp_390_fu_240_p3();
    void thread_tmp_391_fu_252_p3();
    void thread_tmp_392_fu_291_p1();
    void thread_tmp_393_fu_315_p1();
    void thread_tmp_394_fu_343_p1();
    void thread_tmp_fu_116_p3();
    void thread_tmp_s_fu_305_p4();
    void thread_tmp_trn_cast_fu_196_p1();
    void thread_tmp_trn_fu_282_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
