-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2015.2
-- Copyright (C) 2015 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity obj_detector is
generic (
    C_S_AXI_CONTROL_ADDR_WIDTH : INTEGER := 5;
    C_S_AXI_CONTROL_DATA_WIDTH : INTEGER := 32 );
port (
    s_axi_control_AWVALID : IN STD_LOGIC;
    s_axi_control_AWREADY : OUT STD_LOGIC;
    s_axi_control_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_WVALID : IN STD_LOGIC;
    s_axi_control_WREADY : OUT STD_LOGIC;
    s_axi_control_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH/8-1 downto 0);
    s_axi_control_ARVALID : IN STD_LOGIC;
    s_axi_control_ARREADY : OUT STD_LOGIC;
    s_axi_control_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_RVALID : OUT STD_LOGIC;
    s_axi_control_RREADY : IN STD_LOGIC;
    s_axi_control_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_control_BVALID : OUT STD_LOGIC;
    s_axi_control_BREADY : IN STD_LOGIC;
    s_axi_control_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    A_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    A_EN_A : OUT STD_LOGIC;
    A_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    A_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    A_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    A_Clk_A : OUT STD_LOGIC;
    A_Rst_A : OUT STD_LOGIC;
    W0_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    W0_EN_A : OUT STD_LOGIC;
    W0_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    W0_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    W0_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    W0_Clk_A : OUT STD_LOGIC;
    W0_Rst_A : OUT STD_LOGIC;
    W1_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    W1_EN_A : OUT STD_LOGIC;
    W1_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    W1_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    W1_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    W1_Clk_A : OUT STD_LOGIC;
    W1_Rst_A : OUT STD_LOGIC;
    res_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    res_EN_A : OUT STD_LOGIC;
    res_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    res_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    res_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    res_Clk_A : OUT STD_LOGIC;
    res_Rst_A : OUT STD_LOGIC;
    interrupt : OUT STD_LOGIC );
end;


architecture behav of obj_detector is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "obj_detector,hls_ip_2015_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=11.058000,HLS_SYN_LAT=45523,HLS_SYN_TPT=none,HLS_SYN_MEM=42,HLS_SYN_DSP=62,HLS_SYN_FF=20378,HLS_SYN_LUT=32261}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000010";
    constant ap_ST_st3_fsm_2 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000100";
    constant ap_ST_st4_fsm_3 : STD_LOGIC_VECTOR (12 downto 0) := "0000000001000";
    constant ap_ST_st5_fsm_4 : STD_LOGIC_VECTOR (12 downto 0) := "0000000010000";
    constant ap_ST_st6_fsm_5 : STD_LOGIC_VECTOR (12 downto 0) := "0000000100000";
    constant ap_ST_st7_fsm_6 : STD_LOGIC_VECTOR (12 downto 0) := "0000001000000";
    constant ap_ST_st8_fsm_7 : STD_LOGIC_VECTOR (12 downto 0) := "0000010000000";
    constant ap_ST_st9_fsm_8 : STD_LOGIC_VECTOR (12 downto 0) := "0000100000000";
    constant ap_ST_st10_fsm_9 : STD_LOGIC_VECTOR (12 downto 0) := "0001000000000";
    constant ap_ST_st11_fsm_10 : STD_LOGIC_VECTOR (12 downto 0) := "0010000000000";
    constant ap_ST_st12_fsm_11 : STD_LOGIC_VECTOR (12 downto 0) := "0100000000000";
    constant ap_ST_st13_fsm_12 : STD_LOGIC_VECTOR (12 downto 0) := "1000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_bdd_54 : BOOLEAN;
    signal ap_ready : STD_LOGIC;
    signal obj_detector_control_s_axi_U_ap_dummy_ce : STD_LOGIC;
    signal i_1_fu_250_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_1_reg_283 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_bdd_119 : BOOLEAN;
    signal i_2_fu_262_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_2_reg_291 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_sig_cseq_ST_st4_fsm_3 : STD_LOGIC;
    signal ap_sig_bdd_128 : BOOLEAN;
    signal i_3_fu_274_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_3_reg_299 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_sig_cseq_ST_st6_fsm_5 : STD_LOGIC;
    signal ap_sig_bdd_137 : BOOLEAN;
    signal grp_obj_detector_FCL_fu_223_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal cost_0_reg_304 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st10_fsm_9 : STD_LOGIC;
    signal ap_sig_bdd_146 : BOOLEAN;
    signal grp_obj_detector_FCL_fu_223_ap_done : STD_LOGIC;
    signal cost_1_reg_309 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st12_fsm_11 : STD_LOGIC;
    signal ap_sig_bdd_158 : BOOLEAN;
    signal s0_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal s0_ce0 : STD_LOGIC;
    signal s0_we0 : STD_LOGIC;
    signal s0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal s0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal s1_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal s1_ce0 : STD_LOGIC;
    signal s1_we0 : STD_LOGIC;
    signal s1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal s1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal s1_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal s1_ce1 : STD_LOGIC;
    signal s1_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal s2_0_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal s2_0_ce0 : STD_LOGIC;
    signal s2_0_we0 : STD_LOGIC;
    signal s2_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal s2_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal s2_0_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal s2_0_ce1 : STD_LOGIC;
    signal s2_0_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal s2_1_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal s2_1_ce0 : STD_LOGIC;
    signal s2_1_we0 : STD_LOGIC;
    signal s2_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal s2_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal s2_1_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal s2_1_ce1 : STD_LOGIC;
    signal s2_1_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal s2_2_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal s2_2_ce0 : STD_LOGIC;
    signal s2_2_we0 : STD_LOGIC;
    signal s2_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal s2_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal s2_2_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal s2_2_ce1 : STD_LOGIC;
    signal s2_2_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal s2_3_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal s2_3_ce0 : STD_LOGIC;
    signal s2_3_we0 : STD_LOGIC;
    signal s2_3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal s2_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal s2_3_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal s2_3_ce1 : STD_LOGIC;
    signal s2_3_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal s2_4_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal s2_4_ce0 : STD_LOGIC;
    signal s2_4_we0 : STD_LOGIC;
    signal s2_4_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal s2_4_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal s2_4_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal s2_4_ce1 : STD_LOGIC;
    signal s2_4_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal s2_5_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal s2_5_ce0 : STD_LOGIC;
    signal s2_5_we0 : STD_LOGIC;
    signal s2_5_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal s2_5_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal s2_5_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal s2_5_ce1 : STD_LOGIC;
    signal s2_5_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal s2_6_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal s2_6_ce0 : STD_LOGIC;
    signal s2_6_we0 : STD_LOGIC;
    signal s2_6_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal s2_6_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal s2_6_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal s2_6_ce1 : STD_LOGIC;
    signal s2_6_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal s2_7_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal s2_7_ce0 : STD_LOGIC;
    signal s2_7_we0 : STD_LOGIC;
    signal s2_7_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal s2_7_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal s2_7_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal s2_7_ce1 : STD_LOGIC;
    signal s2_7_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal s2_8_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal s2_8_ce0 : STD_LOGIC;
    signal s2_8_we0 : STD_LOGIC;
    signal s2_8_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal s2_8_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal s2_8_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal s2_8_ce1 : STD_LOGIC;
    signal s2_8_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal s2_9_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal s2_9_ce0 : STD_LOGIC;
    signal s2_9_we0 : STD_LOGIC;
    signal s2_9_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal s2_9_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal s2_9_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal s2_9_ce1 : STD_LOGIC;
    signal s2_9_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal s2_10_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal s2_10_ce0 : STD_LOGIC;
    signal s2_10_we0 : STD_LOGIC;
    signal s2_10_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal s2_10_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal s2_10_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal s2_10_ce1 : STD_LOGIC;
    signal s2_10_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal s2_11_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal s2_11_ce0 : STD_LOGIC;
    signal s2_11_we0 : STD_LOGIC;
    signal s2_11_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal s2_11_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal s2_11_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal s2_11_ce1 : STD_LOGIC;
    signal s2_11_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal s3_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal s3_ce0 : STD_LOGIC;
    signal s3_we0 : STD_LOGIC;
    signal s3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal s3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal s3_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal s3_ce1 : STD_LOGIC;
    signal s3_we1 : STD_LOGIC;
    signal s3_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_obj_detector_convolve_fu_164_ap_start : STD_LOGIC;
    signal grp_obj_detector_convolve_fu_164_ap_done : STD_LOGIC;
    signal grp_obj_detector_convolve_fu_164_ap_idle : STD_LOGIC;
    signal grp_obj_detector_convolve_fu_164_ap_ready : STD_LOGIC;
    signal grp_obj_detector_convolve_fu_164_A_Addr_A : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_obj_detector_convolve_fu_164_A_EN_A : STD_LOGIC;
    signal grp_obj_detector_convolve_fu_164_A_WEN_A : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_obj_detector_convolve_fu_164_A_Din_A : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_obj_detector_convolve_fu_164_A_Dout_A : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_obj_detector_convolve_fu_164_B_Addr_A : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_obj_detector_convolve_fu_164_B_EN_A : STD_LOGIC;
    signal grp_obj_detector_convolve_fu_164_B_WEN_A : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_obj_detector_convolve_fu_164_B_Din_A : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_obj_detector_convolve_fu_164_B_Dout_A : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_obj_detector_convolve_fu_164_tmp : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_obj_detector_convolve_fu_164_conv_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_obj_detector_convolve_fu_164_conv_ce0 : STD_LOGIC;
    signal grp_obj_detector_convolve_fu_164_conv_we0 : STD_LOGIC;
    signal grp_obj_detector_convolve_fu_164_conv_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_obj_detector_convolve_fu_164_tmp1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_obj_detector_softmax_fu_177_ap_start : STD_LOGIC;
    signal grp_obj_detector_softmax_fu_177_ap_done : STD_LOGIC;
    signal grp_obj_detector_softmax_fu_177_ap_idle : STD_LOGIC;
    signal grp_obj_detector_softmax_fu_177_ap_ready : STD_LOGIC;
    signal grp_obj_detector_softmax_fu_177_inp_0_read : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_obj_detector_softmax_fu_177_inp_1_read : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_obj_detector_softmax_fu_177_out_r_Addr_A : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_obj_detector_softmax_fu_177_out_r_EN_A : STD_LOGIC;
    signal grp_obj_detector_softmax_fu_177_out_r_WEN_A : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_obj_detector_softmax_fu_177_out_r_Din_A : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_obj_detector_softmax_fu_177_out_r_Dout_A : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_obj_detector_flatten_fu_185_ap_start : STD_LOGIC;
    signal grp_obj_detector_flatten_fu_185_ap_done : STD_LOGIC;
    signal grp_obj_detector_flatten_fu_185_ap_idle : STD_LOGIC;
    signal grp_obj_detector_flatten_fu_185_ap_ready : STD_LOGIC;
    signal grp_obj_detector_flatten_fu_185_inp_0_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_obj_detector_flatten_fu_185_inp_0_ce0 : STD_LOGIC;
    signal grp_obj_detector_flatten_fu_185_inp_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_obj_detector_flatten_fu_185_inp_0_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_obj_detector_flatten_fu_185_inp_0_ce1 : STD_LOGIC;
    signal grp_obj_detector_flatten_fu_185_inp_0_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_obj_detector_flatten_fu_185_inp_1_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_obj_detector_flatten_fu_185_inp_1_ce0 : STD_LOGIC;
    signal grp_obj_detector_flatten_fu_185_inp_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_obj_detector_flatten_fu_185_inp_1_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_obj_detector_flatten_fu_185_inp_1_ce1 : STD_LOGIC;
    signal grp_obj_detector_flatten_fu_185_inp_1_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_obj_detector_flatten_fu_185_inp_2_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_obj_detector_flatten_fu_185_inp_2_ce0 : STD_LOGIC;
    signal grp_obj_detector_flatten_fu_185_inp_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_obj_detector_flatten_fu_185_inp_2_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_obj_detector_flatten_fu_185_inp_2_ce1 : STD_LOGIC;
    signal grp_obj_detector_flatten_fu_185_inp_2_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_obj_detector_flatten_fu_185_inp_3_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_obj_detector_flatten_fu_185_inp_3_ce0 : STD_LOGIC;
    signal grp_obj_detector_flatten_fu_185_inp_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_obj_detector_flatten_fu_185_inp_3_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_obj_detector_flatten_fu_185_inp_3_ce1 : STD_LOGIC;
    signal grp_obj_detector_flatten_fu_185_inp_3_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_obj_detector_flatten_fu_185_inp_4_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_obj_detector_flatten_fu_185_inp_4_ce0 : STD_LOGIC;
    signal grp_obj_detector_flatten_fu_185_inp_4_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_obj_detector_flatten_fu_185_inp_4_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_obj_detector_flatten_fu_185_inp_4_ce1 : STD_LOGIC;
    signal grp_obj_detector_flatten_fu_185_inp_4_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_obj_detector_flatten_fu_185_inp_5_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_obj_detector_flatten_fu_185_inp_5_ce0 : STD_LOGIC;
    signal grp_obj_detector_flatten_fu_185_inp_5_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_obj_detector_flatten_fu_185_inp_5_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_obj_detector_flatten_fu_185_inp_5_ce1 : STD_LOGIC;
    signal grp_obj_detector_flatten_fu_185_inp_5_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_obj_detector_flatten_fu_185_inp_6_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_obj_detector_flatten_fu_185_inp_6_ce0 : STD_LOGIC;
    signal grp_obj_detector_flatten_fu_185_inp_6_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_obj_detector_flatten_fu_185_inp_6_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_obj_detector_flatten_fu_185_inp_6_ce1 : STD_LOGIC;
    signal grp_obj_detector_flatten_fu_185_inp_6_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_obj_detector_flatten_fu_185_inp_7_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_obj_detector_flatten_fu_185_inp_7_ce0 : STD_LOGIC;
    signal grp_obj_detector_flatten_fu_185_inp_7_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_obj_detector_flatten_fu_185_inp_7_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_obj_detector_flatten_fu_185_inp_7_ce1 : STD_LOGIC;
    signal grp_obj_detector_flatten_fu_185_inp_7_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_obj_detector_flatten_fu_185_inp_8_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_obj_detector_flatten_fu_185_inp_8_ce0 : STD_LOGIC;
    signal grp_obj_detector_flatten_fu_185_inp_8_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_obj_detector_flatten_fu_185_inp_8_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_obj_detector_flatten_fu_185_inp_8_ce1 : STD_LOGIC;
    signal grp_obj_detector_flatten_fu_185_inp_8_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_obj_detector_flatten_fu_185_inp_9_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_obj_detector_flatten_fu_185_inp_9_ce0 : STD_LOGIC;
    signal grp_obj_detector_flatten_fu_185_inp_9_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_obj_detector_flatten_fu_185_inp_9_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_obj_detector_flatten_fu_185_inp_9_ce1 : STD_LOGIC;
    signal grp_obj_detector_flatten_fu_185_inp_9_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_obj_detector_flatten_fu_185_inp_10_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_obj_detector_flatten_fu_185_inp_10_ce0 : STD_LOGIC;
    signal grp_obj_detector_flatten_fu_185_inp_10_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_obj_detector_flatten_fu_185_inp_10_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_obj_detector_flatten_fu_185_inp_10_ce1 : STD_LOGIC;
    signal grp_obj_detector_flatten_fu_185_inp_10_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_obj_detector_flatten_fu_185_inp_11_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_obj_detector_flatten_fu_185_inp_11_ce0 : STD_LOGIC;
    signal grp_obj_detector_flatten_fu_185_inp_11_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_obj_detector_flatten_fu_185_inp_11_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_obj_detector_flatten_fu_185_inp_11_ce1 : STD_LOGIC;
    signal grp_obj_detector_flatten_fu_185_inp_11_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_obj_detector_flatten_fu_185_out_r_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_obj_detector_flatten_fu_185_out_r_ce0 : STD_LOGIC;
    signal grp_obj_detector_flatten_fu_185_out_r_we0 : STD_LOGIC;
    signal grp_obj_detector_flatten_fu_185_out_r_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_obj_detector_flatten_fu_185_out_r_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_obj_detector_flatten_fu_185_out_r_ce1 : STD_LOGIC;
    signal grp_obj_detector_flatten_fu_185_out_r_we1 : STD_LOGIC;
    signal grp_obj_detector_flatten_fu_185_out_r_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_obj_detector_maxpool_fu_202_ap_start : STD_LOGIC;
    signal grp_obj_detector_maxpool_fu_202_ap_done : STD_LOGIC;
    signal grp_obj_detector_maxpool_fu_202_ap_idle : STD_LOGIC;
    signal grp_obj_detector_maxpool_fu_202_ap_ready : STD_LOGIC;
    signal grp_obj_detector_maxpool_fu_202_inp_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_obj_detector_maxpool_fu_202_inp_ce0 : STD_LOGIC;
    signal grp_obj_detector_maxpool_fu_202_inp_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_obj_detector_maxpool_fu_202_inp_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_obj_detector_maxpool_fu_202_inp_ce1 : STD_LOGIC;
    signal grp_obj_detector_maxpool_fu_202_inp_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_obj_detector_maxpool_fu_202_tmp_6 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_obj_detector_maxpool_fu_202_out_0_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_obj_detector_maxpool_fu_202_out_0_ce0 : STD_LOGIC;
    signal grp_obj_detector_maxpool_fu_202_out_0_we0 : STD_LOGIC;
    signal grp_obj_detector_maxpool_fu_202_out_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_obj_detector_maxpool_fu_202_out_1_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_obj_detector_maxpool_fu_202_out_1_ce0 : STD_LOGIC;
    signal grp_obj_detector_maxpool_fu_202_out_1_we0 : STD_LOGIC;
    signal grp_obj_detector_maxpool_fu_202_out_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_obj_detector_maxpool_fu_202_out_2_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_obj_detector_maxpool_fu_202_out_2_ce0 : STD_LOGIC;
    signal grp_obj_detector_maxpool_fu_202_out_2_we0 : STD_LOGIC;
    signal grp_obj_detector_maxpool_fu_202_out_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_obj_detector_maxpool_fu_202_out_3_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_obj_detector_maxpool_fu_202_out_3_ce0 : STD_LOGIC;
    signal grp_obj_detector_maxpool_fu_202_out_3_we0 : STD_LOGIC;
    signal grp_obj_detector_maxpool_fu_202_out_3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_obj_detector_maxpool_fu_202_out_4_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_obj_detector_maxpool_fu_202_out_4_ce0 : STD_LOGIC;
    signal grp_obj_detector_maxpool_fu_202_out_4_we0 : STD_LOGIC;
    signal grp_obj_detector_maxpool_fu_202_out_4_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_obj_detector_maxpool_fu_202_out_5_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_obj_detector_maxpool_fu_202_out_5_ce0 : STD_LOGIC;
    signal grp_obj_detector_maxpool_fu_202_out_5_we0 : STD_LOGIC;
    signal grp_obj_detector_maxpool_fu_202_out_5_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_obj_detector_maxpool_fu_202_out_6_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_obj_detector_maxpool_fu_202_out_6_ce0 : STD_LOGIC;
    signal grp_obj_detector_maxpool_fu_202_out_6_we0 : STD_LOGIC;
    signal grp_obj_detector_maxpool_fu_202_out_6_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_obj_detector_maxpool_fu_202_out_7_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_obj_detector_maxpool_fu_202_out_7_ce0 : STD_LOGIC;
    signal grp_obj_detector_maxpool_fu_202_out_7_we0 : STD_LOGIC;
    signal grp_obj_detector_maxpool_fu_202_out_7_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_obj_detector_maxpool_fu_202_out_8_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_obj_detector_maxpool_fu_202_out_8_ce0 : STD_LOGIC;
    signal grp_obj_detector_maxpool_fu_202_out_8_we0 : STD_LOGIC;
    signal grp_obj_detector_maxpool_fu_202_out_8_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_obj_detector_maxpool_fu_202_out_9_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_obj_detector_maxpool_fu_202_out_9_ce0 : STD_LOGIC;
    signal grp_obj_detector_maxpool_fu_202_out_9_we0 : STD_LOGIC;
    signal grp_obj_detector_maxpool_fu_202_out_9_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_obj_detector_maxpool_fu_202_out_10_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_obj_detector_maxpool_fu_202_out_10_ce0 : STD_LOGIC;
    signal grp_obj_detector_maxpool_fu_202_out_10_we0 : STD_LOGIC;
    signal grp_obj_detector_maxpool_fu_202_out_10_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_obj_detector_maxpool_fu_202_out_11_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_obj_detector_maxpool_fu_202_out_11_ce0 : STD_LOGIC;
    signal grp_obj_detector_maxpool_fu_202_out_11_we0 : STD_LOGIC;
    signal grp_obj_detector_maxpool_fu_202_out_11_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_obj_detector_maxpool_fu_202_tmp_61 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_obj_detector_FCL_fu_223_ap_start : STD_LOGIC;
    signal grp_obj_detector_FCL_fu_223_ap_idle : STD_LOGIC;
    signal grp_obj_detector_FCL_fu_223_ap_ready : STD_LOGIC;
    signal grp_obj_detector_FCL_fu_223_inp_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_obj_detector_FCL_fu_223_inp_ce0 : STD_LOGIC;
    signal grp_obj_detector_FCL_fu_223_inp_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_obj_detector_FCL_fu_223_W_Addr_A : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_obj_detector_FCL_fu_223_W_EN_A : STD_LOGIC;
    signal grp_obj_detector_FCL_fu_223_W_WEN_A : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_obj_detector_FCL_fu_223_W_Din_A : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_obj_detector_FCL_fu_223_W_Dout_A : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_obj_detector_FCL_fu_223_W_offset : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_obj_detector_ReLU_fu_234_ap_start : STD_LOGIC;
    signal grp_obj_detector_ReLU_fu_234_ap_done : STD_LOGIC;
    signal grp_obj_detector_ReLU_fu_234_ap_idle : STD_LOGIC;
    signal grp_obj_detector_ReLU_fu_234_ap_ready : STD_LOGIC;
    signal grp_obj_detector_ReLU_fu_234_inp_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_obj_detector_ReLU_fu_234_inp_ce0 : STD_LOGIC;
    signal grp_obj_detector_ReLU_fu_234_inp_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_obj_detector_ReLU_fu_234_tmp_2 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_obj_detector_ReLU_fu_234_out_r_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_obj_detector_ReLU_fu_234_out_r_ce0 : STD_LOGIC;
    signal grp_obj_detector_ReLU_fu_234_out_r_we0 : STD_LOGIC;
    signal grp_obj_detector_ReLU_fu_234_out_r_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_obj_detector_ReLU_fu_234_tmp_21 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_reg_128 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_sig_cseq_ST_st3_fsm_2 : STD_LOGIC;
    signal ap_sig_bdd_566 : BOOLEAN;
    signal i1_reg_140 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_sig_cseq_ST_st5_fsm_4 : STD_LOGIC;
    signal ap_sig_bdd_578 : BOOLEAN;
    signal exitcond2_fu_244_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i2_reg_152 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_sig_cseq_ST_st7_fsm_6 : STD_LOGIC;
    signal ap_sig_bdd_595 : BOOLEAN;
    signal exitcond1_fu_256_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_obj_detector_convolve_fu_164_ap_start_ap_start_reg : STD_LOGIC := '0';
    signal grp_obj_detector_softmax_fu_177_ap_start_ap_start_reg : STD_LOGIC := '0';
    signal ap_sig_cseq_ST_st13_fsm_12 : STD_LOGIC;
    signal ap_sig_bdd_614 : BOOLEAN;
    signal grp_obj_detector_flatten_fu_185_ap_start_ap_start_reg : STD_LOGIC := '0';
    signal exitcond_fu_268_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st8_fsm_7 : STD_LOGIC;
    signal ap_sig_bdd_627 : BOOLEAN;
    signal grp_obj_detector_maxpool_fu_202_ap_start_ap_start_reg : STD_LOGIC := '0';
    signal grp_obj_detector_FCL_fu_223_ap_start_ap_start_reg : STD_LOGIC := '0';
    signal ap_sig_cseq_ST_st9_fsm_8 : STD_LOGIC;
    signal ap_sig_bdd_639 : BOOLEAN;
    signal ap_sig_cseq_ST_st11_fsm_10 : STD_LOGIC;
    signal ap_sig_bdd_646 : BOOLEAN;
    signal grp_obj_detector_ReLU_fu_234_ap_start_ap_start_reg : STD_LOGIC := '0';
    signal ap_NS_fsm : STD_LOGIC_VECTOR (12 downto 0);

    component obj_detector_convolve IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        A_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
        A_EN_A : OUT STD_LOGIC;
        A_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
        A_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
        A_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
        B_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
        B_EN_A : OUT STD_LOGIC;
        B_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
        B_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
        tmp : IN STD_LOGIC_VECTOR (2 downto 0);
        conv_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        conv_ce0 : OUT STD_LOGIC;
        conv_we0 : OUT STD_LOGIC;
        conv_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        tmp1 : IN STD_LOGIC_VECTOR (2 downto 0) );
    end component;


    component obj_detector_softmax IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        inp_0_read : IN STD_LOGIC_VECTOR (31 downto 0);
        inp_1_read : IN STD_LOGIC_VECTOR (31 downto 0);
        out_r_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
        out_r_EN_A : OUT STD_LOGIC;
        out_r_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
        out_r_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
        out_r_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component obj_detector_flatten IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        inp_0_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        inp_0_ce0 : OUT STD_LOGIC;
        inp_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        inp_0_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        inp_0_ce1 : OUT STD_LOGIC;
        inp_0_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        inp_1_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        inp_1_ce0 : OUT STD_LOGIC;
        inp_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        inp_1_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        inp_1_ce1 : OUT STD_LOGIC;
        inp_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        inp_2_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        inp_2_ce0 : OUT STD_LOGIC;
        inp_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        inp_2_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        inp_2_ce1 : OUT STD_LOGIC;
        inp_2_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        inp_3_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        inp_3_ce0 : OUT STD_LOGIC;
        inp_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        inp_3_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        inp_3_ce1 : OUT STD_LOGIC;
        inp_3_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        inp_4_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        inp_4_ce0 : OUT STD_LOGIC;
        inp_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        inp_4_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        inp_4_ce1 : OUT STD_LOGIC;
        inp_4_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        inp_5_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        inp_5_ce0 : OUT STD_LOGIC;
        inp_5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        inp_5_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        inp_5_ce1 : OUT STD_LOGIC;
        inp_5_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        inp_6_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        inp_6_ce0 : OUT STD_LOGIC;
        inp_6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        inp_6_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        inp_6_ce1 : OUT STD_LOGIC;
        inp_6_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        inp_7_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        inp_7_ce0 : OUT STD_LOGIC;
        inp_7_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        inp_7_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        inp_7_ce1 : OUT STD_LOGIC;
        inp_7_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        inp_8_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        inp_8_ce0 : OUT STD_LOGIC;
        inp_8_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        inp_8_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        inp_8_ce1 : OUT STD_LOGIC;
        inp_8_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        inp_9_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        inp_9_ce0 : OUT STD_LOGIC;
        inp_9_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        inp_9_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        inp_9_ce1 : OUT STD_LOGIC;
        inp_9_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        inp_10_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        inp_10_ce0 : OUT STD_LOGIC;
        inp_10_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        inp_10_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        inp_10_ce1 : OUT STD_LOGIC;
        inp_10_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        inp_11_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        inp_11_ce0 : OUT STD_LOGIC;
        inp_11_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        inp_11_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        inp_11_ce1 : OUT STD_LOGIC;
        inp_11_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        out_r_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        out_r_ce0 : OUT STD_LOGIC;
        out_r_we0 : OUT STD_LOGIC;
        out_r_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        out_r_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        out_r_ce1 : OUT STD_LOGIC;
        out_r_we1 : OUT STD_LOGIC;
        out_r_d1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component obj_detector_maxpool IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        inp_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        inp_ce0 : OUT STD_LOGIC;
        inp_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        inp_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        inp_ce1 : OUT STD_LOGIC;
        inp_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        tmp_6 : IN STD_LOGIC_VECTOR (2 downto 0);
        out_0_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        out_0_ce0 : OUT STD_LOGIC;
        out_0_we0 : OUT STD_LOGIC;
        out_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        out_1_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        out_1_ce0 : OUT STD_LOGIC;
        out_1_we0 : OUT STD_LOGIC;
        out_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        out_2_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        out_2_ce0 : OUT STD_LOGIC;
        out_2_we0 : OUT STD_LOGIC;
        out_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        out_3_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        out_3_ce0 : OUT STD_LOGIC;
        out_3_we0 : OUT STD_LOGIC;
        out_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        out_4_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        out_4_ce0 : OUT STD_LOGIC;
        out_4_we0 : OUT STD_LOGIC;
        out_4_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        out_5_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        out_5_ce0 : OUT STD_LOGIC;
        out_5_we0 : OUT STD_LOGIC;
        out_5_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        out_6_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        out_6_ce0 : OUT STD_LOGIC;
        out_6_we0 : OUT STD_LOGIC;
        out_6_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        out_7_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        out_7_ce0 : OUT STD_LOGIC;
        out_7_we0 : OUT STD_LOGIC;
        out_7_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        out_8_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        out_8_ce0 : OUT STD_LOGIC;
        out_8_we0 : OUT STD_LOGIC;
        out_8_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        out_9_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        out_9_ce0 : OUT STD_LOGIC;
        out_9_we0 : OUT STD_LOGIC;
        out_9_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        out_10_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        out_10_ce0 : OUT STD_LOGIC;
        out_10_we0 : OUT STD_LOGIC;
        out_10_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        out_11_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        out_11_ce0 : OUT STD_LOGIC;
        out_11_we0 : OUT STD_LOGIC;
        out_11_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        tmp_61 : IN STD_LOGIC_VECTOR (2 downto 0) );
    end component;


    component obj_detector_FCL IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        inp_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        inp_ce0 : OUT STD_LOGIC;
        inp_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        W_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
        W_EN_A : OUT STD_LOGIC;
        W_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
        W_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
        W_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
        W_offset : IN STD_LOGIC_VECTOR (0 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component obj_detector_ReLU IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        inp_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        inp_ce0 : OUT STD_LOGIC;
        inp_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        tmp_2 : IN STD_LOGIC_VECTOR (2 downto 0);
        out_r_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        out_r_ce0 : OUT STD_LOGIC;
        out_r_we0 : OUT STD_LOGIC;
        out_r_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        tmp_21 : IN STD_LOGIC_VECTOR (2 downto 0) );
    end component;


    component obj_detector_s0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component obj_detector_s1 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component obj_detector_s2_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component obj_detector_s3 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component obj_detector_control_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC );
    end component;



begin
    obj_detector_control_s_axi_U : component obj_detector_control_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_control_AWVALID,
        AWREADY => s_axi_control_AWREADY,
        AWADDR => s_axi_control_AWADDR,
        WVALID => s_axi_control_WVALID,
        WREADY => s_axi_control_WREADY,
        WDATA => s_axi_control_WDATA,
        WSTRB => s_axi_control_WSTRB,
        ARVALID => s_axi_control_ARVALID,
        ARREADY => s_axi_control_ARREADY,
        ARADDR => s_axi_control_ARADDR,
        RVALID => s_axi_control_RVALID,
        RREADY => s_axi_control_RREADY,
        RDATA => s_axi_control_RDATA,
        RRESP => s_axi_control_RRESP,
        BVALID => s_axi_control_BVALID,
        BREADY => s_axi_control_BREADY,
        BRESP => s_axi_control_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => obj_detector_control_s_axi_U_ap_dummy_ce,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle);

    s0_U : component obj_detector_s0
    generic map (
        DataWidth => 32,
        AddressRange => 3456,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => s0_address0,
        ce0 => s0_ce0,
        we0 => s0_we0,
        d0 => s0_d0,
        q0 => s0_q0);

    s1_U : component obj_detector_s1
    generic map (
        DataWidth => 32,
        AddressRange => 3456,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => s1_address0,
        ce0 => s1_ce0,
        we0 => s1_we0,
        d0 => s1_d0,
        q0 => s1_q0,
        address1 => s1_address1,
        ce1 => s1_ce1,
        q1 => s1_q1);

    s2_0_U : component obj_detector_s2_0
    generic map (
        DataWidth => 32,
        AddressRange => 72,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => s2_0_address0,
        ce0 => s2_0_ce0,
        we0 => s2_0_we0,
        d0 => s2_0_d0,
        q0 => s2_0_q0,
        address1 => s2_0_address1,
        ce1 => s2_0_ce1,
        q1 => s2_0_q1);

    s2_1_U : component obj_detector_s2_0
    generic map (
        DataWidth => 32,
        AddressRange => 72,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => s2_1_address0,
        ce0 => s2_1_ce0,
        we0 => s2_1_we0,
        d0 => s2_1_d0,
        q0 => s2_1_q0,
        address1 => s2_1_address1,
        ce1 => s2_1_ce1,
        q1 => s2_1_q1);

    s2_2_U : component obj_detector_s2_0
    generic map (
        DataWidth => 32,
        AddressRange => 72,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => s2_2_address0,
        ce0 => s2_2_ce0,
        we0 => s2_2_we0,
        d0 => s2_2_d0,
        q0 => s2_2_q0,
        address1 => s2_2_address1,
        ce1 => s2_2_ce1,
        q1 => s2_2_q1);

    s2_3_U : component obj_detector_s2_0
    generic map (
        DataWidth => 32,
        AddressRange => 72,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => s2_3_address0,
        ce0 => s2_3_ce0,
        we0 => s2_3_we0,
        d0 => s2_3_d0,
        q0 => s2_3_q0,
        address1 => s2_3_address1,
        ce1 => s2_3_ce1,
        q1 => s2_3_q1);

    s2_4_U : component obj_detector_s2_0
    generic map (
        DataWidth => 32,
        AddressRange => 72,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => s2_4_address0,
        ce0 => s2_4_ce0,
        we0 => s2_4_we0,
        d0 => s2_4_d0,
        q0 => s2_4_q0,
        address1 => s2_4_address1,
        ce1 => s2_4_ce1,
        q1 => s2_4_q1);

    s2_5_U : component obj_detector_s2_0
    generic map (
        DataWidth => 32,
        AddressRange => 72,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => s2_5_address0,
        ce0 => s2_5_ce0,
        we0 => s2_5_we0,
        d0 => s2_5_d0,
        q0 => s2_5_q0,
        address1 => s2_5_address1,
        ce1 => s2_5_ce1,
        q1 => s2_5_q1);

    s2_6_U : component obj_detector_s2_0
    generic map (
        DataWidth => 32,
        AddressRange => 72,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => s2_6_address0,
        ce0 => s2_6_ce0,
        we0 => s2_6_we0,
        d0 => s2_6_d0,
        q0 => s2_6_q0,
        address1 => s2_6_address1,
        ce1 => s2_6_ce1,
        q1 => s2_6_q1);

    s2_7_U : component obj_detector_s2_0
    generic map (
        DataWidth => 32,
        AddressRange => 72,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => s2_7_address0,
        ce0 => s2_7_ce0,
        we0 => s2_7_we0,
        d0 => s2_7_d0,
        q0 => s2_7_q0,
        address1 => s2_7_address1,
        ce1 => s2_7_ce1,
        q1 => s2_7_q1);

    s2_8_U : component obj_detector_s2_0
    generic map (
        DataWidth => 32,
        AddressRange => 72,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => s2_8_address0,
        ce0 => s2_8_ce0,
        we0 => s2_8_we0,
        d0 => s2_8_d0,
        q0 => s2_8_q0,
        address1 => s2_8_address1,
        ce1 => s2_8_ce1,
        q1 => s2_8_q1);

    s2_9_U : component obj_detector_s2_0
    generic map (
        DataWidth => 32,
        AddressRange => 72,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => s2_9_address0,
        ce0 => s2_9_ce0,
        we0 => s2_9_we0,
        d0 => s2_9_d0,
        q0 => s2_9_q0,
        address1 => s2_9_address1,
        ce1 => s2_9_ce1,
        q1 => s2_9_q1);

    s2_10_U : component obj_detector_s2_0
    generic map (
        DataWidth => 32,
        AddressRange => 72,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => s2_10_address0,
        ce0 => s2_10_ce0,
        we0 => s2_10_we0,
        d0 => s2_10_d0,
        q0 => s2_10_q0,
        address1 => s2_10_address1,
        ce1 => s2_10_ce1,
        q1 => s2_10_q1);

    s2_11_U : component obj_detector_s2_0
    generic map (
        DataWidth => 32,
        AddressRange => 72,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => s2_11_address0,
        ce0 => s2_11_ce0,
        we0 => s2_11_we0,
        d0 => s2_11_d0,
        q0 => s2_11_q0,
        address1 => s2_11_address1,
        ce1 => s2_11_ce1,
        q1 => s2_11_q1);

    s3_U : component obj_detector_s3
    generic map (
        DataWidth => 32,
        AddressRange => 864,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => s3_address0,
        ce0 => s3_ce0,
        we0 => s3_we0,
        d0 => s3_d0,
        q0 => s3_q0,
        address1 => s3_address1,
        ce1 => s3_ce1,
        we1 => s3_we1,
        d1 => s3_d1);

    grp_obj_detector_convolve_fu_164 : component obj_detector_convolve
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_obj_detector_convolve_fu_164_ap_start,
        ap_done => grp_obj_detector_convolve_fu_164_ap_done,
        ap_idle => grp_obj_detector_convolve_fu_164_ap_idle,
        ap_ready => grp_obj_detector_convolve_fu_164_ap_ready,
        A_Addr_A => grp_obj_detector_convolve_fu_164_A_Addr_A,
        A_EN_A => grp_obj_detector_convolve_fu_164_A_EN_A,
        A_WEN_A => grp_obj_detector_convolve_fu_164_A_WEN_A,
        A_Din_A => grp_obj_detector_convolve_fu_164_A_Din_A,
        A_Dout_A => grp_obj_detector_convolve_fu_164_A_Dout_A,
        B_Addr_A => grp_obj_detector_convolve_fu_164_B_Addr_A,
        B_EN_A => grp_obj_detector_convolve_fu_164_B_EN_A,
        B_WEN_A => grp_obj_detector_convolve_fu_164_B_WEN_A,
        B_Din_A => grp_obj_detector_convolve_fu_164_B_Din_A,
        B_Dout_A => grp_obj_detector_convolve_fu_164_B_Dout_A,
        tmp => grp_obj_detector_convolve_fu_164_tmp,
        conv_address0 => grp_obj_detector_convolve_fu_164_conv_address0,
        conv_ce0 => grp_obj_detector_convolve_fu_164_conv_ce0,
        conv_we0 => grp_obj_detector_convolve_fu_164_conv_we0,
        conv_d0 => grp_obj_detector_convolve_fu_164_conv_d0,
        tmp1 => grp_obj_detector_convolve_fu_164_tmp1);

    grp_obj_detector_softmax_fu_177 : component obj_detector_softmax
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_obj_detector_softmax_fu_177_ap_start,
        ap_done => grp_obj_detector_softmax_fu_177_ap_done,
        ap_idle => grp_obj_detector_softmax_fu_177_ap_idle,
        ap_ready => grp_obj_detector_softmax_fu_177_ap_ready,
        inp_0_read => grp_obj_detector_softmax_fu_177_inp_0_read,
        inp_1_read => grp_obj_detector_softmax_fu_177_inp_1_read,
        out_r_Addr_A => grp_obj_detector_softmax_fu_177_out_r_Addr_A,
        out_r_EN_A => grp_obj_detector_softmax_fu_177_out_r_EN_A,
        out_r_WEN_A => grp_obj_detector_softmax_fu_177_out_r_WEN_A,
        out_r_Din_A => grp_obj_detector_softmax_fu_177_out_r_Din_A,
        out_r_Dout_A => grp_obj_detector_softmax_fu_177_out_r_Dout_A);

    grp_obj_detector_flatten_fu_185 : component obj_detector_flatten
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_obj_detector_flatten_fu_185_ap_start,
        ap_done => grp_obj_detector_flatten_fu_185_ap_done,
        ap_idle => grp_obj_detector_flatten_fu_185_ap_idle,
        ap_ready => grp_obj_detector_flatten_fu_185_ap_ready,
        inp_0_address0 => grp_obj_detector_flatten_fu_185_inp_0_address0,
        inp_0_ce0 => grp_obj_detector_flatten_fu_185_inp_0_ce0,
        inp_0_q0 => grp_obj_detector_flatten_fu_185_inp_0_q0,
        inp_0_address1 => grp_obj_detector_flatten_fu_185_inp_0_address1,
        inp_0_ce1 => grp_obj_detector_flatten_fu_185_inp_0_ce1,
        inp_0_q1 => grp_obj_detector_flatten_fu_185_inp_0_q1,
        inp_1_address0 => grp_obj_detector_flatten_fu_185_inp_1_address0,
        inp_1_ce0 => grp_obj_detector_flatten_fu_185_inp_1_ce0,
        inp_1_q0 => grp_obj_detector_flatten_fu_185_inp_1_q0,
        inp_1_address1 => grp_obj_detector_flatten_fu_185_inp_1_address1,
        inp_1_ce1 => grp_obj_detector_flatten_fu_185_inp_1_ce1,
        inp_1_q1 => grp_obj_detector_flatten_fu_185_inp_1_q1,
        inp_2_address0 => grp_obj_detector_flatten_fu_185_inp_2_address0,
        inp_2_ce0 => grp_obj_detector_flatten_fu_185_inp_2_ce0,
        inp_2_q0 => grp_obj_detector_flatten_fu_185_inp_2_q0,
        inp_2_address1 => grp_obj_detector_flatten_fu_185_inp_2_address1,
        inp_2_ce1 => grp_obj_detector_flatten_fu_185_inp_2_ce1,
        inp_2_q1 => grp_obj_detector_flatten_fu_185_inp_2_q1,
        inp_3_address0 => grp_obj_detector_flatten_fu_185_inp_3_address0,
        inp_3_ce0 => grp_obj_detector_flatten_fu_185_inp_3_ce0,
        inp_3_q0 => grp_obj_detector_flatten_fu_185_inp_3_q0,
        inp_3_address1 => grp_obj_detector_flatten_fu_185_inp_3_address1,
        inp_3_ce1 => grp_obj_detector_flatten_fu_185_inp_3_ce1,
        inp_3_q1 => grp_obj_detector_flatten_fu_185_inp_3_q1,
        inp_4_address0 => grp_obj_detector_flatten_fu_185_inp_4_address0,
        inp_4_ce0 => grp_obj_detector_flatten_fu_185_inp_4_ce0,
        inp_4_q0 => grp_obj_detector_flatten_fu_185_inp_4_q0,
        inp_4_address1 => grp_obj_detector_flatten_fu_185_inp_4_address1,
        inp_4_ce1 => grp_obj_detector_flatten_fu_185_inp_4_ce1,
        inp_4_q1 => grp_obj_detector_flatten_fu_185_inp_4_q1,
        inp_5_address0 => grp_obj_detector_flatten_fu_185_inp_5_address0,
        inp_5_ce0 => grp_obj_detector_flatten_fu_185_inp_5_ce0,
        inp_5_q0 => grp_obj_detector_flatten_fu_185_inp_5_q0,
        inp_5_address1 => grp_obj_detector_flatten_fu_185_inp_5_address1,
        inp_5_ce1 => grp_obj_detector_flatten_fu_185_inp_5_ce1,
        inp_5_q1 => grp_obj_detector_flatten_fu_185_inp_5_q1,
        inp_6_address0 => grp_obj_detector_flatten_fu_185_inp_6_address0,
        inp_6_ce0 => grp_obj_detector_flatten_fu_185_inp_6_ce0,
        inp_6_q0 => grp_obj_detector_flatten_fu_185_inp_6_q0,
        inp_6_address1 => grp_obj_detector_flatten_fu_185_inp_6_address1,
        inp_6_ce1 => grp_obj_detector_flatten_fu_185_inp_6_ce1,
        inp_6_q1 => grp_obj_detector_flatten_fu_185_inp_6_q1,
        inp_7_address0 => grp_obj_detector_flatten_fu_185_inp_7_address0,
        inp_7_ce0 => grp_obj_detector_flatten_fu_185_inp_7_ce0,
        inp_7_q0 => grp_obj_detector_flatten_fu_185_inp_7_q0,
        inp_7_address1 => grp_obj_detector_flatten_fu_185_inp_7_address1,
        inp_7_ce1 => grp_obj_detector_flatten_fu_185_inp_7_ce1,
        inp_7_q1 => grp_obj_detector_flatten_fu_185_inp_7_q1,
        inp_8_address0 => grp_obj_detector_flatten_fu_185_inp_8_address0,
        inp_8_ce0 => grp_obj_detector_flatten_fu_185_inp_8_ce0,
        inp_8_q0 => grp_obj_detector_flatten_fu_185_inp_8_q0,
        inp_8_address1 => grp_obj_detector_flatten_fu_185_inp_8_address1,
        inp_8_ce1 => grp_obj_detector_flatten_fu_185_inp_8_ce1,
        inp_8_q1 => grp_obj_detector_flatten_fu_185_inp_8_q1,
        inp_9_address0 => grp_obj_detector_flatten_fu_185_inp_9_address0,
        inp_9_ce0 => grp_obj_detector_flatten_fu_185_inp_9_ce0,
        inp_9_q0 => grp_obj_detector_flatten_fu_185_inp_9_q0,
        inp_9_address1 => grp_obj_detector_flatten_fu_185_inp_9_address1,
        inp_9_ce1 => grp_obj_detector_flatten_fu_185_inp_9_ce1,
        inp_9_q1 => grp_obj_detector_flatten_fu_185_inp_9_q1,
        inp_10_address0 => grp_obj_detector_flatten_fu_185_inp_10_address0,
        inp_10_ce0 => grp_obj_detector_flatten_fu_185_inp_10_ce0,
        inp_10_q0 => grp_obj_detector_flatten_fu_185_inp_10_q0,
        inp_10_address1 => grp_obj_detector_flatten_fu_185_inp_10_address1,
        inp_10_ce1 => grp_obj_detector_flatten_fu_185_inp_10_ce1,
        inp_10_q1 => grp_obj_detector_flatten_fu_185_inp_10_q1,
        inp_11_address0 => grp_obj_detector_flatten_fu_185_inp_11_address0,
        inp_11_ce0 => grp_obj_detector_flatten_fu_185_inp_11_ce0,
        inp_11_q0 => grp_obj_detector_flatten_fu_185_inp_11_q0,
        inp_11_address1 => grp_obj_detector_flatten_fu_185_inp_11_address1,
        inp_11_ce1 => grp_obj_detector_flatten_fu_185_inp_11_ce1,
        inp_11_q1 => grp_obj_detector_flatten_fu_185_inp_11_q1,
        out_r_address0 => grp_obj_detector_flatten_fu_185_out_r_address0,
        out_r_ce0 => grp_obj_detector_flatten_fu_185_out_r_ce0,
        out_r_we0 => grp_obj_detector_flatten_fu_185_out_r_we0,
        out_r_d0 => grp_obj_detector_flatten_fu_185_out_r_d0,
        out_r_address1 => grp_obj_detector_flatten_fu_185_out_r_address1,
        out_r_ce1 => grp_obj_detector_flatten_fu_185_out_r_ce1,
        out_r_we1 => grp_obj_detector_flatten_fu_185_out_r_we1,
        out_r_d1 => grp_obj_detector_flatten_fu_185_out_r_d1);

    grp_obj_detector_maxpool_fu_202 : component obj_detector_maxpool
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_obj_detector_maxpool_fu_202_ap_start,
        ap_done => grp_obj_detector_maxpool_fu_202_ap_done,
        ap_idle => grp_obj_detector_maxpool_fu_202_ap_idle,
        ap_ready => grp_obj_detector_maxpool_fu_202_ap_ready,
        inp_address0 => grp_obj_detector_maxpool_fu_202_inp_address0,
        inp_ce0 => grp_obj_detector_maxpool_fu_202_inp_ce0,
        inp_q0 => grp_obj_detector_maxpool_fu_202_inp_q0,
        inp_address1 => grp_obj_detector_maxpool_fu_202_inp_address1,
        inp_ce1 => grp_obj_detector_maxpool_fu_202_inp_ce1,
        inp_q1 => grp_obj_detector_maxpool_fu_202_inp_q1,
        tmp_6 => grp_obj_detector_maxpool_fu_202_tmp_6,
        out_0_address0 => grp_obj_detector_maxpool_fu_202_out_0_address0,
        out_0_ce0 => grp_obj_detector_maxpool_fu_202_out_0_ce0,
        out_0_we0 => grp_obj_detector_maxpool_fu_202_out_0_we0,
        out_0_d0 => grp_obj_detector_maxpool_fu_202_out_0_d0,
        out_1_address0 => grp_obj_detector_maxpool_fu_202_out_1_address0,
        out_1_ce0 => grp_obj_detector_maxpool_fu_202_out_1_ce0,
        out_1_we0 => grp_obj_detector_maxpool_fu_202_out_1_we0,
        out_1_d0 => grp_obj_detector_maxpool_fu_202_out_1_d0,
        out_2_address0 => grp_obj_detector_maxpool_fu_202_out_2_address0,
        out_2_ce0 => grp_obj_detector_maxpool_fu_202_out_2_ce0,
        out_2_we0 => grp_obj_detector_maxpool_fu_202_out_2_we0,
        out_2_d0 => grp_obj_detector_maxpool_fu_202_out_2_d0,
        out_3_address0 => grp_obj_detector_maxpool_fu_202_out_3_address0,
        out_3_ce0 => grp_obj_detector_maxpool_fu_202_out_3_ce0,
        out_3_we0 => grp_obj_detector_maxpool_fu_202_out_3_we0,
        out_3_d0 => grp_obj_detector_maxpool_fu_202_out_3_d0,
        out_4_address0 => grp_obj_detector_maxpool_fu_202_out_4_address0,
        out_4_ce0 => grp_obj_detector_maxpool_fu_202_out_4_ce0,
        out_4_we0 => grp_obj_detector_maxpool_fu_202_out_4_we0,
        out_4_d0 => grp_obj_detector_maxpool_fu_202_out_4_d0,
        out_5_address0 => grp_obj_detector_maxpool_fu_202_out_5_address0,
        out_5_ce0 => grp_obj_detector_maxpool_fu_202_out_5_ce0,
        out_5_we0 => grp_obj_detector_maxpool_fu_202_out_5_we0,
        out_5_d0 => grp_obj_detector_maxpool_fu_202_out_5_d0,
        out_6_address0 => grp_obj_detector_maxpool_fu_202_out_6_address0,
        out_6_ce0 => grp_obj_detector_maxpool_fu_202_out_6_ce0,
        out_6_we0 => grp_obj_detector_maxpool_fu_202_out_6_we0,
        out_6_d0 => grp_obj_detector_maxpool_fu_202_out_6_d0,
        out_7_address0 => grp_obj_detector_maxpool_fu_202_out_7_address0,
        out_7_ce0 => grp_obj_detector_maxpool_fu_202_out_7_ce0,
        out_7_we0 => grp_obj_detector_maxpool_fu_202_out_7_we0,
        out_7_d0 => grp_obj_detector_maxpool_fu_202_out_7_d0,
        out_8_address0 => grp_obj_detector_maxpool_fu_202_out_8_address0,
        out_8_ce0 => grp_obj_detector_maxpool_fu_202_out_8_ce0,
        out_8_we0 => grp_obj_detector_maxpool_fu_202_out_8_we0,
        out_8_d0 => grp_obj_detector_maxpool_fu_202_out_8_d0,
        out_9_address0 => grp_obj_detector_maxpool_fu_202_out_9_address0,
        out_9_ce0 => grp_obj_detector_maxpool_fu_202_out_9_ce0,
        out_9_we0 => grp_obj_detector_maxpool_fu_202_out_9_we0,
        out_9_d0 => grp_obj_detector_maxpool_fu_202_out_9_d0,
        out_10_address0 => grp_obj_detector_maxpool_fu_202_out_10_address0,
        out_10_ce0 => grp_obj_detector_maxpool_fu_202_out_10_ce0,
        out_10_we0 => grp_obj_detector_maxpool_fu_202_out_10_we0,
        out_10_d0 => grp_obj_detector_maxpool_fu_202_out_10_d0,
        out_11_address0 => grp_obj_detector_maxpool_fu_202_out_11_address0,
        out_11_ce0 => grp_obj_detector_maxpool_fu_202_out_11_ce0,
        out_11_we0 => grp_obj_detector_maxpool_fu_202_out_11_we0,
        out_11_d0 => grp_obj_detector_maxpool_fu_202_out_11_d0,
        tmp_61 => grp_obj_detector_maxpool_fu_202_tmp_61);

    grp_obj_detector_FCL_fu_223 : component obj_detector_FCL
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_obj_detector_FCL_fu_223_ap_start,
        ap_done => grp_obj_detector_FCL_fu_223_ap_done,
        ap_idle => grp_obj_detector_FCL_fu_223_ap_idle,
        ap_ready => grp_obj_detector_FCL_fu_223_ap_ready,
        inp_address0 => grp_obj_detector_FCL_fu_223_inp_address0,
        inp_ce0 => grp_obj_detector_FCL_fu_223_inp_ce0,
        inp_q0 => grp_obj_detector_FCL_fu_223_inp_q0,
        W_Addr_A => grp_obj_detector_FCL_fu_223_W_Addr_A,
        W_EN_A => grp_obj_detector_FCL_fu_223_W_EN_A,
        W_WEN_A => grp_obj_detector_FCL_fu_223_W_WEN_A,
        W_Din_A => grp_obj_detector_FCL_fu_223_W_Din_A,
        W_Dout_A => grp_obj_detector_FCL_fu_223_W_Dout_A,
        W_offset => grp_obj_detector_FCL_fu_223_W_offset,
        ap_return => grp_obj_detector_FCL_fu_223_ap_return);

    grp_obj_detector_ReLU_fu_234 : component obj_detector_ReLU
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_obj_detector_ReLU_fu_234_ap_start,
        ap_done => grp_obj_detector_ReLU_fu_234_ap_done,
        ap_idle => grp_obj_detector_ReLU_fu_234_ap_idle,
        ap_ready => grp_obj_detector_ReLU_fu_234_ap_ready,
        inp_address0 => grp_obj_detector_ReLU_fu_234_inp_address0,
        inp_ce0 => grp_obj_detector_ReLU_fu_234_inp_ce0,
        inp_q0 => grp_obj_detector_ReLU_fu_234_inp_q0,
        tmp_2 => grp_obj_detector_ReLU_fu_234_tmp_2,
        out_r_address0 => grp_obj_detector_ReLU_fu_234_out_r_address0,
        out_r_ce0 => grp_obj_detector_ReLU_fu_234_out_r_ce0,
        out_r_we0 => grp_obj_detector_ReLU_fu_234_out_r_we0,
        out_r_d0 => grp_obj_detector_ReLU_fu_234_out_r_d0,
        tmp_21 => grp_obj_detector_ReLU_fu_234_tmp_21);





    -- the current state (ap_CS_fsm) of the state machine. --
    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    -- grp_obj_detector_FCL_fu_223_ap_start_ap_start_reg assign process. --
    grp_obj_detector_FCL_fu_223_ap_start_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_obj_detector_FCL_fu_223_ap_start_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10))) then 
                    grp_obj_detector_FCL_fu_223_ap_start_ap_start_reg <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_obj_detector_FCL_fu_223_ap_ready)) then 
                    grp_obj_detector_FCL_fu_223_ap_start_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- grp_obj_detector_ReLU_fu_234_ap_start_ap_start_reg assign process. --
    grp_obj_detector_ReLU_fu_234_ap_start_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_obj_detector_ReLU_fu_234_ap_start_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (ap_const_lv1_0 = exitcond1_fu_256_p2))) then 
                    grp_obj_detector_ReLU_fu_234_ap_start_ap_start_reg <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_obj_detector_ReLU_fu_234_ap_ready)) then 
                    grp_obj_detector_ReLU_fu_234_ap_start_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- grp_obj_detector_convolve_fu_164_ap_start_ap_start_reg assign process. --
    grp_obj_detector_convolve_fu_164_ap_start_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_obj_detector_convolve_fu_164_ap_start_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond2_fu_244_p2 = ap_const_lv1_0))) then 
                    grp_obj_detector_convolve_fu_164_ap_start_ap_start_reg <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_obj_detector_convolve_fu_164_ap_ready)) then 
                    grp_obj_detector_convolve_fu_164_ap_start_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- grp_obj_detector_flatten_fu_185_ap_start_ap_start_reg assign process. --
    grp_obj_detector_flatten_fu_185_ap_start_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_obj_detector_flatten_fu_185_ap_start_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) and not((ap_const_lv1_0 = exitcond_fu_268_p2)))) then 
                    grp_obj_detector_flatten_fu_185_ap_start_ap_start_reg <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_obj_detector_flatten_fu_185_ap_ready)) then 
                    grp_obj_detector_flatten_fu_185_ap_start_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- grp_obj_detector_maxpool_fu_202_ap_start_ap_start_reg assign process. --
    grp_obj_detector_maxpool_fu_202_ap_start_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_obj_detector_maxpool_fu_202_ap_start_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) and (ap_const_lv1_0 = exitcond_fu_268_p2))) then 
                    grp_obj_detector_maxpool_fu_202_ap_start_ap_start_reg <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_obj_detector_maxpool_fu_202_ap_ready)) then 
                    grp_obj_detector_maxpool_fu_202_ap_start_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- grp_obj_detector_softmax_fu_177_ap_start_ap_start_reg assign process. --
    grp_obj_detector_softmax_fu_177_ap_start_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_obj_detector_softmax_fu_177_ap_start_ap_start_reg <= ap_const_logic_0;
            else
                if ((not((ap_const_logic_0 = grp_obj_detector_FCL_fu_223_ap_done)) and (ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11))) then 
                    grp_obj_detector_softmax_fu_177_ap_start_ap_start_reg <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_obj_detector_softmax_fu_177_ap_ready)) then 
                    grp_obj_detector_softmax_fu_177_ap_start_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- i1_reg_140 assign process. --
    i1_reg_140_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((exitcond2_fu_244_p2 = ap_const_lv1_0)))) then 
                i1_reg_140 <= ap_const_lv3_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) and not((ap_const_logic_0 = grp_obj_detector_ReLU_fu_234_ap_done)))) then 
                i1_reg_140 <= i_2_reg_291;
            end if; 
        end if;
    end process;

    -- i2_reg_152 assign process. --
    i2_reg_152_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and not((ap_const_lv1_0 = exitcond1_fu_256_p2)))) then 
                i2_reg_152 <= ap_const_lv3_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and not((ap_const_logic_0 = grp_obj_detector_maxpool_fu_202_ap_done)))) then 
                i2_reg_152 <= i_3_reg_299;
            end if; 
        end if;
    end process;

    -- i_reg_128 assign process. --
    i_reg_128_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not((ap_const_logic_0 = grp_obj_detector_convolve_fu_164_ap_done)))) then 
                i_reg_128 <= i_1_reg_283;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                i_reg_128 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9) and not((ap_const_logic_0 = grp_obj_detector_FCL_fu_223_ap_done)))) then
                cost_0_reg_304 <= grp_obj_detector_FCL_fu_223_ap_return;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_const_logic_0 = grp_obj_detector_FCL_fu_223_ap_done)) and (ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11))) then
                cost_1_reg_309 <= grp_obj_detector_FCL_fu_223_ap_return;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then
                i_1_reg_283 <= i_1_fu_250_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then
                i_2_reg_291 <= i_2_fu_262_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then
                i_3_reg_299 <= i_3_fu_274_p2;
            end if;
        end if;
    end process;

    -- the next state (ap_NS_fsm) of the state machine. --
    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, grp_obj_detector_FCL_fu_223_ap_done, grp_obj_detector_convolve_fu_164_ap_done, grp_obj_detector_softmax_fu_177_ap_done, grp_obj_detector_flatten_fu_185_ap_done, grp_obj_detector_maxpool_fu_202_ap_done, grp_obj_detector_ReLU_fu_234_ap_done, exitcond2_fu_244_p2, exitcond1_fu_256_p2, exitcond_fu_268_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                if (not((exitcond2_fu_244_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_st4_fsm_3;
                else
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                end if;
            when ap_ST_st3_fsm_2 => 
                if (not((ap_const_logic_0 = grp_obj_detector_convolve_fu_164_ap_done))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                end if;
            when ap_ST_st4_fsm_3 => 
                if (not((ap_const_lv1_0 = exitcond1_fu_256_p2))) then
                    ap_NS_fsm <= ap_ST_st6_fsm_5;
                else
                    ap_NS_fsm <= ap_ST_st5_fsm_4;
                end if;
            when ap_ST_st5_fsm_4 => 
                if (not((ap_const_logic_0 = grp_obj_detector_ReLU_fu_234_ap_done))) then
                    ap_NS_fsm <= ap_ST_st4_fsm_3;
                else
                    ap_NS_fsm <= ap_ST_st5_fsm_4;
                end if;
            when ap_ST_st6_fsm_5 => 
                if (not((ap_const_lv1_0 = exitcond_fu_268_p2))) then
                    ap_NS_fsm <= ap_ST_st8_fsm_7;
                else
                    ap_NS_fsm <= ap_ST_st7_fsm_6;
                end if;
            when ap_ST_st7_fsm_6 => 
                if (not((ap_const_logic_0 = grp_obj_detector_maxpool_fu_202_ap_done))) then
                    ap_NS_fsm <= ap_ST_st6_fsm_5;
                else
                    ap_NS_fsm <= ap_ST_st7_fsm_6;
                end if;
            when ap_ST_st8_fsm_7 => 
                if (not((ap_const_logic_0 = grp_obj_detector_flatten_fu_185_ap_done))) then
                    ap_NS_fsm <= ap_ST_st9_fsm_8;
                else
                    ap_NS_fsm <= ap_ST_st8_fsm_7;
                end if;
            when ap_ST_st9_fsm_8 => 
                ap_NS_fsm <= ap_ST_st10_fsm_9;
            when ap_ST_st10_fsm_9 => 
                if (not((ap_const_logic_0 = grp_obj_detector_FCL_fu_223_ap_done))) then
                    ap_NS_fsm <= ap_ST_st11_fsm_10;
                else
                    ap_NS_fsm <= ap_ST_st10_fsm_9;
                end if;
            when ap_ST_st11_fsm_10 => 
                ap_NS_fsm <= ap_ST_st12_fsm_11;
            when ap_ST_st12_fsm_11 => 
                if (not((ap_const_logic_0 = grp_obj_detector_FCL_fu_223_ap_done))) then
                    ap_NS_fsm <= ap_ST_st13_fsm_12;
                else
                    ap_NS_fsm <= ap_ST_st12_fsm_11;
                end if;
            when ap_ST_st13_fsm_12 => 
                if (not((ap_const_logic_0 = grp_obj_detector_softmax_fu_177_ap_done))) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                else
                    ap_NS_fsm <= ap_ST_st13_fsm_12;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXX";
        end case;
    end process;
    A_Addr_A <= grp_obj_detector_convolve_fu_164_A_Addr_A;
    A_Clk_A <= ap_clk;
    A_Din_A <= ap_const_lv32_0;

    -- A_EN_A assign process. --
    A_EN_A_assign_proc : process(grp_obj_detector_convolve_fu_164_A_EN_A, ap_sig_cseq_ST_st3_fsm_2)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            A_EN_A <= grp_obj_detector_convolve_fu_164_A_EN_A;
        else 
            A_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    A_Rst_A <= ap_rst_n_inv;
    A_WEN_A <= ap_const_lv4_0;
    W0_Addr_A <= grp_obj_detector_convolve_fu_164_B_Addr_A;
    W0_Clk_A <= ap_clk;
    W0_Din_A <= ap_const_lv32_0;

    -- W0_EN_A assign process. --
    W0_EN_A_assign_proc : process(grp_obj_detector_convolve_fu_164_B_EN_A, ap_sig_cseq_ST_st3_fsm_2)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            W0_EN_A <= grp_obj_detector_convolve_fu_164_B_EN_A;
        else 
            W0_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    W0_Rst_A <= ap_rst_n_inv;
    W0_WEN_A <= ap_const_lv4_0;
    W1_Addr_A <= grp_obj_detector_FCL_fu_223_W_Addr_A;
    W1_Clk_A <= ap_clk;
    W1_Din_A <= ap_const_lv32_0;

    -- W1_EN_A assign process. --
    W1_EN_A_assign_proc : process(ap_sig_cseq_ST_st10_fsm_9, ap_sig_cseq_ST_st12_fsm_11, grp_obj_detector_FCL_fu_223_W_EN_A)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9) or (ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11))) then 
            W1_EN_A <= grp_obj_detector_FCL_fu_223_W_EN_A;
        else 
            W1_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    W1_Rst_A <= ap_rst_n_inv;
    W1_WEN_A <= ap_const_lv4_0;

    -- ap_done assign process. --
    ap_done_assign_proc : process(grp_obj_detector_softmax_fu_177_ap_done, ap_sig_cseq_ST_st13_fsm_12)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12) and not((ap_const_logic_0 = grp_obj_detector_softmax_fu_177_ap_done)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_idle assign process. --
    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if ((not((ap_const_logic_1 = ap_start)) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_ready assign process. --
    ap_ready_assign_proc : process(grp_obj_detector_softmax_fu_177_ap_done, ap_sig_cseq_ST_st13_fsm_12)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12) and not((ap_const_logic_0 = grp_obj_detector_softmax_fu_177_ap_done)))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_rst_n_inv assign process. --
    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    -- ap_sig_bdd_119 assign process. --
    ap_sig_bdd_119_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_119 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    -- ap_sig_bdd_128 assign process. --
    ap_sig_bdd_128_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_128 <= (ap_const_lv1_1 = ap_CS_fsm(3 downto 3));
    end process;


    -- ap_sig_bdd_137 assign process. --
    ap_sig_bdd_137_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_137 <= (ap_const_lv1_1 = ap_CS_fsm(5 downto 5));
    end process;


    -- ap_sig_bdd_146 assign process. --
    ap_sig_bdd_146_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_146 <= (ap_const_lv1_1 = ap_CS_fsm(9 downto 9));
    end process;


    -- ap_sig_bdd_158 assign process. --
    ap_sig_bdd_158_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_158 <= (ap_const_lv1_1 = ap_CS_fsm(11 downto 11));
    end process;


    -- ap_sig_bdd_54 assign process. --
    ap_sig_bdd_54_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_54 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    -- ap_sig_bdd_566 assign process. --
    ap_sig_bdd_566_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_566 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    -- ap_sig_bdd_578 assign process. --
    ap_sig_bdd_578_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_578 <= (ap_const_lv1_1 = ap_CS_fsm(4 downto 4));
    end process;


    -- ap_sig_bdd_595 assign process. --
    ap_sig_bdd_595_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_595 <= (ap_const_lv1_1 = ap_CS_fsm(6 downto 6));
    end process;


    -- ap_sig_bdd_614 assign process. --
    ap_sig_bdd_614_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_614 <= (ap_const_lv1_1 = ap_CS_fsm(12 downto 12));
    end process;


    -- ap_sig_bdd_627 assign process. --
    ap_sig_bdd_627_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_627 <= (ap_const_lv1_1 = ap_CS_fsm(7 downto 7));
    end process;


    -- ap_sig_bdd_639 assign process. --
    ap_sig_bdd_639_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_639 <= (ap_const_lv1_1 = ap_CS_fsm(8 downto 8));
    end process;


    -- ap_sig_bdd_646 assign process. --
    ap_sig_bdd_646_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_646 <= (ap_const_lv1_1 = ap_CS_fsm(10 downto 10));
    end process;


    -- ap_sig_cseq_ST_st10_fsm_9 assign process. --
    ap_sig_cseq_ST_st10_fsm_9_assign_proc : process(ap_sig_bdd_146)
    begin
        if (ap_sig_bdd_146) then 
            ap_sig_cseq_ST_st10_fsm_9 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st10_fsm_9 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st11_fsm_10 assign process. --
    ap_sig_cseq_ST_st11_fsm_10_assign_proc : process(ap_sig_bdd_646)
    begin
        if (ap_sig_bdd_646) then 
            ap_sig_cseq_ST_st11_fsm_10 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st11_fsm_10 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st12_fsm_11 assign process. --
    ap_sig_cseq_ST_st12_fsm_11_assign_proc : process(ap_sig_bdd_158)
    begin
        if (ap_sig_bdd_158) then 
            ap_sig_cseq_ST_st12_fsm_11 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st12_fsm_11 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st13_fsm_12 assign process. --
    ap_sig_cseq_ST_st13_fsm_12_assign_proc : process(ap_sig_bdd_614)
    begin
        if (ap_sig_bdd_614) then 
            ap_sig_cseq_ST_st13_fsm_12 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st13_fsm_12 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st1_fsm_0 assign process. --
    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_bdd_54)
    begin
        if (ap_sig_bdd_54) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st2_fsm_1 assign process. --
    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_bdd_119)
    begin
        if (ap_sig_bdd_119) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st3_fsm_2 assign process. --
    ap_sig_cseq_ST_st3_fsm_2_assign_proc : process(ap_sig_bdd_566)
    begin
        if (ap_sig_bdd_566) then 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st4_fsm_3 assign process. --
    ap_sig_cseq_ST_st4_fsm_3_assign_proc : process(ap_sig_bdd_128)
    begin
        if (ap_sig_bdd_128) then 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st5_fsm_4 assign process. --
    ap_sig_cseq_ST_st5_fsm_4_assign_proc : process(ap_sig_bdd_578)
    begin
        if (ap_sig_bdd_578) then 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st6_fsm_5 assign process. --
    ap_sig_cseq_ST_st6_fsm_5_assign_proc : process(ap_sig_bdd_137)
    begin
        if (ap_sig_bdd_137) then 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st7_fsm_6 assign process. --
    ap_sig_cseq_ST_st7_fsm_6_assign_proc : process(ap_sig_bdd_595)
    begin
        if (ap_sig_bdd_595) then 
            ap_sig_cseq_ST_st7_fsm_6 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st7_fsm_6 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st8_fsm_7 assign process. --
    ap_sig_cseq_ST_st8_fsm_7_assign_proc : process(ap_sig_bdd_627)
    begin
        if (ap_sig_bdd_627) then 
            ap_sig_cseq_ST_st8_fsm_7 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st8_fsm_7 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st9_fsm_8 assign process. --
    ap_sig_cseq_ST_st9_fsm_8_assign_proc : process(ap_sig_bdd_639)
    begin
        if (ap_sig_bdd_639) then 
            ap_sig_cseq_ST_st9_fsm_8 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st9_fsm_8 <= ap_const_logic_0;
        end if; 
    end process;

    exitcond1_fu_256_p2 <= "1" when (i1_reg_140 = ap_const_lv3_6) else "0";
    exitcond2_fu_244_p2 <= "1" when (i_reg_128 = ap_const_lv3_6) else "0";
    exitcond_fu_268_p2 <= "1" when (i2_reg_152 = ap_const_lv3_6) else "0";
    grp_obj_detector_FCL_fu_223_W_Dout_A <= W1_Dout_A;

    -- grp_obj_detector_FCL_fu_223_W_offset assign process. --
    grp_obj_detector_FCL_fu_223_W_offset_assign_proc : process(ap_sig_cseq_ST_st10_fsm_9, ap_sig_cseq_ST_st12_fsm_11)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
            grp_obj_detector_FCL_fu_223_W_offset <= ap_const_lv1_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then 
            grp_obj_detector_FCL_fu_223_W_offset <= ap_const_lv1_0;
        else 
            grp_obj_detector_FCL_fu_223_W_offset <= "X";
        end if; 
    end process;

    grp_obj_detector_FCL_fu_223_ap_start <= grp_obj_detector_FCL_fu_223_ap_start_ap_start_reg;
    grp_obj_detector_FCL_fu_223_inp_q0 <= s3_q0;
    grp_obj_detector_ReLU_fu_234_ap_start <= grp_obj_detector_ReLU_fu_234_ap_start_ap_start_reg;
    grp_obj_detector_ReLU_fu_234_inp_q0 <= s0_q0;
    grp_obj_detector_ReLU_fu_234_tmp_2 <= i1_reg_140;
    grp_obj_detector_ReLU_fu_234_tmp_21 <= i1_reg_140;
    grp_obj_detector_convolve_fu_164_A_Dout_A <= A_Dout_A;
    grp_obj_detector_convolve_fu_164_B_Dout_A <= W0_Dout_A;
    grp_obj_detector_convolve_fu_164_ap_start <= grp_obj_detector_convolve_fu_164_ap_start_ap_start_reg;
    grp_obj_detector_convolve_fu_164_tmp <= i_reg_128;
    grp_obj_detector_convolve_fu_164_tmp1 <= i_reg_128;
    grp_obj_detector_flatten_fu_185_ap_start <= grp_obj_detector_flatten_fu_185_ap_start_ap_start_reg;
    grp_obj_detector_flatten_fu_185_inp_0_q0 <= s2_0_q0;
    grp_obj_detector_flatten_fu_185_inp_0_q1 <= s2_0_q1;
    grp_obj_detector_flatten_fu_185_inp_10_q0 <= s2_10_q0;
    grp_obj_detector_flatten_fu_185_inp_10_q1 <= s2_10_q1;
    grp_obj_detector_flatten_fu_185_inp_11_q0 <= s2_11_q0;
    grp_obj_detector_flatten_fu_185_inp_11_q1 <= s2_11_q1;
    grp_obj_detector_flatten_fu_185_inp_1_q0 <= s2_1_q0;
    grp_obj_detector_flatten_fu_185_inp_1_q1 <= s2_1_q1;
    grp_obj_detector_flatten_fu_185_inp_2_q0 <= s2_2_q0;
    grp_obj_detector_flatten_fu_185_inp_2_q1 <= s2_2_q1;
    grp_obj_detector_flatten_fu_185_inp_3_q0 <= s2_3_q0;
    grp_obj_detector_flatten_fu_185_inp_3_q1 <= s2_3_q1;
    grp_obj_detector_flatten_fu_185_inp_4_q0 <= s2_4_q0;
    grp_obj_detector_flatten_fu_185_inp_4_q1 <= s2_4_q1;
    grp_obj_detector_flatten_fu_185_inp_5_q0 <= s2_5_q0;
    grp_obj_detector_flatten_fu_185_inp_5_q1 <= s2_5_q1;
    grp_obj_detector_flatten_fu_185_inp_6_q0 <= s2_6_q0;
    grp_obj_detector_flatten_fu_185_inp_6_q1 <= s2_6_q1;
    grp_obj_detector_flatten_fu_185_inp_7_q0 <= s2_7_q0;
    grp_obj_detector_flatten_fu_185_inp_7_q1 <= s2_7_q1;
    grp_obj_detector_flatten_fu_185_inp_8_q0 <= s2_8_q0;
    grp_obj_detector_flatten_fu_185_inp_8_q1 <= s2_8_q1;
    grp_obj_detector_flatten_fu_185_inp_9_q0 <= s2_9_q0;
    grp_obj_detector_flatten_fu_185_inp_9_q1 <= s2_9_q1;
    grp_obj_detector_maxpool_fu_202_ap_start <= grp_obj_detector_maxpool_fu_202_ap_start_ap_start_reg;
    grp_obj_detector_maxpool_fu_202_inp_q0 <= s1_q0;
    grp_obj_detector_maxpool_fu_202_inp_q1 <= s1_q1;
    grp_obj_detector_maxpool_fu_202_tmp_6 <= i2_reg_152;
    grp_obj_detector_maxpool_fu_202_tmp_61 <= i2_reg_152;
    grp_obj_detector_softmax_fu_177_ap_start <= grp_obj_detector_softmax_fu_177_ap_start_ap_start_reg;
    grp_obj_detector_softmax_fu_177_inp_0_read <= cost_0_reg_304;
    grp_obj_detector_softmax_fu_177_inp_1_read <= cost_1_reg_309;
    grp_obj_detector_softmax_fu_177_out_r_Dout_A <= ap_const_lv32_0;
    i_1_fu_250_p2 <= std_logic_vector(unsigned(i_reg_128) + unsigned(ap_const_lv3_1));
    i_2_fu_262_p2 <= std_logic_vector(unsigned(i1_reg_140) + unsigned(ap_const_lv3_1));
    i_3_fu_274_p2 <= std_logic_vector(unsigned(i2_reg_152) + unsigned(ap_const_lv3_1));
    obj_detector_control_s_axi_U_ap_dummy_ce <= ap_const_logic_1;
    res_Addr_A <= grp_obj_detector_softmax_fu_177_out_r_Addr_A;
    res_Clk_A <= ap_clk;
    res_Din_A <= grp_obj_detector_softmax_fu_177_out_r_Din_A;

    -- res_EN_A assign process. --
    res_EN_A_assign_proc : process(grp_obj_detector_softmax_fu_177_out_r_EN_A, ap_sig_cseq_ST_st13_fsm_12)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12)) then 
            res_EN_A <= grp_obj_detector_softmax_fu_177_out_r_EN_A;
        else 
            res_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    res_Rst_A <= ap_rst_n_inv;

    -- res_WEN_A assign process. --
    res_WEN_A_assign_proc : process(grp_obj_detector_softmax_fu_177_out_r_WEN_A, ap_sig_cseq_ST_st13_fsm_12)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12)) then 
            res_WEN_A <= grp_obj_detector_softmax_fu_177_out_r_WEN_A;
        else 
            res_WEN_A <= (0=>ap_const_logic_0, others=>'-');
        end if; 
    end process;


    -- s0_address0 assign process. --
    s0_address0_assign_proc : process(grp_obj_detector_convolve_fu_164_conv_address0, grp_obj_detector_ReLU_fu_234_inp_address0, ap_sig_cseq_ST_st3_fsm_2, ap_sig_cseq_ST_st5_fsm_4)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
            s0_address0 <= grp_obj_detector_ReLU_fu_234_inp_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            s0_address0 <= grp_obj_detector_convolve_fu_164_conv_address0;
        else 
            s0_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    -- s0_ce0 assign process. --
    s0_ce0_assign_proc : process(grp_obj_detector_convolve_fu_164_conv_ce0, grp_obj_detector_ReLU_fu_234_inp_ce0, ap_sig_cseq_ST_st3_fsm_2, ap_sig_cseq_ST_st5_fsm_4)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
            s0_ce0 <= grp_obj_detector_ReLU_fu_234_inp_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            s0_ce0 <= grp_obj_detector_convolve_fu_164_conv_ce0;
        else 
            s0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    s0_d0 <= grp_obj_detector_convolve_fu_164_conv_d0;

    -- s0_we0 assign process. --
    s0_we0_assign_proc : process(grp_obj_detector_convolve_fu_164_conv_we0, ap_sig_cseq_ST_st3_fsm_2)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            s0_we0 <= grp_obj_detector_convolve_fu_164_conv_we0;
        else 
            s0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- s1_address0 assign process. --
    s1_address0_assign_proc : process(grp_obj_detector_maxpool_fu_202_inp_address0, grp_obj_detector_ReLU_fu_234_out_r_address0, ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st7_fsm_6)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
            s1_address0 <= grp_obj_detector_ReLU_fu_234_out_r_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            s1_address0 <= grp_obj_detector_maxpool_fu_202_inp_address0;
        else 
            s1_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;

    s1_address1 <= grp_obj_detector_maxpool_fu_202_inp_address1;

    -- s1_ce0 assign process. --
    s1_ce0_assign_proc : process(grp_obj_detector_maxpool_fu_202_inp_ce0, grp_obj_detector_ReLU_fu_234_out_r_ce0, ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st7_fsm_6)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
            s1_ce0 <= grp_obj_detector_ReLU_fu_234_out_r_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            s1_ce0 <= grp_obj_detector_maxpool_fu_202_inp_ce0;
        else 
            s1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- s1_ce1 assign process. --
    s1_ce1_assign_proc : process(grp_obj_detector_maxpool_fu_202_inp_ce1, ap_sig_cseq_ST_st7_fsm_6)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            s1_ce1 <= grp_obj_detector_maxpool_fu_202_inp_ce1;
        else 
            s1_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    s1_d0 <= grp_obj_detector_ReLU_fu_234_out_r_d0;

    -- s1_we0 assign process. --
    s1_we0_assign_proc : process(grp_obj_detector_ReLU_fu_234_out_r_we0, ap_sig_cseq_ST_st5_fsm_4)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
            s1_we0 <= grp_obj_detector_ReLU_fu_234_out_r_we0;
        else 
            s1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- s2_0_address0 assign process. --
    s2_0_address0_assign_proc : process(grp_obj_detector_flatten_fu_185_inp_0_address0, grp_obj_detector_maxpool_fu_202_out_0_address0, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st8_fsm_7)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            s2_0_address0 <= grp_obj_detector_maxpool_fu_202_out_0_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            s2_0_address0 <= grp_obj_detector_flatten_fu_185_inp_0_address0;
        else 
            s2_0_address0 <= "XXXXXXX";
        end if; 
    end process;

    s2_0_address1 <= grp_obj_detector_flatten_fu_185_inp_0_address1;

    -- s2_0_ce0 assign process. --
    s2_0_ce0_assign_proc : process(grp_obj_detector_flatten_fu_185_inp_0_ce0, grp_obj_detector_maxpool_fu_202_out_0_ce0, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st8_fsm_7)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            s2_0_ce0 <= grp_obj_detector_maxpool_fu_202_out_0_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            s2_0_ce0 <= grp_obj_detector_flatten_fu_185_inp_0_ce0;
        else 
            s2_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- s2_0_ce1 assign process. --
    s2_0_ce1_assign_proc : process(grp_obj_detector_flatten_fu_185_inp_0_ce1, ap_sig_cseq_ST_st8_fsm_7)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            s2_0_ce1 <= grp_obj_detector_flatten_fu_185_inp_0_ce1;
        else 
            s2_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    s2_0_d0 <= grp_obj_detector_maxpool_fu_202_out_0_d0;

    -- s2_0_we0 assign process. --
    s2_0_we0_assign_proc : process(grp_obj_detector_maxpool_fu_202_out_0_we0, ap_sig_cseq_ST_st7_fsm_6)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            s2_0_we0 <= grp_obj_detector_maxpool_fu_202_out_0_we0;
        else 
            s2_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- s2_10_address0 assign process. --
    s2_10_address0_assign_proc : process(grp_obj_detector_flatten_fu_185_inp_10_address0, grp_obj_detector_maxpool_fu_202_out_10_address0, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st8_fsm_7)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            s2_10_address0 <= grp_obj_detector_maxpool_fu_202_out_10_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            s2_10_address0 <= grp_obj_detector_flatten_fu_185_inp_10_address0;
        else 
            s2_10_address0 <= "XXXXXXX";
        end if; 
    end process;

    s2_10_address1 <= grp_obj_detector_flatten_fu_185_inp_10_address1;

    -- s2_10_ce0 assign process. --
    s2_10_ce0_assign_proc : process(grp_obj_detector_flatten_fu_185_inp_10_ce0, grp_obj_detector_maxpool_fu_202_out_10_ce0, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st8_fsm_7)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            s2_10_ce0 <= grp_obj_detector_maxpool_fu_202_out_10_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            s2_10_ce0 <= grp_obj_detector_flatten_fu_185_inp_10_ce0;
        else 
            s2_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- s2_10_ce1 assign process. --
    s2_10_ce1_assign_proc : process(grp_obj_detector_flatten_fu_185_inp_10_ce1, ap_sig_cseq_ST_st8_fsm_7)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            s2_10_ce1 <= grp_obj_detector_flatten_fu_185_inp_10_ce1;
        else 
            s2_10_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    s2_10_d0 <= grp_obj_detector_maxpool_fu_202_out_10_d0;

    -- s2_10_we0 assign process. --
    s2_10_we0_assign_proc : process(grp_obj_detector_maxpool_fu_202_out_10_we0, ap_sig_cseq_ST_st7_fsm_6)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            s2_10_we0 <= grp_obj_detector_maxpool_fu_202_out_10_we0;
        else 
            s2_10_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- s2_11_address0 assign process. --
    s2_11_address0_assign_proc : process(grp_obj_detector_flatten_fu_185_inp_11_address0, grp_obj_detector_maxpool_fu_202_out_11_address0, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st8_fsm_7)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            s2_11_address0 <= grp_obj_detector_maxpool_fu_202_out_11_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            s2_11_address0 <= grp_obj_detector_flatten_fu_185_inp_11_address0;
        else 
            s2_11_address0 <= "XXXXXXX";
        end if; 
    end process;

    s2_11_address1 <= grp_obj_detector_flatten_fu_185_inp_11_address1;

    -- s2_11_ce0 assign process. --
    s2_11_ce0_assign_proc : process(grp_obj_detector_flatten_fu_185_inp_11_ce0, grp_obj_detector_maxpool_fu_202_out_11_ce0, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st8_fsm_7)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            s2_11_ce0 <= grp_obj_detector_maxpool_fu_202_out_11_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            s2_11_ce0 <= grp_obj_detector_flatten_fu_185_inp_11_ce0;
        else 
            s2_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- s2_11_ce1 assign process. --
    s2_11_ce1_assign_proc : process(grp_obj_detector_flatten_fu_185_inp_11_ce1, ap_sig_cseq_ST_st8_fsm_7)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            s2_11_ce1 <= grp_obj_detector_flatten_fu_185_inp_11_ce1;
        else 
            s2_11_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    s2_11_d0 <= grp_obj_detector_maxpool_fu_202_out_11_d0;

    -- s2_11_we0 assign process. --
    s2_11_we0_assign_proc : process(grp_obj_detector_maxpool_fu_202_out_11_we0, ap_sig_cseq_ST_st7_fsm_6)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            s2_11_we0 <= grp_obj_detector_maxpool_fu_202_out_11_we0;
        else 
            s2_11_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- s2_1_address0 assign process. --
    s2_1_address0_assign_proc : process(grp_obj_detector_flatten_fu_185_inp_1_address0, grp_obj_detector_maxpool_fu_202_out_1_address0, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st8_fsm_7)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            s2_1_address0 <= grp_obj_detector_maxpool_fu_202_out_1_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            s2_1_address0 <= grp_obj_detector_flatten_fu_185_inp_1_address0;
        else 
            s2_1_address0 <= "XXXXXXX";
        end if; 
    end process;

    s2_1_address1 <= grp_obj_detector_flatten_fu_185_inp_1_address1;

    -- s2_1_ce0 assign process. --
    s2_1_ce0_assign_proc : process(grp_obj_detector_flatten_fu_185_inp_1_ce0, grp_obj_detector_maxpool_fu_202_out_1_ce0, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st8_fsm_7)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            s2_1_ce0 <= grp_obj_detector_maxpool_fu_202_out_1_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            s2_1_ce0 <= grp_obj_detector_flatten_fu_185_inp_1_ce0;
        else 
            s2_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- s2_1_ce1 assign process. --
    s2_1_ce1_assign_proc : process(grp_obj_detector_flatten_fu_185_inp_1_ce1, ap_sig_cseq_ST_st8_fsm_7)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            s2_1_ce1 <= grp_obj_detector_flatten_fu_185_inp_1_ce1;
        else 
            s2_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    s2_1_d0 <= grp_obj_detector_maxpool_fu_202_out_1_d0;

    -- s2_1_we0 assign process. --
    s2_1_we0_assign_proc : process(grp_obj_detector_maxpool_fu_202_out_1_we0, ap_sig_cseq_ST_st7_fsm_6)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            s2_1_we0 <= grp_obj_detector_maxpool_fu_202_out_1_we0;
        else 
            s2_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- s2_2_address0 assign process. --
    s2_2_address0_assign_proc : process(grp_obj_detector_flatten_fu_185_inp_2_address0, grp_obj_detector_maxpool_fu_202_out_2_address0, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st8_fsm_7)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            s2_2_address0 <= grp_obj_detector_maxpool_fu_202_out_2_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            s2_2_address0 <= grp_obj_detector_flatten_fu_185_inp_2_address0;
        else 
            s2_2_address0 <= "XXXXXXX";
        end if; 
    end process;

    s2_2_address1 <= grp_obj_detector_flatten_fu_185_inp_2_address1;

    -- s2_2_ce0 assign process. --
    s2_2_ce0_assign_proc : process(grp_obj_detector_flatten_fu_185_inp_2_ce0, grp_obj_detector_maxpool_fu_202_out_2_ce0, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st8_fsm_7)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            s2_2_ce0 <= grp_obj_detector_maxpool_fu_202_out_2_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            s2_2_ce0 <= grp_obj_detector_flatten_fu_185_inp_2_ce0;
        else 
            s2_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- s2_2_ce1 assign process. --
    s2_2_ce1_assign_proc : process(grp_obj_detector_flatten_fu_185_inp_2_ce1, ap_sig_cseq_ST_st8_fsm_7)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            s2_2_ce1 <= grp_obj_detector_flatten_fu_185_inp_2_ce1;
        else 
            s2_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    s2_2_d0 <= grp_obj_detector_maxpool_fu_202_out_2_d0;

    -- s2_2_we0 assign process. --
    s2_2_we0_assign_proc : process(grp_obj_detector_maxpool_fu_202_out_2_we0, ap_sig_cseq_ST_st7_fsm_6)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            s2_2_we0 <= grp_obj_detector_maxpool_fu_202_out_2_we0;
        else 
            s2_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- s2_3_address0 assign process. --
    s2_3_address0_assign_proc : process(grp_obj_detector_flatten_fu_185_inp_3_address0, grp_obj_detector_maxpool_fu_202_out_3_address0, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st8_fsm_7)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            s2_3_address0 <= grp_obj_detector_maxpool_fu_202_out_3_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            s2_3_address0 <= grp_obj_detector_flatten_fu_185_inp_3_address0;
        else 
            s2_3_address0 <= "XXXXXXX";
        end if; 
    end process;

    s2_3_address1 <= grp_obj_detector_flatten_fu_185_inp_3_address1;

    -- s2_3_ce0 assign process. --
    s2_3_ce0_assign_proc : process(grp_obj_detector_flatten_fu_185_inp_3_ce0, grp_obj_detector_maxpool_fu_202_out_3_ce0, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st8_fsm_7)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            s2_3_ce0 <= grp_obj_detector_maxpool_fu_202_out_3_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            s2_3_ce0 <= grp_obj_detector_flatten_fu_185_inp_3_ce0;
        else 
            s2_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- s2_3_ce1 assign process. --
    s2_3_ce1_assign_proc : process(grp_obj_detector_flatten_fu_185_inp_3_ce1, ap_sig_cseq_ST_st8_fsm_7)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            s2_3_ce1 <= grp_obj_detector_flatten_fu_185_inp_3_ce1;
        else 
            s2_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    s2_3_d0 <= grp_obj_detector_maxpool_fu_202_out_3_d0;

    -- s2_3_we0 assign process. --
    s2_3_we0_assign_proc : process(grp_obj_detector_maxpool_fu_202_out_3_we0, ap_sig_cseq_ST_st7_fsm_6)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            s2_3_we0 <= grp_obj_detector_maxpool_fu_202_out_3_we0;
        else 
            s2_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- s2_4_address0 assign process. --
    s2_4_address0_assign_proc : process(grp_obj_detector_flatten_fu_185_inp_4_address0, grp_obj_detector_maxpool_fu_202_out_4_address0, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st8_fsm_7)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            s2_4_address0 <= grp_obj_detector_maxpool_fu_202_out_4_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            s2_4_address0 <= grp_obj_detector_flatten_fu_185_inp_4_address0;
        else 
            s2_4_address0 <= "XXXXXXX";
        end if; 
    end process;

    s2_4_address1 <= grp_obj_detector_flatten_fu_185_inp_4_address1;

    -- s2_4_ce0 assign process. --
    s2_4_ce0_assign_proc : process(grp_obj_detector_flatten_fu_185_inp_4_ce0, grp_obj_detector_maxpool_fu_202_out_4_ce0, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st8_fsm_7)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            s2_4_ce0 <= grp_obj_detector_maxpool_fu_202_out_4_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            s2_4_ce0 <= grp_obj_detector_flatten_fu_185_inp_4_ce0;
        else 
            s2_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- s2_4_ce1 assign process. --
    s2_4_ce1_assign_proc : process(grp_obj_detector_flatten_fu_185_inp_4_ce1, ap_sig_cseq_ST_st8_fsm_7)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            s2_4_ce1 <= grp_obj_detector_flatten_fu_185_inp_4_ce1;
        else 
            s2_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    s2_4_d0 <= grp_obj_detector_maxpool_fu_202_out_4_d0;

    -- s2_4_we0 assign process. --
    s2_4_we0_assign_proc : process(grp_obj_detector_maxpool_fu_202_out_4_we0, ap_sig_cseq_ST_st7_fsm_6)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            s2_4_we0 <= grp_obj_detector_maxpool_fu_202_out_4_we0;
        else 
            s2_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- s2_5_address0 assign process. --
    s2_5_address0_assign_proc : process(grp_obj_detector_flatten_fu_185_inp_5_address0, grp_obj_detector_maxpool_fu_202_out_5_address0, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st8_fsm_7)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            s2_5_address0 <= grp_obj_detector_maxpool_fu_202_out_5_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            s2_5_address0 <= grp_obj_detector_flatten_fu_185_inp_5_address0;
        else 
            s2_5_address0 <= "XXXXXXX";
        end if; 
    end process;

    s2_5_address1 <= grp_obj_detector_flatten_fu_185_inp_5_address1;

    -- s2_5_ce0 assign process. --
    s2_5_ce0_assign_proc : process(grp_obj_detector_flatten_fu_185_inp_5_ce0, grp_obj_detector_maxpool_fu_202_out_5_ce0, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st8_fsm_7)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            s2_5_ce0 <= grp_obj_detector_maxpool_fu_202_out_5_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            s2_5_ce0 <= grp_obj_detector_flatten_fu_185_inp_5_ce0;
        else 
            s2_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- s2_5_ce1 assign process. --
    s2_5_ce1_assign_proc : process(grp_obj_detector_flatten_fu_185_inp_5_ce1, ap_sig_cseq_ST_st8_fsm_7)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            s2_5_ce1 <= grp_obj_detector_flatten_fu_185_inp_5_ce1;
        else 
            s2_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    s2_5_d0 <= grp_obj_detector_maxpool_fu_202_out_5_d0;

    -- s2_5_we0 assign process. --
    s2_5_we0_assign_proc : process(grp_obj_detector_maxpool_fu_202_out_5_we0, ap_sig_cseq_ST_st7_fsm_6)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            s2_5_we0 <= grp_obj_detector_maxpool_fu_202_out_5_we0;
        else 
            s2_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- s2_6_address0 assign process. --
    s2_6_address0_assign_proc : process(grp_obj_detector_flatten_fu_185_inp_6_address0, grp_obj_detector_maxpool_fu_202_out_6_address0, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st8_fsm_7)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            s2_6_address0 <= grp_obj_detector_maxpool_fu_202_out_6_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            s2_6_address0 <= grp_obj_detector_flatten_fu_185_inp_6_address0;
        else 
            s2_6_address0 <= "XXXXXXX";
        end if; 
    end process;

    s2_6_address1 <= grp_obj_detector_flatten_fu_185_inp_6_address1;

    -- s2_6_ce0 assign process. --
    s2_6_ce0_assign_proc : process(grp_obj_detector_flatten_fu_185_inp_6_ce0, grp_obj_detector_maxpool_fu_202_out_6_ce0, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st8_fsm_7)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            s2_6_ce0 <= grp_obj_detector_maxpool_fu_202_out_6_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            s2_6_ce0 <= grp_obj_detector_flatten_fu_185_inp_6_ce0;
        else 
            s2_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- s2_6_ce1 assign process. --
    s2_6_ce1_assign_proc : process(grp_obj_detector_flatten_fu_185_inp_6_ce1, ap_sig_cseq_ST_st8_fsm_7)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            s2_6_ce1 <= grp_obj_detector_flatten_fu_185_inp_6_ce1;
        else 
            s2_6_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    s2_6_d0 <= grp_obj_detector_maxpool_fu_202_out_6_d0;

    -- s2_6_we0 assign process. --
    s2_6_we0_assign_proc : process(grp_obj_detector_maxpool_fu_202_out_6_we0, ap_sig_cseq_ST_st7_fsm_6)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            s2_6_we0 <= grp_obj_detector_maxpool_fu_202_out_6_we0;
        else 
            s2_6_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- s2_7_address0 assign process. --
    s2_7_address0_assign_proc : process(grp_obj_detector_flatten_fu_185_inp_7_address0, grp_obj_detector_maxpool_fu_202_out_7_address0, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st8_fsm_7)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            s2_7_address0 <= grp_obj_detector_maxpool_fu_202_out_7_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            s2_7_address0 <= grp_obj_detector_flatten_fu_185_inp_7_address0;
        else 
            s2_7_address0 <= "XXXXXXX";
        end if; 
    end process;

    s2_7_address1 <= grp_obj_detector_flatten_fu_185_inp_7_address1;

    -- s2_7_ce0 assign process. --
    s2_7_ce0_assign_proc : process(grp_obj_detector_flatten_fu_185_inp_7_ce0, grp_obj_detector_maxpool_fu_202_out_7_ce0, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st8_fsm_7)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            s2_7_ce0 <= grp_obj_detector_maxpool_fu_202_out_7_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            s2_7_ce0 <= grp_obj_detector_flatten_fu_185_inp_7_ce0;
        else 
            s2_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- s2_7_ce1 assign process. --
    s2_7_ce1_assign_proc : process(grp_obj_detector_flatten_fu_185_inp_7_ce1, ap_sig_cseq_ST_st8_fsm_7)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            s2_7_ce1 <= grp_obj_detector_flatten_fu_185_inp_7_ce1;
        else 
            s2_7_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    s2_7_d0 <= grp_obj_detector_maxpool_fu_202_out_7_d0;

    -- s2_7_we0 assign process. --
    s2_7_we0_assign_proc : process(grp_obj_detector_maxpool_fu_202_out_7_we0, ap_sig_cseq_ST_st7_fsm_6)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            s2_7_we0 <= grp_obj_detector_maxpool_fu_202_out_7_we0;
        else 
            s2_7_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- s2_8_address0 assign process. --
    s2_8_address0_assign_proc : process(grp_obj_detector_flatten_fu_185_inp_8_address0, grp_obj_detector_maxpool_fu_202_out_8_address0, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st8_fsm_7)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            s2_8_address0 <= grp_obj_detector_maxpool_fu_202_out_8_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            s2_8_address0 <= grp_obj_detector_flatten_fu_185_inp_8_address0;
        else 
            s2_8_address0 <= "XXXXXXX";
        end if; 
    end process;

    s2_8_address1 <= grp_obj_detector_flatten_fu_185_inp_8_address1;

    -- s2_8_ce0 assign process. --
    s2_8_ce0_assign_proc : process(grp_obj_detector_flatten_fu_185_inp_8_ce0, grp_obj_detector_maxpool_fu_202_out_8_ce0, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st8_fsm_7)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            s2_8_ce0 <= grp_obj_detector_maxpool_fu_202_out_8_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            s2_8_ce0 <= grp_obj_detector_flatten_fu_185_inp_8_ce0;
        else 
            s2_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- s2_8_ce1 assign process. --
    s2_8_ce1_assign_proc : process(grp_obj_detector_flatten_fu_185_inp_8_ce1, ap_sig_cseq_ST_st8_fsm_7)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            s2_8_ce1 <= grp_obj_detector_flatten_fu_185_inp_8_ce1;
        else 
            s2_8_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    s2_8_d0 <= grp_obj_detector_maxpool_fu_202_out_8_d0;

    -- s2_8_we0 assign process. --
    s2_8_we0_assign_proc : process(grp_obj_detector_maxpool_fu_202_out_8_we0, ap_sig_cseq_ST_st7_fsm_6)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            s2_8_we0 <= grp_obj_detector_maxpool_fu_202_out_8_we0;
        else 
            s2_8_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- s2_9_address0 assign process. --
    s2_9_address0_assign_proc : process(grp_obj_detector_flatten_fu_185_inp_9_address0, grp_obj_detector_maxpool_fu_202_out_9_address0, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st8_fsm_7)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            s2_9_address0 <= grp_obj_detector_maxpool_fu_202_out_9_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            s2_9_address0 <= grp_obj_detector_flatten_fu_185_inp_9_address0;
        else 
            s2_9_address0 <= "XXXXXXX";
        end if; 
    end process;

    s2_9_address1 <= grp_obj_detector_flatten_fu_185_inp_9_address1;

    -- s2_9_ce0 assign process. --
    s2_9_ce0_assign_proc : process(grp_obj_detector_flatten_fu_185_inp_9_ce0, grp_obj_detector_maxpool_fu_202_out_9_ce0, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st8_fsm_7)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            s2_9_ce0 <= grp_obj_detector_maxpool_fu_202_out_9_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            s2_9_ce0 <= grp_obj_detector_flatten_fu_185_inp_9_ce0;
        else 
            s2_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- s2_9_ce1 assign process. --
    s2_9_ce1_assign_proc : process(grp_obj_detector_flatten_fu_185_inp_9_ce1, ap_sig_cseq_ST_st8_fsm_7)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            s2_9_ce1 <= grp_obj_detector_flatten_fu_185_inp_9_ce1;
        else 
            s2_9_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    s2_9_d0 <= grp_obj_detector_maxpool_fu_202_out_9_d0;

    -- s2_9_we0 assign process. --
    s2_9_we0_assign_proc : process(grp_obj_detector_maxpool_fu_202_out_9_we0, ap_sig_cseq_ST_st7_fsm_6)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            s2_9_we0 <= grp_obj_detector_maxpool_fu_202_out_9_we0;
        else 
            s2_9_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- s3_address0 assign process. --
    s3_address0_assign_proc : process(ap_sig_cseq_ST_st10_fsm_9, ap_sig_cseq_ST_st12_fsm_11, grp_obj_detector_flatten_fu_185_out_r_address0, grp_obj_detector_FCL_fu_223_inp_address0, ap_sig_cseq_ST_st8_fsm_7)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9) or (ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11))) then 
            s3_address0 <= grp_obj_detector_FCL_fu_223_inp_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            s3_address0 <= grp_obj_detector_flatten_fu_185_out_r_address0;
        else 
            s3_address0 <= "XXXXXXXXXX";
        end if; 
    end process;

    s3_address1 <= grp_obj_detector_flatten_fu_185_out_r_address1;

    -- s3_ce0 assign process. --
    s3_ce0_assign_proc : process(ap_sig_cseq_ST_st10_fsm_9, ap_sig_cseq_ST_st12_fsm_11, grp_obj_detector_flatten_fu_185_out_r_ce0, grp_obj_detector_FCL_fu_223_inp_ce0, ap_sig_cseq_ST_st8_fsm_7)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9) or (ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11))) then 
            s3_ce0 <= grp_obj_detector_FCL_fu_223_inp_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            s3_ce0 <= grp_obj_detector_flatten_fu_185_out_r_ce0;
        else 
            s3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- s3_ce1 assign process. --
    s3_ce1_assign_proc : process(grp_obj_detector_flatten_fu_185_out_r_ce1, ap_sig_cseq_ST_st8_fsm_7)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            s3_ce1 <= grp_obj_detector_flatten_fu_185_out_r_ce1;
        else 
            s3_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    s3_d0 <= grp_obj_detector_flatten_fu_185_out_r_d0;
    s3_d1 <= grp_obj_detector_flatten_fu_185_out_r_d1;

    -- s3_we0 assign process. --
    s3_we0_assign_proc : process(grp_obj_detector_flatten_fu_185_out_r_we0, ap_sig_cseq_ST_st8_fsm_7)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            s3_we0 <= grp_obj_detector_flatten_fu_185_out_r_we0;
        else 
            s3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- s3_we1 assign process. --
    s3_we1_assign_proc : process(grp_obj_detector_flatten_fu_185_out_r_we1, ap_sig_cseq_ST_st8_fsm_7)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            s3_we1 <= grp_obj_detector_flatten_fu_185_out_r_we1;
        else 
            s3_we1 <= ap_const_logic_0;
        end if; 
    end process;

end behav;
