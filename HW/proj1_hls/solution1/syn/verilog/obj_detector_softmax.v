// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.2
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module obj_detector_softmax (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        inp_0_read,
        inp_1_read,
        out_r_Addr_A,
        out_r_EN_A,
        out_r_WEN_A,
        out_r_Din_A,
        out_r_Dout_A
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 60'b1;
parameter    ap_ST_st2_fsm_1 = 60'b10;
parameter    ap_ST_st3_fsm_2 = 60'b100;
parameter    ap_ST_st4_fsm_3 = 60'b1000;
parameter    ap_ST_st5_fsm_4 = 60'b10000;
parameter    ap_ST_st6_fsm_5 = 60'b100000;
parameter    ap_ST_st7_fsm_6 = 60'b1000000;
parameter    ap_ST_st8_fsm_7 = 60'b10000000;
parameter    ap_ST_st9_fsm_8 = 60'b100000000;
parameter    ap_ST_st10_fsm_9 = 60'b1000000000;
parameter    ap_ST_st11_fsm_10 = 60'b10000000000;
parameter    ap_ST_st12_fsm_11 = 60'b100000000000;
parameter    ap_ST_st13_fsm_12 = 60'b1000000000000;
parameter    ap_ST_st14_fsm_13 = 60'b10000000000000;
parameter    ap_ST_st15_fsm_14 = 60'b100000000000000;
parameter    ap_ST_st16_fsm_15 = 60'b1000000000000000;
parameter    ap_ST_st17_fsm_16 = 60'b10000000000000000;
parameter    ap_ST_st18_fsm_17 = 60'b100000000000000000;
parameter    ap_ST_st19_fsm_18 = 60'b1000000000000000000;
parameter    ap_ST_st20_fsm_19 = 60'b10000000000000000000;
parameter    ap_ST_st21_fsm_20 = 60'b100000000000000000000;
parameter    ap_ST_st22_fsm_21 = 60'b1000000000000000000000;
parameter    ap_ST_st23_fsm_22 = 60'b10000000000000000000000;
parameter    ap_ST_st24_fsm_23 = 60'b100000000000000000000000;
parameter    ap_ST_st25_fsm_24 = 60'b1000000000000000000000000;
parameter    ap_ST_st26_fsm_25 = 60'b10000000000000000000000000;
parameter    ap_ST_st27_fsm_26 = 60'b100000000000000000000000000;
parameter    ap_ST_st28_fsm_27 = 60'b1000000000000000000000000000;
parameter    ap_ST_st29_fsm_28 = 60'b10000000000000000000000000000;
parameter    ap_ST_st30_fsm_29 = 60'b100000000000000000000000000000;
parameter    ap_ST_st31_fsm_30 = 60'b1000000000000000000000000000000;
parameter    ap_ST_st32_fsm_31 = 60'b10000000000000000000000000000000;
parameter    ap_ST_st33_fsm_32 = 60'b100000000000000000000000000000000;
parameter    ap_ST_st34_fsm_33 = 60'b1000000000000000000000000000000000;
parameter    ap_ST_st35_fsm_34 = 60'b10000000000000000000000000000000000;
parameter    ap_ST_st36_fsm_35 = 60'b100000000000000000000000000000000000;
parameter    ap_ST_st37_fsm_36 = 60'b1000000000000000000000000000000000000;
parameter    ap_ST_st38_fsm_37 = 60'b10000000000000000000000000000000000000;
parameter    ap_ST_st39_fsm_38 = 60'b100000000000000000000000000000000000000;
parameter    ap_ST_st40_fsm_39 = 60'b1000000000000000000000000000000000000000;
parameter    ap_ST_st41_fsm_40 = 60'b10000000000000000000000000000000000000000;
parameter    ap_ST_st42_fsm_41 = 60'b100000000000000000000000000000000000000000;
parameter    ap_ST_st43_fsm_42 = 60'b1000000000000000000000000000000000000000000;
parameter    ap_ST_st44_fsm_43 = 60'b10000000000000000000000000000000000000000000;
parameter    ap_ST_st45_fsm_44 = 60'b100000000000000000000000000000000000000000000;
parameter    ap_ST_st46_fsm_45 = 60'b1000000000000000000000000000000000000000000000;
parameter    ap_ST_st47_fsm_46 = 60'b10000000000000000000000000000000000000000000000;
parameter    ap_ST_st48_fsm_47 = 60'b100000000000000000000000000000000000000000000000;
parameter    ap_ST_st49_fsm_48 = 60'b1000000000000000000000000000000000000000000000000;
parameter    ap_ST_st50_fsm_49 = 60'b10000000000000000000000000000000000000000000000000;
parameter    ap_ST_st51_fsm_50 = 60'b100000000000000000000000000000000000000000000000000;
parameter    ap_ST_st52_fsm_51 = 60'b1000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st53_fsm_52 = 60'b10000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st54_fsm_53 = 60'b100000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st55_fsm_54 = 60'b1000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st56_fsm_55 = 60'b10000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st57_fsm_56 = 60'b100000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st58_fsm_57 = 60'b1000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st59_fsm_58 = 60'b10000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st60_fsm_59 = 60'b100000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_19 = 32'b11001;
parameter    ap_const_lv32_29 = 32'b101001;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv32_E = 32'b1110;
parameter    ap_const_lv32_1D = 32'b11101;
parameter    ap_const_lv32_1E = 32'b11110;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv32_3A = 32'b111010;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv32_3B = 32'b111011;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv4_F = 4'b1111;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_1A = 32'b11010;
parameter    ap_const_lv32_2A = 32'b101010;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv32_20 = 32'b100000;
parameter    ap_const_lv2_2 = 2'b10;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_const_lv64_0 = 64'b0000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] inp_0_read;
input  [31:0] inp_1_read;
output  [31:0] out_r_Addr_A;
output   out_r_EN_A;
output  [3:0] out_r_WEN_A;
output  [31:0] out_r_Din_A;
input  [31:0] out_r_Dout_A;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg out_r_EN_A;
reg[3:0] out_r_WEN_A;
(* fsm_encoding = "none" *) reg   [59:0] ap_CS_fsm = 60'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_78;
wire   [63:0] grp_fu_175_p1;
reg   [63:0] reg_193;
reg    ap_sig_cseq_ST_st16_fsm_15;
reg    ap_sig_bdd_100;
wire   [0:0] exitcond1_fu_263_p2;
reg    ap_sig_cseq_ST_st26_fsm_25;
reg    ap_sig_bdd_114;
wire   [63:0] grp_fu_188_p2;
reg   [63:0] reg_200;
reg    ap_sig_cseq_ST_st42_fsm_41;
reg    ap_sig_bdd_124;
wire   [1:0] i_5_fu_212_p2;
reg   [1:0] i_5_reg_333;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_bdd_141;
wire   [0:0] exitcond3_fu_206_p2;
wire   [31:0] grp_fu_161_p2;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_bdd_155;
wire   [1:0] i_6_fu_235_p2;
reg   [1:0] i_6_reg_351;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_bdd_164;
wire   [0:0] tmp_10_fu_241_p1;
reg   [0:0] tmp_10_reg_356;
wire   [0:0] exitcond2_fu_229_p2;
wire   [31:0] inp_1_read_assign_1_fu_245_p3;
reg   [31:0] inp_1_read_assign_1_reg_362;
wire   [31:0] grp_fu_166_p2;
reg   [31:0] temp_0_reg_367;
reg    ap_sig_cseq_ST_st14_fsm_13;
reg    ap_sig_bdd_180;
wire   [31:0] temp_1_1_fu_251_p3;
reg    ap_sig_cseq_ST_st15_fsm_14;
reg    ap_sig_bdd_189;
wire   [31:0] temp_1_2_fu_257_p3;
wire   [1:0] i_7_fu_269_p2;
reg   [1:0] i_7_reg_386;
wire   [63:0] grp_fu_180_p2;
reg   [63:0] tmp_8_reg_391;
reg    ap_sig_cseq_ST_st30_fsm_29;
reg    ap_sig_bdd_202;
wire   [31:0] grp_fu_171_p1;
reg    ap_sig_cseq_ST_st31_fsm_30;
reg    ap_sig_bdd_211;
wire   [1:0] i_8_fu_294_p2;
reg   [1:0] i_8_reg_404;
reg    ap_sig_cseq_ST_st32_fsm_31;
reg    ap_sig_bdd_220;
reg   [63:0] tmp_2_reg_409;
wire   [0:0] exitcond_fu_288_p2;
wire   [63:0] grp_fu_184_p2;
reg   [63:0] tmp_4_reg_414;
reg    ap_sig_cseq_ST_st59_fsm_58;
reg    ap_sig_bdd_233;
reg   [1:0] i_reg_68;
reg   [31:0] sum_reg_79;
reg   [31:0] temp_1_s_reg_91;
reg   [31:0] temp_0_s_reg_103;
reg   [1:0] i1_reg_115;
wire   [31:0] sum_1_phi_fu_130_p4;
reg   [31:0] sum_1_reg_126;
reg   [1:0] i2_reg_138;
reg   [1:0] i3_reg_149;
reg    ap_sig_cseq_ST_st60_fsm_59;
reg    ap_sig_bdd_261;
wire   [63:0] tmp_9_fu_313_p1;
wire   [31:0] out_r_Addr_A_orig;
wire   [31:0] grp_fu_161_p0;
wire   [31:0] grp_fu_161_p1;
wire   [31:0] grp_fu_166_p0;
wire   [31:0] grp_fu_166_p1;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_bdd_280;
reg   [63:0] grp_fu_171_p0;
reg   [31:0] grp_fu_175_p0;
wire   [31:0] temp_load_phi_fu_279_p3;
wire   [31:0] temp_load_1_phi_fu_304_p3;
wire   [63:0] grp_fu_180_p0;
wire   [63:0] grp_fu_180_p1;
reg    ap_sig_cseq_ST_st27_fsm_26;
reg    ap_sig_bdd_293;
wire   [63:0] grp_fu_184_p0;
wire   [63:0] grp_fu_184_p1;
reg    ap_sig_cseq_ST_st43_fsm_42;
reg    ap_sig_bdd_302;
reg   [63:0] grp_fu_188_p1;
reg    ap_sig_cseq_ST_st17_fsm_16;
reg    ap_sig_bdd_310;
reg    ap_sig_cseq_ST_st33_fsm_32;
reg    ap_sig_bdd_317;
wire   [0:0] tmp_fu_218_p1;
wire   [0:0] tmp_11_fu_275_p1;
wire   [0:0] tmp_12_fu_300_p1;
wire    grp_fu_161_ce;
wire    grp_fu_166_ce;
wire    grp_fu_180_ce;
wire    grp_fu_184_ce;
wire   [63:0] grp_fu_188_p0;
wire    grp_fu_188_ce;
reg   [59:0] ap_NS_fsm;


obj_detector_fadd_32ns_32ns_32_4_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
obj_detector_fadd_32ns_32ns_32_4_full_dsp_U53(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_161_p0 ),
    .din1( grp_fu_161_p1 ),
    .ce( grp_fu_161_ce ),
    .dout( grp_fu_161_p2 )
);

obj_detector_fdiv_32ns_32ns_32_8 #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
obj_detector_fdiv_32ns_32ns_32_8_U54(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_166_p0 ),
    .din1( grp_fu_166_p1 ),
    .ce( grp_fu_166_ce ),
    .dout( grp_fu_166_p2 )
);

obj_detector_fptrunc_64ns_32_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
obj_detector_fptrunc_64ns_32_1_U55(
    .din0( grp_fu_171_p0 ),
    .dout( grp_fu_171_p1 )
);

obj_detector_fpext_32ns_64_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
obj_detector_fpext_32ns_64_1_U56(
    .din0( grp_fu_175_p0 ),
    .dout( grp_fu_175_p1 )
);

obj_detector_dadd_64ns_64ns_64_4_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
obj_detector_dadd_64ns_64ns_64_4_full_dsp_U57(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_180_p0 ),
    .din1( grp_fu_180_p1 ),
    .ce( grp_fu_180_ce ),
    .dout( grp_fu_180_p2 )
);

obj_detector_ddiv_64ns_64ns_64_17 #(
    .ID( 1 ),
    .NUM_STAGE( 17 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
obj_detector_ddiv_64ns_64ns_64_17_U58(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_184_p0 ),
    .din1( grp_fu_184_p1 ),
    .ce( grp_fu_184_ce ),
    .dout( grp_fu_184_p2 )
);

obj_detector_dexp_64ns_64ns_64_10_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 10 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
obj_detector_dexp_64ns_64ns_64_10_full_dsp_U59(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_188_p0 ),
    .din1( grp_fu_188_p1 ),
    .ce( grp_fu_188_ce ),
    .dout( grp_fu_188_p2 )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(ap_const_lv1_0 == exitcond3_fu_206_p2))) begin
        i1_reg_115 <= ap_const_lv2_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st15_fsm_14)) begin
        i1_reg_115 <= i_6_reg_351;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) & ~(ap_const_lv1_0 == exitcond2_fu_229_p2))) begin
        i2_reg_138 <= ap_const_lv2_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st31_fsm_30)) begin
        i2_reg_138 <= i_7_reg_386;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st16_fsm_15) & ~(exitcond1_fu_263_p2 == ap_const_lv1_0))) begin
        i3_reg_149 <= ap_const_lv2_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st60_fsm_59)) begin
        i3_reg_149 <= i_8_reg_404;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        i_reg_68 <= i_5_reg_333;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        i_reg_68 <= ap_const_lv2_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) & ~(ap_const_lv1_0 == exitcond2_fu_229_p2))) begin
        sum_1_reg_126 <= ap_const_lv32_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st31_fsm_30)) begin
        sum_1_reg_126 <= grp_fu_171_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        sum_reg_79 <= grp_fu_161_p2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        sum_reg_79 <= ap_const_lv32_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        i_5_reg_333 <= i_5_fu_212_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        i_6_reg_351 <= i_6_fu_235_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st16_fsm_15)) begin
        i_7_reg_386 <= i_7_fu_269_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st32_fsm_31)) begin
        i_8_reg_404 <= i_8_fu_294_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) & (ap_const_lv1_0 == exitcond2_fu_229_p2))) begin
        inp_1_read_assign_1_reg_362 <= inp_1_read_assign_1_fu_245_p3;
        tmp_10_reg_356 <= tmp_10_fu_241_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st16_fsm_15) & (exitcond1_fu_263_p2 == ap_const_lv1_0)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st16_fsm_15) & ~(exitcond1_fu_263_p2 == ap_const_lv1_0)) | (ap_const_logic_1 == ap_sig_cseq_ST_st26_fsm_25))) begin
        reg_193 <= grp_fu_175_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st26_fsm_25) | (ap_const_logic_1 == ap_sig_cseq_ST_st42_fsm_41))) begin
        reg_200 <= grp_fu_188_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        temp_0_reg_367 <= grp_fu_166_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st15_fsm_14)) begin
        temp_0_s_reg_103 <= temp_1_2_fu_257_p3;
        temp_1_s_reg_91 <= temp_1_1_fu_251_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st32_fsm_31) & (ap_const_lv1_0 == exitcond_fu_288_p2))) begin
        tmp_2_reg_409 <= grp_fu_175_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st59_fsm_58)) begin
        tmp_4_reg_414 <= grp_fu_184_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st30_fsm_29)) begin
        tmp_8_reg_391 <= grp_fu_180_p2;
    end
end

/// ap_done assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0 or ap_sig_cseq_ST_st32_fsm_31 or exitcond_fu_288_p2)
begin
    if (((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st32_fsm_31) & ~(ap_const_lv1_0 == exitcond_fu_288_p2)))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_sig_cseq_ST_st32_fsm_31 or exitcond_fu_288_p2)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st32_fsm_31) & ~(ap_const_lv1_0 == exitcond_fu_288_p2))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st14_fsm_13 assign process. ///
always @ (ap_sig_bdd_180)
begin
    if (ap_sig_bdd_180) begin
        ap_sig_cseq_ST_st14_fsm_13 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st14_fsm_13 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st15_fsm_14 assign process. ///
always @ (ap_sig_bdd_189)
begin
    if (ap_sig_bdd_189) begin
        ap_sig_cseq_ST_st15_fsm_14 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st15_fsm_14 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st16_fsm_15 assign process. ///
always @ (ap_sig_bdd_100)
begin
    if (ap_sig_bdd_100) begin
        ap_sig_cseq_ST_st16_fsm_15 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st16_fsm_15 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st17_fsm_16 assign process. ///
always @ (ap_sig_bdd_310)
begin
    if (ap_sig_bdd_310) begin
        ap_sig_cseq_ST_st17_fsm_16 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st17_fsm_16 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st1_fsm_0 assign process. ///
always @ (ap_sig_bdd_78)
begin
    if (ap_sig_bdd_78) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st26_fsm_25 assign process. ///
always @ (ap_sig_bdd_114)
begin
    if (ap_sig_bdd_114) begin
        ap_sig_cseq_ST_st26_fsm_25 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st26_fsm_25 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st27_fsm_26 assign process. ///
always @ (ap_sig_bdd_293)
begin
    if (ap_sig_bdd_293) begin
        ap_sig_cseq_ST_st27_fsm_26 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st27_fsm_26 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st2_fsm_1 assign process. ///
always @ (ap_sig_bdd_141)
begin
    if (ap_sig_bdd_141) begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st30_fsm_29 assign process. ///
always @ (ap_sig_bdd_202)
begin
    if (ap_sig_bdd_202) begin
        ap_sig_cseq_ST_st30_fsm_29 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st30_fsm_29 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st31_fsm_30 assign process. ///
always @ (ap_sig_bdd_211)
begin
    if (ap_sig_bdd_211) begin
        ap_sig_cseq_ST_st31_fsm_30 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st31_fsm_30 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st32_fsm_31 assign process. ///
always @ (ap_sig_bdd_220)
begin
    if (ap_sig_bdd_220) begin
        ap_sig_cseq_ST_st32_fsm_31 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st32_fsm_31 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st33_fsm_32 assign process. ///
always @ (ap_sig_bdd_317)
begin
    if (ap_sig_bdd_317) begin
        ap_sig_cseq_ST_st33_fsm_32 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st33_fsm_32 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st42_fsm_41 assign process. ///
always @ (ap_sig_bdd_124)
begin
    if (ap_sig_bdd_124) begin
        ap_sig_cseq_ST_st42_fsm_41 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st42_fsm_41 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st43_fsm_42 assign process. ///
always @ (ap_sig_bdd_302)
begin
    if (ap_sig_bdd_302) begin
        ap_sig_cseq_ST_st43_fsm_42 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st43_fsm_42 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st59_fsm_58 assign process. ///
always @ (ap_sig_bdd_233)
begin
    if (ap_sig_bdd_233) begin
        ap_sig_cseq_ST_st59_fsm_58 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st59_fsm_58 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st5_fsm_4 assign process. ///
always @ (ap_sig_bdd_155)
begin
    if (ap_sig_bdd_155) begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st60_fsm_59 assign process. ///
always @ (ap_sig_bdd_261)
begin
    if (ap_sig_bdd_261) begin
        ap_sig_cseq_ST_st60_fsm_59 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st60_fsm_59 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st6_fsm_5 assign process. ///
always @ (ap_sig_bdd_164)
begin
    if (ap_sig_bdd_164) begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st7_fsm_6 assign process. ///
always @ (ap_sig_bdd_280)
begin
    if (ap_sig_bdd_280) begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_0;
    end
end

/// grp_fu_171_p0 assign process. ///
always @ (tmp_8_reg_391 or ap_sig_cseq_ST_st31_fsm_30 or tmp_4_reg_414 or ap_sig_cseq_ST_st60_fsm_59)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st60_fsm_59)) begin
        grp_fu_171_p0 = tmp_4_reg_414;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st31_fsm_30)) begin
        grp_fu_171_p0 = tmp_8_reg_391;
    end else begin
        grp_fu_171_p0 = 'bx;
    end
end

/// grp_fu_175_p0 assign process. ///
always @ (ap_sig_cseq_ST_st16_fsm_15 or exitcond1_fu_263_p2 or ap_sig_cseq_ST_st26_fsm_25 or ap_sig_cseq_ST_st32_fsm_31 or sum_1_phi_fu_130_p4 or sum_1_reg_126 or temp_load_phi_fu_279_p3 or temp_load_1_phi_fu_304_p3)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st32_fsm_31)) begin
        grp_fu_175_p0 = temp_load_1_phi_fu_304_p3;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st26_fsm_25)) begin
        grp_fu_175_p0 = sum_1_reg_126;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st16_fsm_15) & ~(exitcond1_fu_263_p2 == ap_const_lv1_0))) begin
        grp_fu_175_p0 = sum_1_phi_fu_130_p4;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st16_fsm_15) & (exitcond1_fu_263_p2 == ap_const_lv1_0))) begin
        grp_fu_175_p0 = temp_load_phi_fu_279_p3;
    end else begin
        grp_fu_175_p0 = 'bx;
    end
end

/// grp_fu_188_p1 assign process. ///
always @ (reg_193 or tmp_2_reg_409 or ap_sig_cseq_ST_st17_fsm_16 or ap_sig_cseq_ST_st33_fsm_32)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st33_fsm_32)) begin
        grp_fu_188_p1 = tmp_2_reg_409;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st17_fsm_16)) begin
        grp_fu_188_p1 = reg_193;
    end else begin
        grp_fu_188_p1 = 'bx;
    end
end

/// out_r_EN_A assign process. ///
always @ (ap_sig_cseq_ST_st60_fsm_59)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st60_fsm_59)) begin
        out_r_EN_A = ap_const_logic_1;
    end else begin
        out_r_EN_A = ap_const_logic_0;
    end
end

/// out_r_WEN_A assign process. ///
always @ (ap_sig_cseq_ST_st60_fsm_59)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st60_fsm_59)) begin
        out_r_WEN_A = ap_const_lv4_F;
    end else begin
        out_r_WEN_A = ap_const_lv4_0;
    end
end
/// the next state (ap_NS_fsm) of the state machine. ///
always @ (ap_start or ap_CS_fsm or exitcond1_fu_263_p2 or exitcond3_fu_206_p2 or exitcond2_fu_229_p2 or exitcond_fu_288_p2)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            if (~(ap_const_lv1_0 == exitcond3_fu_206_p2)) begin
                ap_NS_fsm = ap_ST_st6_fsm_5;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_st3_fsm_2 : 
        begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        ap_ST_st4_fsm_3 : 
        begin
            ap_NS_fsm = ap_ST_st5_fsm_4;
        end
        ap_ST_st5_fsm_4 : 
        begin
            ap_NS_fsm = ap_ST_st2_fsm_1;
        end
        ap_ST_st6_fsm_5 : 
        begin
            if (~(ap_const_lv1_0 == exitcond2_fu_229_p2)) begin
                ap_NS_fsm = ap_ST_st16_fsm_15;
            end else begin
                ap_NS_fsm = ap_ST_st7_fsm_6;
            end
        end
        ap_ST_st7_fsm_6 : 
        begin
            ap_NS_fsm = ap_ST_st8_fsm_7;
        end
        ap_ST_st8_fsm_7 : 
        begin
            ap_NS_fsm = ap_ST_st9_fsm_8;
        end
        ap_ST_st9_fsm_8 : 
        begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st10_fsm_9 : 
        begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st11_fsm_10 : 
        begin
            ap_NS_fsm = ap_ST_st12_fsm_11;
        end
        ap_ST_st12_fsm_11 : 
        begin
            ap_NS_fsm = ap_ST_st13_fsm_12;
        end
        ap_ST_st13_fsm_12 : 
        begin
            ap_NS_fsm = ap_ST_st14_fsm_13;
        end
        ap_ST_st14_fsm_13 : 
        begin
            ap_NS_fsm = ap_ST_st15_fsm_14;
        end
        ap_ST_st15_fsm_14 : 
        begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st16_fsm_15 : 
        begin
            if (~(exitcond1_fu_263_p2 == ap_const_lv1_0)) begin
                ap_NS_fsm = ap_ST_st32_fsm_31;
            end else begin
                ap_NS_fsm = ap_ST_st17_fsm_16;
            end
        end
        ap_ST_st17_fsm_16 : 
        begin
            ap_NS_fsm = ap_ST_st18_fsm_17;
        end
        ap_ST_st18_fsm_17 : 
        begin
            ap_NS_fsm = ap_ST_st19_fsm_18;
        end
        ap_ST_st19_fsm_18 : 
        begin
            ap_NS_fsm = ap_ST_st20_fsm_19;
        end
        ap_ST_st20_fsm_19 : 
        begin
            ap_NS_fsm = ap_ST_st21_fsm_20;
        end
        ap_ST_st21_fsm_20 : 
        begin
            ap_NS_fsm = ap_ST_st22_fsm_21;
        end
        ap_ST_st22_fsm_21 : 
        begin
            ap_NS_fsm = ap_ST_st23_fsm_22;
        end
        ap_ST_st23_fsm_22 : 
        begin
            ap_NS_fsm = ap_ST_st24_fsm_23;
        end
        ap_ST_st24_fsm_23 : 
        begin
            ap_NS_fsm = ap_ST_st25_fsm_24;
        end
        ap_ST_st25_fsm_24 : 
        begin
            ap_NS_fsm = ap_ST_st26_fsm_25;
        end
        ap_ST_st26_fsm_25 : 
        begin
            ap_NS_fsm = ap_ST_st27_fsm_26;
        end
        ap_ST_st27_fsm_26 : 
        begin
            ap_NS_fsm = ap_ST_st28_fsm_27;
        end
        ap_ST_st28_fsm_27 : 
        begin
            ap_NS_fsm = ap_ST_st29_fsm_28;
        end
        ap_ST_st29_fsm_28 : 
        begin
            ap_NS_fsm = ap_ST_st30_fsm_29;
        end
        ap_ST_st30_fsm_29 : 
        begin
            ap_NS_fsm = ap_ST_st31_fsm_30;
        end
        ap_ST_st31_fsm_30 : 
        begin
            ap_NS_fsm = ap_ST_st16_fsm_15;
        end
        ap_ST_st32_fsm_31 : 
        begin
            if (~(ap_const_lv1_0 == exitcond_fu_288_p2)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st33_fsm_32;
            end
        end
        ap_ST_st33_fsm_32 : 
        begin
            ap_NS_fsm = ap_ST_st34_fsm_33;
        end
        ap_ST_st34_fsm_33 : 
        begin
            ap_NS_fsm = ap_ST_st35_fsm_34;
        end
        ap_ST_st35_fsm_34 : 
        begin
            ap_NS_fsm = ap_ST_st36_fsm_35;
        end
        ap_ST_st36_fsm_35 : 
        begin
            ap_NS_fsm = ap_ST_st37_fsm_36;
        end
        ap_ST_st37_fsm_36 : 
        begin
            ap_NS_fsm = ap_ST_st38_fsm_37;
        end
        ap_ST_st38_fsm_37 : 
        begin
            ap_NS_fsm = ap_ST_st39_fsm_38;
        end
        ap_ST_st39_fsm_38 : 
        begin
            ap_NS_fsm = ap_ST_st40_fsm_39;
        end
        ap_ST_st40_fsm_39 : 
        begin
            ap_NS_fsm = ap_ST_st41_fsm_40;
        end
        ap_ST_st41_fsm_40 : 
        begin
            ap_NS_fsm = ap_ST_st42_fsm_41;
        end
        ap_ST_st42_fsm_41 : 
        begin
            ap_NS_fsm = ap_ST_st43_fsm_42;
        end
        ap_ST_st43_fsm_42 : 
        begin
            ap_NS_fsm = ap_ST_st44_fsm_43;
        end
        ap_ST_st44_fsm_43 : 
        begin
            ap_NS_fsm = ap_ST_st45_fsm_44;
        end
        ap_ST_st45_fsm_44 : 
        begin
            ap_NS_fsm = ap_ST_st46_fsm_45;
        end
        ap_ST_st46_fsm_45 : 
        begin
            ap_NS_fsm = ap_ST_st47_fsm_46;
        end
        ap_ST_st47_fsm_46 : 
        begin
            ap_NS_fsm = ap_ST_st48_fsm_47;
        end
        ap_ST_st48_fsm_47 : 
        begin
            ap_NS_fsm = ap_ST_st49_fsm_48;
        end
        ap_ST_st49_fsm_48 : 
        begin
            ap_NS_fsm = ap_ST_st50_fsm_49;
        end
        ap_ST_st50_fsm_49 : 
        begin
            ap_NS_fsm = ap_ST_st51_fsm_50;
        end
        ap_ST_st51_fsm_50 : 
        begin
            ap_NS_fsm = ap_ST_st52_fsm_51;
        end
        ap_ST_st52_fsm_51 : 
        begin
            ap_NS_fsm = ap_ST_st53_fsm_52;
        end
        ap_ST_st53_fsm_52 : 
        begin
            ap_NS_fsm = ap_ST_st54_fsm_53;
        end
        ap_ST_st54_fsm_53 : 
        begin
            ap_NS_fsm = ap_ST_st55_fsm_54;
        end
        ap_ST_st55_fsm_54 : 
        begin
            ap_NS_fsm = ap_ST_st56_fsm_55;
        end
        ap_ST_st56_fsm_55 : 
        begin
            ap_NS_fsm = ap_ST_st57_fsm_56;
        end
        ap_ST_st57_fsm_56 : 
        begin
            ap_NS_fsm = ap_ST_st58_fsm_57;
        end
        ap_ST_st58_fsm_57 : 
        begin
            ap_NS_fsm = ap_ST_st59_fsm_58;
        end
        ap_ST_st59_fsm_58 : 
        begin
            ap_NS_fsm = ap_ST_st60_fsm_59;
        end
        ap_ST_st60_fsm_59 : 
        begin
            ap_NS_fsm = ap_ST_st32_fsm_31;
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end


/// ap_sig_bdd_100 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_100 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_F]);
end

/// ap_sig_bdd_114 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_114 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_19]);
end

/// ap_sig_bdd_124 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_124 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_29]);
end

/// ap_sig_bdd_141 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_141 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end

/// ap_sig_bdd_155 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_155 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4]);
end

/// ap_sig_bdd_164 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_164 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5]);
end

/// ap_sig_bdd_180 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_180 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_D]);
end

/// ap_sig_bdd_189 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_189 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_E]);
end

/// ap_sig_bdd_202 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_202 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1D]);
end

/// ap_sig_bdd_211 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_211 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1E]);
end

/// ap_sig_bdd_220 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_220 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1F]);
end

/// ap_sig_bdd_233 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_233 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3A]);
end

/// ap_sig_bdd_261 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_261 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3B]);
end

/// ap_sig_bdd_280 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_280 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_6]);
end

/// ap_sig_bdd_293 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_293 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1A]);
end

/// ap_sig_bdd_302 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_302 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2A]);
end

/// ap_sig_bdd_310 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_310 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_10]);
end

/// ap_sig_bdd_317 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_317 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_20]);
end

/// ap_sig_bdd_78 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_78 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end
assign exitcond1_fu_263_p2 = (i2_reg_138 == ap_const_lv2_2? 1'b1: 1'b0);
assign exitcond2_fu_229_p2 = (i1_reg_115 == ap_const_lv2_2? 1'b1: 1'b0);
assign exitcond3_fu_206_p2 = (i_reg_68 == ap_const_lv2_2? 1'b1: 1'b0);
assign exitcond_fu_288_p2 = (i3_reg_149 == ap_const_lv2_2? 1'b1: 1'b0);
assign grp_fu_161_ce = ap_const_logic_1;
assign grp_fu_161_p0 = sum_reg_79;
assign grp_fu_161_p1 = ((tmp_fu_218_p1[0:0]===1'b1)? inp_1_read: inp_0_read);
assign grp_fu_166_ce = ap_const_logic_1;
assign grp_fu_166_p0 = inp_1_read_assign_1_reg_362;
assign grp_fu_166_p1 = sum_reg_79;
assign grp_fu_180_ce = ap_const_logic_1;
assign grp_fu_180_p0 = reg_193;
assign grp_fu_180_p1 = reg_200;
assign grp_fu_184_ce = ap_const_logic_1;
assign grp_fu_184_p0 = reg_200;
assign grp_fu_184_p1 = reg_193;
assign grp_fu_188_ce = ap_const_logic_1;
assign grp_fu_188_p0 = ap_const_lv64_0;
assign i_5_fu_212_p2 = (i_reg_68 + ap_const_lv2_1);
assign i_6_fu_235_p2 = (i1_reg_115 + ap_const_lv2_1);
assign i_7_fu_269_p2 = (i2_reg_138 + ap_const_lv2_1);
assign i_8_fu_294_p2 = (i3_reg_149 + ap_const_lv2_1);
assign inp_1_read_assign_1_fu_245_p3 = ((tmp_10_fu_241_p1[0:0]===1'b1)? inp_1_read: inp_0_read);
assign out_r_Addr_A = out_r_Addr_A_orig << ap_const_lv32_2;
assign out_r_Addr_A_orig = tmp_9_fu_313_p1;
assign out_r_Din_A = grp_fu_171_p1;
assign sum_1_phi_fu_130_p4 = sum_1_reg_126;
assign temp_1_1_fu_251_p3 = ((tmp_10_reg_356[0:0]===1'b1)? temp_0_reg_367: temp_1_s_reg_91);
assign temp_1_2_fu_257_p3 = ((tmp_10_reg_356[0:0]===1'b1)? temp_0_s_reg_103: temp_0_reg_367);
assign temp_load_1_phi_fu_304_p3 = ((tmp_12_fu_300_p1[0:0]===1'b1)? temp_1_s_reg_91: temp_0_s_reg_103);
assign temp_load_phi_fu_279_p3 = ((tmp_11_fu_275_p1[0:0]===1'b1)? temp_1_s_reg_91: temp_0_s_reg_103);
assign tmp_10_fu_241_p1 = i1_reg_115[0:0];
assign tmp_11_fu_275_p1 = i2_reg_138[0:0];
assign tmp_12_fu_300_p1 = i3_reg_149[0:0];
assign tmp_9_fu_313_p1 = i3_reg_149;
assign tmp_fu_218_p1 = i_reg_68[0:0];


endmodule //obj_detector_softmax

