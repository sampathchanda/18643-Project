// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.2
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _obj_detector_fmax_HH_
#define _obj_detector_fmax_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "obj_detector_dcmp_64ns_64ns_1_1.h"

namespace ap_rtl {

struct obj_detector_fmax : public sc_module {
    // Port declarations 5
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_lv<64> > x;
    sc_in< sc_lv<64> > y;
    sc_out< sc_lv<64> > ap_return;


    // Module declarations
    obj_detector_fmax(sc_module_name name);
    SC_HAS_PROCESS(obj_detector_fmax);

    ~obj_detector_fmax();

    sc_trace_file* mVcdFile;

    obj_detector_dcmp_64ns_64ns_1_1<1,1,64,64,1>* obj_detector_dcmp_64ns_64ns_1_1_U28;
    sc_signal< sc_lv<64> > y_read_reg_250;
    sc_signal< sc_lv<64> > ap_reg_ppstg_y_read_reg_250_pp0_it1;
    sc_signal< sc_lv<64> > x_read_reg_258;
    sc_signal< sc_lv<64> > ap_reg_ppstg_x_read_reg_258_pp0_it1;
    sc_signal< sc_lv<1> > p_Result_6_reg_265;
    sc_signal< sc_lv<1> > ap_reg_ppstg_p_Result_6_reg_265_pp0_it1;
    sc_signal< sc_lv<52> > loc_V_1_fu_66_p1;
    sc_signal< sc_lv<52> > loc_V_1_reg_270;
    sc_signal< sc_lv<52> > ap_reg_ppstg_loc_V_1_reg_270_pp0_it1;
    sc_signal< sc_lv<1> > or_cond2_i_fu_124_p2;
    sc_signal< sc_lv<1> > or_cond2_i_reg_275;
    sc_signal< sc_lv<1> > ap_reg_ppstg_or_cond2_i_reg_275_pp0_it1;
    sc_signal< sc_lv<1> > or_cond3_i_fu_136_p2;
    sc_signal< sc_lv<1> > or_cond3_i_reg_282;
    sc_signal< sc_lv<1> > ap_reg_ppstg_or_cond3_i_reg_282_pp0_it1;
    sc_signal< sc_lv<1> > or_cond4_i_fu_148_p2;
    sc_signal< sc_lv<1> > or_cond4_i_reg_289;
    sc_signal< sc_lv<1> > ap_reg_ppstg_or_cond4_i_reg_289_pp0_it1;
    sc_signal< sc_lv<1> > tmp_s_fu_158_p2;
    sc_signal< sc_lv<1> > tmp_s_reg_297;
    sc_signal< sc_lv<64> > tmp_9_fu_40_p0;
    sc_signal< sc_lv<64> > tmp_9_fu_40_p1;
    sc_signal< sc_lv<64> > p_Val2_s_fu_44_p1;
    sc_signal< sc_lv<64> > p_Val2_1_fu_70_p1;
    sc_signal< sc_lv<11> > loc_V_fu_56_p4;
    sc_signal< sc_lv<11> > loc_V_2_fu_74_p4;
    sc_signal< sc_lv<52> > loc_V_3_fu_84_p1;
    sc_signal< sc_lv<1> > tmp_i_7_fu_94_p2;
    sc_signal< sc_lv<1> > tmp_1_i_fu_100_p2;
    sc_signal< sc_lv<1> > tmp_i_fu_88_p2;
    sc_signal< sc_lv<1> > tmp_2_i_fu_106_p2;
    sc_signal< sc_lv<1> > tmp1_fu_118_p2;
    sc_signal< sc_lv<1> > tmp_fu_112_p2;
    sc_signal< sc_lv<1> > tmp_3_i_fu_130_p2;
    sc_signal< sc_lv<1> > tmp_4_i_fu_142_p2;
    sc_signal< sc_lv<1> > tmp_8_fu_154_p2;
    sc_signal< sc_lv<1> > tmp_9_fu_40_p2;
    sc_signal< sc_lv<52> > x_fp_sig_V_fu_169_p2;
    sc_signal< sc_lv<64> > p_Result_s_fu_174_p4;
    sc_signal< sc_lv<1> > sel_tmp1_fu_187_p2;
    sc_signal< sc_lv<1> > sel_tmp2_fu_191_p2;
    sc_signal< sc_lv<64> > res_fu_164_p3;
    sc_signal< sc_lv<64> > res_1_fu_183_p1;
    sc_signal< sc_lv<64> > res_2_fu_196_p3;
    sc_signal< sc_lv<1> > sel_tmp7_demorgan_fu_210_p2;
    sc_signal< sc_lv<1> > sel_tmp7_fu_214_p2;
    sc_signal< sc_lv<1> > sel_tmp8_fu_220_p2;
    sc_signal< sc_lv<64> > res_3_fu_204_p3;
    sc_signal< sc_lv<1> > sel_tmp_fu_232_p2;
    sc_signal< sc_lv<1> > sel_tmp3_fu_237_p2;
    sc_signal< sc_lv<64> > res_4_fu_225_p3;
    sc_signal< sc_lv<5> > tmp_9_fu_40_opcode;
    static const bool ap_true;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_3F;
    static const sc_lv<32> ap_const_lv32_34;
    static const sc_lv<32> ap_const_lv32_3E;
    static const sc_lv<11> ap_const_lv11_0;
    static const sc_lv<52> ap_const_lv52_0;
    static const sc_lv<11> ap_const_lv11_7FF;
    static const sc_lv<52> ap_const_lv52_8000000000000;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<5> ap_const_lv5_2;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_return();
    void thread_loc_V_1_fu_66_p1();
    void thread_loc_V_2_fu_74_p4();
    void thread_loc_V_3_fu_84_p1();
    void thread_loc_V_fu_56_p4();
    void thread_or_cond2_i_fu_124_p2();
    void thread_or_cond3_i_fu_136_p2();
    void thread_or_cond4_i_fu_148_p2();
    void thread_p_Result_s_fu_174_p4();
    void thread_p_Val2_1_fu_70_p1();
    void thread_p_Val2_s_fu_44_p1();
    void thread_res_1_fu_183_p1();
    void thread_res_2_fu_196_p3();
    void thread_res_3_fu_204_p3();
    void thread_res_4_fu_225_p3();
    void thread_res_fu_164_p3();
    void thread_sel_tmp1_fu_187_p2();
    void thread_sel_tmp2_fu_191_p2();
    void thread_sel_tmp3_fu_237_p2();
    void thread_sel_tmp7_demorgan_fu_210_p2();
    void thread_sel_tmp7_fu_214_p2();
    void thread_sel_tmp8_fu_220_p2();
    void thread_sel_tmp_fu_232_p2();
    void thread_tmp1_fu_118_p2();
    void thread_tmp_1_i_fu_100_p2();
    void thread_tmp_2_i_fu_106_p2();
    void thread_tmp_3_i_fu_130_p2();
    void thread_tmp_4_i_fu_142_p2();
    void thread_tmp_8_fu_154_p2();
    void thread_tmp_9_fu_40_opcode();
    void thread_tmp_9_fu_40_p0();
    void thread_tmp_9_fu_40_p1();
    void thread_tmp_fu_112_p2();
    void thread_tmp_i_7_fu_94_p2();
    void thread_tmp_i_fu_88_p2();
    void thread_tmp_s_fu_158_p2();
    void thread_x_fp_sig_V_fu_169_p2();
};

}

using namespace ap_rtl;

#endif
