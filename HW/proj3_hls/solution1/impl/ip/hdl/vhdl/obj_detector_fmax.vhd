-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2015.2
-- Copyright (C) 2015 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity obj_detector_fmax is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    x : IN STD_LOGIC_VECTOR (63 downto 0);
    y : IN STD_LOGIC_VECTOR (63 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (63 downto 0) );
end;


architecture behav of obj_detector_fmax is 
    constant ap_true : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv52_0 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000000000000000";
    constant ap_const_lv11_7FF : STD_LOGIC_VECTOR (10 downto 0) := "11111111111";
    constant ap_const_lv52_8000000000000 : STD_LOGIC_VECTOR (51 downto 0) := "1000000000000000000000000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';

    signal y_read_reg_250 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_y_read_reg_250_pp0_it1 : STD_LOGIC_VECTOR (63 downto 0);
    signal x_read_reg_258 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_x_read_reg_258_pp0_it1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_6_reg_265 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_p_Result_6_reg_265_pp0_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal loc_V_1_fu_66_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal loc_V_1_reg_270 : STD_LOGIC_VECTOR (51 downto 0);
    signal ap_reg_ppstg_loc_V_1_reg_270_pp0_it1 : STD_LOGIC_VECTOR (51 downto 0);
    signal or_cond2_i_fu_124_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond2_i_reg_275 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond2_i_reg_275_pp0_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond3_i_fu_136_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond3_i_reg_282 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond3_i_reg_282_pp0_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond4_i_fu_148_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond4_i_reg_289 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond4_i_reg_289_pp0_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_fu_158_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_297 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_fu_40_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_9_fu_40_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Val2_s_fu_44_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Val2_1_fu_70_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal loc_V_fu_56_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal loc_V_2_fu_74_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal loc_V_3_fu_84_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_i_7_fu_94_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_i_fu_100_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_fu_88_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_i_fu_106_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp1_fu_118_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_112_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_i_fu_130_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_i_fu_142_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_fu_154_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_fu_40_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_fp_sig_V_fu_169_p2 : STD_LOGIC_VECTOR (51 downto 0);
    signal p_Result_s_fu_174_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal sel_tmp1_fu_187_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp2_fu_191_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal res_fu_164_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal res_1_fu_183_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal res_2_fu_196_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal sel_tmp7_demorgan_fu_210_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp7_fu_214_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp8_fu_220_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal res_3_fu_204_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal sel_tmp_fu_232_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp3_fu_237_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal res_4_fu_225_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_9_fu_40_opcode : STD_LOGIC_VECTOR (4 downto 0);

    component obj_detector_dcmp_64ns_64ns_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;



begin
    obj_detector_dcmp_64ns_64ns_1_1_U28 : component obj_detector_dcmp_64ns_64ns_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 1)
    port map (
        din0 => tmp_9_fu_40_p0,
        din1 => tmp_9_fu_40_p1,
        opcode => tmp_9_fu_40_opcode,
        dout => tmp_9_fu_40_p2);





    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_true = ap_true)) then
                ap_reg_ppstg_loc_V_1_reg_270_pp0_it1 <= loc_V_1_reg_270;
                ap_reg_ppstg_or_cond2_i_reg_275_pp0_it1 <= or_cond2_i_reg_275;
                ap_reg_ppstg_or_cond3_i_reg_282_pp0_it1 <= or_cond3_i_reg_282;
                ap_reg_ppstg_or_cond4_i_reg_289_pp0_it1 <= or_cond4_i_reg_289;
                ap_reg_ppstg_p_Result_6_reg_265_pp0_it1 <= p_Result_6_reg_265;
                ap_reg_ppstg_x_read_reg_258_pp0_it1 <= x_read_reg_258;
                ap_reg_ppstg_y_read_reg_250_pp0_it1 <= y_read_reg_250;
                loc_V_1_reg_270 <= loc_V_1_fu_66_p1;
                or_cond2_i_reg_275 <= or_cond2_i_fu_124_p2;
                or_cond3_i_reg_282 <= or_cond3_i_fu_136_p2;
                or_cond4_i_reg_289 <= or_cond4_i_fu_148_p2;
                p_Result_6_reg_265 <= p_Val2_s_fu_44_p1(63 downto 63);
                x_read_reg_258 <= x;
                y_read_reg_250 <= y;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((or_cond2_i_reg_275 = ap_const_lv1_0)) then
                tmp_s_reg_297 <= tmp_s_fu_158_p2;
            end if;
        end if;
    end process;
    ap_return <= 
        ap_reg_ppstg_x_read_reg_258_pp0_it1 when (sel_tmp3_fu_237_p2(0) = '1') else 
        res_4_fu_225_p3;
    loc_V_1_fu_66_p1 <= p_Val2_s_fu_44_p1(52 - 1 downto 0);
    loc_V_2_fu_74_p4 <= p_Val2_1_fu_70_p1(62 downto 52);
    loc_V_3_fu_84_p1 <= p_Val2_1_fu_70_p1(52 - 1 downto 0);
    loc_V_fu_56_p4 <= p_Val2_s_fu_44_p1(62 downto 52);
    or_cond2_i_fu_124_p2 <= (tmp1_fu_118_p2 and tmp_fu_112_p2);
    or_cond3_i_fu_136_p2 <= (tmp_3_i_fu_130_p2 or tmp_i_7_fu_94_p2);
    or_cond4_i_fu_148_p2 <= (tmp_4_i_fu_142_p2 or tmp_2_i_fu_106_p2);
    p_Result_s_fu_174_p4 <= ((ap_reg_ppstg_p_Result_6_reg_265_pp0_it1 & ap_const_lv11_7FF) & x_fp_sig_V_fu_169_p2);
    p_Val2_1_fu_70_p1 <= y;
    p_Val2_s_fu_44_p1 <= x;
    res_1_fu_183_p1 <= p_Result_s_fu_174_p4;
    res_2_fu_196_p3 <= 
        res_fu_164_p3 when (sel_tmp2_fu_191_p2(0) = '1') else 
        res_1_fu_183_p1;
    res_3_fu_204_p3 <= 
        ap_reg_ppstg_y_read_reg_250_pp0_it1 when (ap_reg_ppstg_or_cond2_i_reg_275_pp0_it1(0) = '1') else 
        res_2_fu_196_p3;
    res_4_fu_225_p3 <= 
        ap_reg_ppstg_y_read_reg_250_pp0_it1 when (sel_tmp8_fu_220_p2(0) = '1') else 
        res_3_fu_204_p3;
    res_fu_164_p3 <= 
        ap_reg_ppstg_x_read_reg_258_pp0_it1 when (tmp_s_reg_297(0) = '1') else 
        ap_reg_ppstg_y_read_reg_250_pp0_it1;
    sel_tmp1_fu_187_p2 <= (ap_reg_ppstg_or_cond2_i_reg_275_pp0_it1 xor ap_reg_ppstg_or_cond3_i_reg_282_pp0_it1);
    sel_tmp2_fu_191_p2 <= (sel_tmp1_fu_187_p2 and ap_reg_ppstg_or_cond4_i_reg_289_pp0_it1);
    sel_tmp3_fu_237_p2 <= (sel_tmp1_fu_187_p2 and sel_tmp_fu_232_p2);
    sel_tmp7_demorgan_fu_210_p2 <= (ap_reg_ppstg_or_cond2_i_reg_275_pp0_it1 or ap_reg_ppstg_or_cond3_i_reg_282_pp0_it1);
    sel_tmp7_fu_214_p2 <= (sel_tmp7_demorgan_fu_210_p2 xor ap_const_lv1_1);
    sel_tmp8_fu_220_p2 <= (ap_reg_ppstg_or_cond4_i_reg_289_pp0_it1 and sel_tmp7_fu_214_p2);
    sel_tmp_fu_232_p2 <= (ap_reg_ppstg_or_cond4_i_reg_289_pp0_it1 xor ap_const_lv1_1);
    tmp1_fu_118_p2 <= (tmp_i_fu_88_p2 and tmp_2_i_fu_106_p2);
    tmp_1_i_fu_100_p2 <= "1" when (loc_V_2_fu_74_p4 = ap_const_lv11_0) else "0";
    tmp_2_i_fu_106_p2 <= "1" when (loc_V_3_fu_84_p1 = ap_const_lv52_0) else "0";
    tmp_3_i_fu_130_p2 <= "0" when (loc_V_fu_56_p4 = ap_const_lv11_7FF) else "1";
    tmp_4_i_fu_142_p2 <= "0" when (loc_V_2_fu_74_p4 = ap_const_lv11_7FF) else "1";
    tmp_8_fu_154_p2 <= (or_cond3_i_reg_282 and or_cond4_i_reg_289);
    tmp_9_fu_40_opcode <= ap_const_lv5_2;
    tmp_9_fu_40_p0 <= x_read_reg_258;
    tmp_9_fu_40_p1 <= y_read_reg_250;
    tmp_fu_112_p2 <= (tmp_i_7_fu_94_p2 and tmp_1_i_fu_100_p2);
    tmp_i_7_fu_94_p2 <= "1" when (loc_V_1_fu_66_p1 = ap_const_lv52_0) else "0";
    tmp_i_fu_88_p2 <= "1" when (loc_V_fu_56_p4 = ap_const_lv11_0) else "0";
    tmp_s_fu_158_p2 <= (tmp_8_fu_154_p2 and tmp_9_fu_40_p2);
    x_fp_sig_V_fu_169_p2 <= (ap_reg_ppstg_loc_V_1_reg_270_pp0_it1 or ap_const_lv52_8000000000000);
end behav;
