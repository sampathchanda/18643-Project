// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.2
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="obj_detector,hls_ip_2015_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=10.738800,HLS_SYN_LAT=38513,HLS_SYN_TPT=none,HLS_SYN_MEM=50,HLS_SYN_DSP=82,HLS_SYN_FF=38217,HLS_SYN_LUT=42870}" *)

module obj_detector (
        s_axi_AXILiteS_AWVALID,
        s_axi_AXILiteS_AWREADY,
        s_axi_AXILiteS_AWADDR,
        s_axi_AXILiteS_WVALID,
        s_axi_AXILiteS_WREADY,
        s_axi_AXILiteS_WDATA,
        s_axi_AXILiteS_WSTRB,
        s_axi_AXILiteS_ARVALID,
        s_axi_AXILiteS_ARREADY,
        s_axi_AXILiteS_ARADDR,
        s_axi_AXILiteS_RVALID,
        s_axi_AXILiteS_RREADY,
        s_axi_AXILiteS_RDATA,
        s_axi_AXILiteS_RRESP,
        s_axi_AXILiteS_BVALID,
        s_axi_AXILiteS_BREADY,
        s_axi_AXILiteS_BRESP,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        ap_clk,
        ap_rst_n,
        m_axi_HP0_AWVALID,
        m_axi_HP0_AWREADY,
        m_axi_HP0_AWADDR,
        m_axi_HP0_AWID,
        m_axi_HP0_AWLEN,
        m_axi_HP0_AWSIZE,
        m_axi_HP0_AWBURST,
        m_axi_HP0_AWLOCK,
        m_axi_HP0_AWCACHE,
        m_axi_HP0_AWPROT,
        m_axi_HP0_AWQOS,
        m_axi_HP0_AWREGION,
        m_axi_HP0_AWUSER,
        m_axi_HP0_WVALID,
        m_axi_HP0_WREADY,
        m_axi_HP0_WDATA,
        m_axi_HP0_WSTRB,
        m_axi_HP0_WLAST,
        m_axi_HP0_WID,
        m_axi_HP0_WUSER,
        m_axi_HP0_ARVALID,
        m_axi_HP0_ARREADY,
        m_axi_HP0_ARADDR,
        m_axi_HP0_ARID,
        m_axi_HP0_ARLEN,
        m_axi_HP0_ARSIZE,
        m_axi_HP0_ARBURST,
        m_axi_HP0_ARLOCK,
        m_axi_HP0_ARCACHE,
        m_axi_HP0_ARPROT,
        m_axi_HP0_ARQOS,
        m_axi_HP0_ARREGION,
        m_axi_HP0_ARUSER,
        m_axi_HP0_RVALID,
        m_axi_HP0_RREADY,
        m_axi_HP0_RDATA,
        m_axi_HP0_RLAST,
        m_axi_HP0_RID,
        m_axi_HP0_RUSER,
        m_axi_HP0_RRESP,
        m_axi_HP0_BVALID,
        m_axi_HP0_BREADY,
        m_axi_HP0_BRESP,
        m_axi_HP0_BID,
        m_axi_HP0_BUSER,
        m_axi_HP1_AWVALID,
        m_axi_HP1_AWREADY,
        m_axi_HP1_AWADDR,
        m_axi_HP1_AWID,
        m_axi_HP1_AWLEN,
        m_axi_HP1_AWSIZE,
        m_axi_HP1_AWBURST,
        m_axi_HP1_AWLOCK,
        m_axi_HP1_AWCACHE,
        m_axi_HP1_AWPROT,
        m_axi_HP1_AWQOS,
        m_axi_HP1_AWREGION,
        m_axi_HP1_AWUSER,
        m_axi_HP1_WVALID,
        m_axi_HP1_WREADY,
        m_axi_HP1_WDATA,
        m_axi_HP1_WSTRB,
        m_axi_HP1_WLAST,
        m_axi_HP1_WID,
        m_axi_HP1_WUSER,
        m_axi_HP1_ARVALID,
        m_axi_HP1_ARREADY,
        m_axi_HP1_ARADDR,
        m_axi_HP1_ARID,
        m_axi_HP1_ARLEN,
        m_axi_HP1_ARSIZE,
        m_axi_HP1_ARBURST,
        m_axi_HP1_ARLOCK,
        m_axi_HP1_ARCACHE,
        m_axi_HP1_ARPROT,
        m_axi_HP1_ARQOS,
        m_axi_HP1_ARREGION,
        m_axi_HP1_ARUSER,
        m_axi_HP1_RVALID,
        m_axi_HP1_RREADY,
        m_axi_HP1_RDATA,
        m_axi_HP1_RLAST,
        m_axi_HP1_RID,
        m_axi_HP1_RUSER,
        m_axi_HP1_RRESP,
        m_axi_HP1_BVALID,
        m_axi_HP1_BREADY,
        m_axi_HP1_BRESP,
        m_axi_HP1_BID,
        m_axi_HP1_BUSER,
        m_axi_HP2_AWVALID,
        m_axi_HP2_AWREADY,
        m_axi_HP2_AWADDR,
        m_axi_HP2_AWID,
        m_axi_HP2_AWLEN,
        m_axi_HP2_AWSIZE,
        m_axi_HP2_AWBURST,
        m_axi_HP2_AWLOCK,
        m_axi_HP2_AWCACHE,
        m_axi_HP2_AWPROT,
        m_axi_HP2_AWQOS,
        m_axi_HP2_AWREGION,
        m_axi_HP2_AWUSER,
        m_axi_HP2_WVALID,
        m_axi_HP2_WREADY,
        m_axi_HP2_WDATA,
        m_axi_HP2_WSTRB,
        m_axi_HP2_WLAST,
        m_axi_HP2_WID,
        m_axi_HP2_WUSER,
        m_axi_HP2_ARVALID,
        m_axi_HP2_ARREADY,
        m_axi_HP2_ARADDR,
        m_axi_HP2_ARID,
        m_axi_HP2_ARLEN,
        m_axi_HP2_ARSIZE,
        m_axi_HP2_ARBURST,
        m_axi_HP2_ARLOCK,
        m_axi_HP2_ARCACHE,
        m_axi_HP2_ARPROT,
        m_axi_HP2_ARQOS,
        m_axi_HP2_ARREGION,
        m_axi_HP2_ARUSER,
        m_axi_HP2_RVALID,
        m_axi_HP2_RREADY,
        m_axi_HP2_RDATA,
        m_axi_HP2_RLAST,
        m_axi_HP2_RID,
        m_axi_HP2_RUSER,
        m_axi_HP2_RRESP,
        m_axi_HP2_BVALID,
        m_axi_HP2_BREADY,
        m_axi_HP2_BRESP,
        m_axi_HP2_BID,
        m_axi_HP2_BUSER,
        m_axi_HP3_AWVALID,
        m_axi_HP3_AWREADY,
        m_axi_HP3_AWADDR,
        m_axi_HP3_AWID,
        m_axi_HP3_AWLEN,
        m_axi_HP3_AWSIZE,
        m_axi_HP3_AWBURST,
        m_axi_HP3_AWLOCK,
        m_axi_HP3_AWCACHE,
        m_axi_HP3_AWPROT,
        m_axi_HP3_AWQOS,
        m_axi_HP3_AWREGION,
        m_axi_HP3_AWUSER,
        m_axi_HP3_WVALID,
        m_axi_HP3_WREADY,
        m_axi_HP3_WDATA,
        m_axi_HP3_WSTRB,
        m_axi_HP3_WLAST,
        m_axi_HP3_WID,
        m_axi_HP3_WUSER,
        m_axi_HP3_ARVALID,
        m_axi_HP3_ARREADY,
        m_axi_HP3_ARADDR,
        m_axi_HP3_ARID,
        m_axi_HP3_ARLEN,
        m_axi_HP3_ARSIZE,
        m_axi_HP3_ARBURST,
        m_axi_HP3_ARLOCK,
        m_axi_HP3_ARCACHE,
        m_axi_HP3_ARPROT,
        m_axi_HP3_ARQOS,
        m_axi_HP3_ARREGION,
        m_axi_HP3_ARUSER,
        m_axi_HP3_RVALID,
        m_axi_HP3_RREADY,
        m_axi_HP3_RDATA,
        m_axi_HP3_RLAST,
        m_axi_HP3_RID,
        m_axi_HP3_RUSER,
        m_axi_HP3_RRESP,
        m_axi_HP3_BVALID,
        m_axi_HP3_BREADY,
        m_axi_HP3_BRESP,
        m_axi_HP3_BID,
        m_axi_HP3_BUSER,
        interrupt
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 46'b1;
parameter    ap_ST_st2_fsm_1 = 46'b10;
parameter    ap_ST_st3_fsm_2 = 46'b100;
parameter    ap_ST_st4_fsm_3 = 46'b1000;
parameter    ap_ST_st5_fsm_4 = 46'b10000;
parameter    ap_ST_st6_fsm_5 = 46'b100000;
parameter    ap_ST_st7_fsm_6 = 46'b1000000;
parameter    ap_ST_pp0_stg0_fsm_7 = 46'b10000000;
parameter    ap_ST_st11_fsm_8 = 46'b100000000;
parameter    ap_ST_st12_fsm_9 = 46'b1000000000;
parameter    ap_ST_st13_fsm_10 = 46'b10000000000;
parameter    ap_ST_st14_fsm_11 = 46'b100000000000;
parameter    ap_ST_st15_fsm_12 = 46'b1000000000000;
parameter    ap_ST_st16_fsm_13 = 46'b10000000000000;
parameter    ap_ST_pp1_stg0_fsm_14 = 46'b100000000000000;
parameter    ap_ST_st20_fsm_15 = 46'b1000000000000000;
parameter    ap_ST_st21_fsm_16 = 46'b10000000000000000;
parameter    ap_ST_st22_fsm_17 = 46'b100000000000000000;
parameter    ap_ST_st23_fsm_18 = 46'b1000000000000000000;
parameter    ap_ST_st24_fsm_19 = 46'b10000000000000000000;
parameter    ap_ST_st25_fsm_20 = 46'b100000000000000000000;
parameter    ap_ST_pp2_stg0_fsm_21 = 46'b1000000000000000000000;
parameter    ap_ST_st29_fsm_22 = 46'b10000000000000000000000;
parameter    ap_ST_st30_fsm_23 = 46'b100000000000000000000000;
parameter    ap_ST_st31_fsm_24 = 46'b1000000000000000000000000;
parameter    ap_ST_st32_fsm_25 = 46'b10000000000000000000000000;
parameter    ap_ST_st33_fsm_26 = 46'b100000000000000000000000000;
parameter    ap_ST_st34_fsm_27 = 46'b1000000000000000000000000000;
parameter    ap_ST_st35_fsm_28 = 46'b10000000000000000000000000000;
parameter    ap_ST_pp3_stg0_fsm_29 = 46'b100000000000000000000000000000;
parameter    ap_ST_pp3_stg1_fsm_30 = 46'b1000000000000000000000000000000;
parameter    ap_ST_pp3_stg2_fsm_31 = 46'b10000000000000000000000000000000;
parameter    ap_ST_pp3_stg3_fsm_32 = 46'b100000000000000000000000000000000;
parameter    ap_ST_pp3_stg4_fsm_33 = 46'b1000000000000000000000000000000000;
parameter    ap_ST_pp4_stg0_fsm_34 = 46'b10000000000000000000000000000000000;
parameter    ap_ST_pp4_stg1_fsm_35 = 46'b100000000000000000000000000000000000;
parameter    ap_ST_pp4_stg2_fsm_36 = 46'b1000000000000000000000000000000000000;
parameter    ap_ST_pp4_stg3_fsm_37 = 46'b10000000000000000000000000000000000000;
parameter    ap_ST_pp4_stg4_fsm_38 = 46'b100000000000000000000000000000000000000;
parameter    ap_ST_st56_fsm_39 = 46'b1000000000000000000000000000000000000000;
parameter    ap_ST_st57_fsm_40 = 46'b10000000000000000000000000000000000000000;
parameter    ap_ST_pp5_stg0_fsm_41 = 46'b100000000000000000000000000000000000000000;
parameter    ap_ST_st60_fsm_42 = 46'b1000000000000000000000000000000000000000000;
parameter    ap_ST_st61_fsm_43 = 46'b10000000000000000000000000000000000000000000;
parameter    ap_ST_st62_fsm_44 = 46'b100000000000000000000000000000000000000000000;
parameter    ap_ST_st63_fsm_45 = 46'b1000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    C_S_AXI_AXILITES_DATA_WIDTH = 32;
parameter    ap_const_int64_8 = 8;
parameter    C_S_AXI_AXILITES_ADDR_WIDTH = 6;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 5;
parameter    C_M_AXI_HP0_ID_WIDTH = 1;
parameter    C_M_AXI_HP0_ADDR_WIDTH = 32;
parameter    C_M_AXI_HP0_DATA_WIDTH = 32;
parameter    C_M_AXI_HP0_AWUSER_WIDTH = 1;
parameter    C_M_AXI_HP0_ARUSER_WIDTH = 1;
parameter    C_M_AXI_HP0_WUSER_WIDTH = 1;
parameter    C_M_AXI_HP0_RUSER_WIDTH = 1;
parameter    C_M_AXI_HP0_BUSER_WIDTH = 1;
parameter    C_M_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_HP0_USER_VALUE = 0;
parameter    C_M_AXI_HP0_PROT_VALUE = 0;
parameter    C_M_AXI_HP0_CACHE_VALUE = 3;
parameter    C_M_AXI_HP1_ID_WIDTH = 1;
parameter    C_M_AXI_HP1_ADDR_WIDTH = 32;
parameter    C_M_AXI_HP1_DATA_WIDTH = 32;
parameter    C_M_AXI_HP1_AWUSER_WIDTH = 1;
parameter    C_M_AXI_HP1_ARUSER_WIDTH = 1;
parameter    C_M_AXI_HP1_WUSER_WIDTH = 1;
parameter    C_M_AXI_HP1_RUSER_WIDTH = 1;
parameter    C_M_AXI_HP1_BUSER_WIDTH = 1;
parameter    C_M_AXI_HP1_USER_VALUE = 0;
parameter    C_M_AXI_HP1_PROT_VALUE = 0;
parameter    C_M_AXI_HP1_CACHE_VALUE = 3;
parameter    C_M_AXI_HP2_ID_WIDTH = 1;
parameter    C_M_AXI_HP2_ADDR_WIDTH = 32;
parameter    C_M_AXI_HP2_DATA_WIDTH = 32;
parameter    C_M_AXI_HP2_AWUSER_WIDTH = 1;
parameter    C_M_AXI_HP2_ARUSER_WIDTH = 1;
parameter    C_M_AXI_HP2_WUSER_WIDTH = 1;
parameter    C_M_AXI_HP2_RUSER_WIDTH = 1;
parameter    C_M_AXI_HP2_BUSER_WIDTH = 1;
parameter    C_M_AXI_HP2_USER_VALUE = 0;
parameter    C_M_AXI_HP2_PROT_VALUE = 0;
parameter    C_M_AXI_HP2_CACHE_VALUE = 3;
parameter    C_M_AXI_HP3_ID_WIDTH = 1;
parameter    C_M_AXI_HP3_ADDR_WIDTH = 32;
parameter    C_M_AXI_HP3_DATA_WIDTH = 32;
parameter    C_M_AXI_HP3_AWUSER_WIDTH = 1;
parameter    C_M_AXI_HP3_ARUSER_WIDTH = 1;
parameter    C_M_AXI_HP3_WUSER_WIDTH = 1;
parameter    C_M_AXI_HP3_RUSER_WIDTH = 1;
parameter    C_M_AXI_HP3_BUSER_WIDTH = 1;
parameter    C_M_AXI_HP3_USER_VALUE = 0;
parameter    C_M_AXI_HP3_PROT_VALUE = 0;
parameter    C_M_AXI_HP3_CACHE_VALUE = 3;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_E = 32'b1110;
parameter    ap_const_lv32_15 = 32'b10101;
parameter    ap_const_lv32_1E = 32'b11110;
parameter    ap_const_lv32_23 = 32'b100011;
parameter    ap_const_lv32_21 = 32'b100001;
parameter    ap_const_lv32_26 = 32'b100110;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv32_16 = 32'b10110;
parameter    ap_const_lv32_18 = 32'b11000;
parameter    ap_const_lv32_1A = 32'b11010;
parameter    ap_const_lv32_1D = 32'b11101;
parameter    ap_const_lv32_22 = 32'b100010;
parameter    ap_const_lv32_28 = 32'b101000;
parameter    ap_const_lv32_29 = 32'b101001;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv32_14 = 32'b10100;
parameter    ap_const_lv32_1C = 32'b11100;
parameter    ap_const_lv10_0 = 10'b0000000000;
parameter    ap_const_lv8_0 = 8'b00000000;
parameter    ap_const_lv11_0 = 11'b00000000000;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv32_19 = 32'b11001;
parameter    ap_const_lv32_1B = 32'b11011;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv32_27 = 32'b100111;
parameter    ap_const_lv32_310 = 32'b1100010000;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv32_96 = 32'b10010110;
parameter    ap_const_lv32_6C0 = 32'b11011000000;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv4_F = 4'b1111;
parameter    ap_const_lv32_2D = 32'b101101;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv10_310 = 10'b1100010000;
parameter    ap_const_lv10_1 = 10'b1;
parameter    ap_const_lv8_96 = 8'b10010110;
parameter    ap_const_lv8_1 = 8'b1;
parameter    ap_const_lv11_6C0 = 11'b11011000000;
parameter    ap_const_lv11_1 = 11'b1;
parameter    ap_const_lv3_6 = 3'b110;
parameter    ap_const_lv3_1 = 3'b1;
parameter    ap_const_lv10_360 = 10'b1101100000;
parameter    ap_const_lv11_360 = 11'b1101100000;
parameter    ap_const_lv2_2 = 2'b10;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_true = 1'b1;
parameter    C_S_AXI_AXILITES_WSTRB_WIDTH = (C_S_AXI_AXILITES_DATA_WIDTH / ap_const_int64_8);
parameter    C_S_AXI_WSTRB_WIDTH = (C_S_AXI_DATA_WIDTH / ap_const_int64_8);
parameter    C_S_AXI_CONTROL_WSTRB_WIDTH = (C_S_AXI_CONTROL_DATA_WIDTH / ap_const_int64_8);
parameter    C_M_AXI_HP0_WSTRB_WIDTH = (C_M_AXI_HP0_DATA_WIDTH / ap_const_int64_8);
parameter    C_M_AXI_WSTRB_WIDTH = (C_M_AXI_DATA_WIDTH / ap_const_int64_8);
parameter    C_M_AXI_HP1_WSTRB_WIDTH = (C_M_AXI_HP1_DATA_WIDTH / ap_const_int64_8);
parameter    C_M_AXI_HP2_WSTRB_WIDTH = (C_M_AXI_HP2_DATA_WIDTH / ap_const_int64_8);
parameter    C_M_AXI_HP3_WSTRB_WIDTH = (C_M_AXI_HP3_DATA_WIDTH / ap_const_int64_8);

input   s_axi_AXILiteS_AWVALID;
output   s_axi_AXILiteS_AWREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1 : 0] s_axi_AXILiteS_AWADDR;
input   s_axi_AXILiteS_WVALID;
output   s_axi_AXILiteS_WREADY;
input  [C_S_AXI_AXILITES_DATA_WIDTH - 1 : 0] s_axi_AXILiteS_WDATA;
input  [C_S_AXI_AXILITES_WSTRB_WIDTH - 1 : 0] s_axi_AXILiteS_WSTRB;
input   s_axi_AXILiteS_ARVALID;
output   s_axi_AXILiteS_ARREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1 : 0] s_axi_AXILiteS_ARADDR;
output   s_axi_AXILiteS_RVALID;
input   s_axi_AXILiteS_RREADY;
output  [C_S_AXI_AXILITES_DATA_WIDTH - 1 : 0] s_axi_AXILiteS_RDATA;
output  [1:0] s_axi_AXILiteS_RRESP;
output   s_axi_AXILiteS_BVALID;
input   s_axi_AXILiteS_BREADY;
output  [1:0] s_axi_AXILiteS_BRESP;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1 : 0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1 : 0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1 : 0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1 : 0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1 : 0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
input   ap_clk;
input   ap_rst_n;
output   m_axi_HP0_AWVALID;
input   m_axi_HP0_AWREADY;
output  [C_M_AXI_HP0_ADDR_WIDTH - 1 : 0] m_axi_HP0_AWADDR;
output  [C_M_AXI_HP0_ID_WIDTH - 1 : 0] m_axi_HP0_AWID;
output  [7:0] m_axi_HP0_AWLEN;
output  [2:0] m_axi_HP0_AWSIZE;
output  [1:0] m_axi_HP0_AWBURST;
output  [1:0] m_axi_HP0_AWLOCK;
output  [3:0] m_axi_HP0_AWCACHE;
output  [2:0] m_axi_HP0_AWPROT;
output  [3:0] m_axi_HP0_AWQOS;
output  [3:0] m_axi_HP0_AWREGION;
output  [C_M_AXI_HP0_AWUSER_WIDTH - 1 : 0] m_axi_HP0_AWUSER;
output   m_axi_HP0_WVALID;
input   m_axi_HP0_WREADY;
output  [C_M_AXI_HP0_DATA_WIDTH - 1 : 0] m_axi_HP0_WDATA;
output  [C_M_AXI_HP0_WSTRB_WIDTH - 1 : 0] m_axi_HP0_WSTRB;
output   m_axi_HP0_WLAST;
output  [C_M_AXI_HP0_ID_WIDTH - 1 : 0] m_axi_HP0_WID;
output  [C_M_AXI_HP0_WUSER_WIDTH - 1 : 0] m_axi_HP0_WUSER;
output   m_axi_HP0_ARVALID;
input   m_axi_HP0_ARREADY;
output  [C_M_AXI_HP0_ADDR_WIDTH - 1 : 0] m_axi_HP0_ARADDR;
output  [C_M_AXI_HP0_ID_WIDTH - 1 : 0] m_axi_HP0_ARID;
output  [7:0] m_axi_HP0_ARLEN;
output  [2:0] m_axi_HP0_ARSIZE;
output  [1:0] m_axi_HP0_ARBURST;
output  [1:0] m_axi_HP0_ARLOCK;
output  [3:0] m_axi_HP0_ARCACHE;
output  [2:0] m_axi_HP0_ARPROT;
output  [3:0] m_axi_HP0_ARQOS;
output  [3:0] m_axi_HP0_ARREGION;
output  [C_M_AXI_HP0_ARUSER_WIDTH - 1 : 0] m_axi_HP0_ARUSER;
input   m_axi_HP0_RVALID;
output   m_axi_HP0_RREADY;
input  [C_M_AXI_HP0_DATA_WIDTH - 1 : 0] m_axi_HP0_RDATA;
input   m_axi_HP0_RLAST;
input  [C_M_AXI_HP0_ID_WIDTH - 1 : 0] m_axi_HP0_RID;
input  [C_M_AXI_HP0_RUSER_WIDTH - 1 : 0] m_axi_HP0_RUSER;
input  [1:0] m_axi_HP0_RRESP;
input   m_axi_HP0_BVALID;
output   m_axi_HP0_BREADY;
input  [1:0] m_axi_HP0_BRESP;
input  [C_M_AXI_HP0_ID_WIDTH - 1 : 0] m_axi_HP0_BID;
input  [C_M_AXI_HP0_BUSER_WIDTH - 1 : 0] m_axi_HP0_BUSER;
output   m_axi_HP1_AWVALID;
input   m_axi_HP1_AWREADY;
output  [C_M_AXI_HP1_ADDR_WIDTH - 1 : 0] m_axi_HP1_AWADDR;
output  [C_M_AXI_HP1_ID_WIDTH - 1 : 0] m_axi_HP1_AWID;
output  [7:0] m_axi_HP1_AWLEN;
output  [2:0] m_axi_HP1_AWSIZE;
output  [1:0] m_axi_HP1_AWBURST;
output  [1:0] m_axi_HP1_AWLOCK;
output  [3:0] m_axi_HP1_AWCACHE;
output  [2:0] m_axi_HP1_AWPROT;
output  [3:0] m_axi_HP1_AWQOS;
output  [3:0] m_axi_HP1_AWREGION;
output  [C_M_AXI_HP1_AWUSER_WIDTH - 1 : 0] m_axi_HP1_AWUSER;
output   m_axi_HP1_WVALID;
input   m_axi_HP1_WREADY;
output  [C_M_AXI_HP1_DATA_WIDTH - 1 : 0] m_axi_HP1_WDATA;
output  [C_M_AXI_HP1_WSTRB_WIDTH - 1 : 0] m_axi_HP1_WSTRB;
output   m_axi_HP1_WLAST;
output  [C_M_AXI_HP1_ID_WIDTH - 1 : 0] m_axi_HP1_WID;
output  [C_M_AXI_HP1_WUSER_WIDTH - 1 : 0] m_axi_HP1_WUSER;
output   m_axi_HP1_ARVALID;
input   m_axi_HP1_ARREADY;
output  [C_M_AXI_HP1_ADDR_WIDTH - 1 : 0] m_axi_HP1_ARADDR;
output  [C_M_AXI_HP1_ID_WIDTH - 1 : 0] m_axi_HP1_ARID;
output  [7:0] m_axi_HP1_ARLEN;
output  [2:0] m_axi_HP1_ARSIZE;
output  [1:0] m_axi_HP1_ARBURST;
output  [1:0] m_axi_HP1_ARLOCK;
output  [3:0] m_axi_HP1_ARCACHE;
output  [2:0] m_axi_HP1_ARPROT;
output  [3:0] m_axi_HP1_ARQOS;
output  [3:0] m_axi_HP1_ARREGION;
output  [C_M_AXI_HP1_ARUSER_WIDTH - 1 : 0] m_axi_HP1_ARUSER;
input   m_axi_HP1_RVALID;
output   m_axi_HP1_RREADY;
input  [C_M_AXI_HP1_DATA_WIDTH - 1 : 0] m_axi_HP1_RDATA;
input   m_axi_HP1_RLAST;
input  [C_M_AXI_HP1_ID_WIDTH - 1 : 0] m_axi_HP1_RID;
input  [C_M_AXI_HP1_RUSER_WIDTH - 1 : 0] m_axi_HP1_RUSER;
input  [1:0] m_axi_HP1_RRESP;
input   m_axi_HP1_BVALID;
output   m_axi_HP1_BREADY;
input  [1:0] m_axi_HP1_BRESP;
input  [C_M_AXI_HP1_ID_WIDTH - 1 : 0] m_axi_HP1_BID;
input  [C_M_AXI_HP1_BUSER_WIDTH - 1 : 0] m_axi_HP1_BUSER;
output   m_axi_HP2_AWVALID;
input   m_axi_HP2_AWREADY;
output  [C_M_AXI_HP2_ADDR_WIDTH - 1 : 0] m_axi_HP2_AWADDR;
output  [C_M_AXI_HP2_ID_WIDTH - 1 : 0] m_axi_HP2_AWID;
output  [7:0] m_axi_HP2_AWLEN;
output  [2:0] m_axi_HP2_AWSIZE;
output  [1:0] m_axi_HP2_AWBURST;
output  [1:0] m_axi_HP2_AWLOCK;
output  [3:0] m_axi_HP2_AWCACHE;
output  [2:0] m_axi_HP2_AWPROT;
output  [3:0] m_axi_HP2_AWQOS;
output  [3:0] m_axi_HP2_AWREGION;
output  [C_M_AXI_HP2_AWUSER_WIDTH - 1 : 0] m_axi_HP2_AWUSER;
output   m_axi_HP2_WVALID;
input   m_axi_HP2_WREADY;
output  [C_M_AXI_HP2_DATA_WIDTH - 1 : 0] m_axi_HP2_WDATA;
output  [C_M_AXI_HP2_WSTRB_WIDTH - 1 : 0] m_axi_HP2_WSTRB;
output   m_axi_HP2_WLAST;
output  [C_M_AXI_HP2_ID_WIDTH - 1 : 0] m_axi_HP2_WID;
output  [C_M_AXI_HP2_WUSER_WIDTH - 1 : 0] m_axi_HP2_WUSER;
output   m_axi_HP2_ARVALID;
input   m_axi_HP2_ARREADY;
output  [C_M_AXI_HP2_ADDR_WIDTH - 1 : 0] m_axi_HP2_ARADDR;
output  [C_M_AXI_HP2_ID_WIDTH - 1 : 0] m_axi_HP2_ARID;
output  [7:0] m_axi_HP2_ARLEN;
output  [2:0] m_axi_HP2_ARSIZE;
output  [1:0] m_axi_HP2_ARBURST;
output  [1:0] m_axi_HP2_ARLOCK;
output  [3:0] m_axi_HP2_ARCACHE;
output  [2:0] m_axi_HP2_ARPROT;
output  [3:0] m_axi_HP2_ARQOS;
output  [3:0] m_axi_HP2_ARREGION;
output  [C_M_AXI_HP2_ARUSER_WIDTH - 1 : 0] m_axi_HP2_ARUSER;
input   m_axi_HP2_RVALID;
output   m_axi_HP2_RREADY;
input  [C_M_AXI_HP2_DATA_WIDTH - 1 : 0] m_axi_HP2_RDATA;
input   m_axi_HP2_RLAST;
input  [C_M_AXI_HP2_ID_WIDTH - 1 : 0] m_axi_HP2_RID;
input  [C_M_AXI_HP2_RUSER_WIDTH - 1 : 0] m_axi_HP2_RUSER;
input  [1:0] m_axi_HP2_RRESP;
input   m_axi_HP2_BVALID;
output   m_axi_HP2_BREADY;
input  [1:0] m_axi_HP2_BRESP;
input  [C_M_AXI_HP2_ID_WIDTH - 1 : 0] m_axi_HP2_BID;
input  [C_M_AXI_HP2_BUSER_WIDTH - 1 : 0] m_axi_HP2_BUSER;
output   m_axi_HP3_AWVALID;
input   m_axi_HP3_AWREADY;
output  [C_M_AXI_HP3_ADDR_WIDTH - 1 : 0] m_axi_HP3_AWADDR;
output  [C_M_AXI_HP3_ID_WIDTH - 1 : 0] m_axi_HP3_AWID;
output  [7:0] m_axi_HP3_AWLEN;
output  [2:0] m_axi_HP3_AWSIZE;
output  [1:0] m_axi_HP3_AWBURST;
output  [1:0] m_axi_HP3_AWLOCK;
output  [3:0] m_axi_HP3_AWCACHE;
output  [2:0] m_axi_HP3_AWPROT;
output  [3:0] m_axi_HP3_AWQOS;
output  [3:0] m_axi_HP3_AWREGION;
output  [C_M_AXI_HP3_AWUSER_WIDTH - 1 : 0] m_axi_HP3_AWUSER;
output   m_axi_HP3_WVALID;
input   m_axi_HP3_WREADY;
output  [C_M_AXI_HP3_DATA_WIDTH - 1 : 0] m_axi_HP3_WDATA;
output  [C_M_AXI_HP3_WSTRB_WIDTH - 1 : 0] m_axi_HP3_WSTRB;
output   m_axi_HP3_WLAST;
output  [C_M_AXI_HP3_ID_WIDTH - 1 : 0] m_axi_HP3_WID;
output  [C_M_AXI_HP3_WUSER_WIDTH - 1 : 0] m_axi_HP3_WUSER;
output   m_axi_HP3_ARVALID;
input   m_axi_HP3_ARREADY;
output  [C_M_AXI_HP3_ADDR_WIDTH - 1 : 0] m_axi_HP3_ARADDR;
output  [C_M_AXI_HP3_ID_WIDTH - 1 : 0] m_axi_HP3_ARID;
output  [7:0] m_axi_HP3_ARLEN;
output  [2:0] m_axi_HP3_ARSIZE;
output  [1:0] m_axi_HP3_ARBURST;
output  [1:0] m_axi_HP3_ARLOCK;
output  [3:0] m_axi_HP3_ARCACHE;
output  [2:0] m_axi_HP3_ARPROT;
output  [3:0] m_axi_HP3_ARQOS;
output  [3:0] m_axi_HP3_ARREGION;
output  [C_M_AXI_HP3_ARUSER_WIDTH - 1 : 0] m_axi_HP3_ARUSER;
input   m_axi_HP3_RVALID;
output   m_axi_HP3_RREADY;
input  [C_M_AXI_HP3_DATA_WIDTH - 1 : 0] m_axi_HP3_RDATA;
input   m_axi_HP3_RLAST;
input  [C_M_AXI_HP3_ID_WIDTH - 1 : 0] m_axi_HP3_RID;
input  [C_M_AXI_HP3_RUSER_WIDTH - 1 : 0] m_axi_HP3_RUSER;
input  [1:0] m_axi_HP3_RRESP;
input   m_axi_HP3_BVALID;
output   m_axi_HP3_BREADY;
input  [1:0] m_axi_HP3_BRESP;
input  [C_M_AXI_HP3_ID_WIDTH - 1 : 0] m_axi_HP3_BID;
input  [C_M_AXI_HP3_BUSER_WIDTH - 1 : 0] m_axi_HP3_BUSER;
output   interrupt;

reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [45:0] ap_CS_fsm = 46'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_110;
reg    ap_ready;
wire   [31:0] A;
wire   [31:0] W0;
wire   [31:0] W1;
wire   [31:0] res;
wire    obj_detector_AXILiteS_s_axi_U_ap_dummy_ce;
wire    obj_detector_control_s_axi_U_ap_dummy_ce;
wire    HP0_AWVALID;
wire    HP0_AWREADY;
wire   [31:0] HP0_AWADDR;
wire   [0:0] HP0_AWID;
wire   [31:0] HP0_AWLEN;
wire   [2:0] HP0_AWSIZE;
wire   [1:0] HP0_AWBURST;
wire   [1:0] HP0_AWLOCK;
wire   [3:0] HP0_AWCACHE;
wire   [2:0] HP0_AWPROT;
wire   [3:0] HP0_AWQOS;
wire   [3:0] HP0_AWREGION;
wire   [0:0] HP0_AWUSER;
wire    HP0_WVALID;
wire    HP0_WREADY;
wire   [31:0] HP0_WDATA;
wire   [3:0] HP0_WSTRB;
wire    HP0_WLAST;
wire   [0:0] HP0_WID;
wire   [0:0] HP0_WUSER;
reg    HP0_ARVALID;
wire    HP0_ARREADY;
wire   [31:0] HP0_ARADDR;
wire   [0:0] HP0_ARID;
wire   [31:0] HP0_ARLEN;
wire   [2:0] HP0_ARSIZE;
wire   [1:0] HP0_ARBURST;
wire   [1:0] HP0_ARLOCK;
wire   [3:0] HP0_ARCACHE;
wire   [2:0] HP0_ARPROT;
wire   [3:0] HP0_ARQOS;
wire   [3:0] HP0_ARREGION;
wire   [0:0] HP0_ARUSER;
wire    HP0_RVALID;
reg    HP0_RREADY;
wire   [31:0] HP0_RDATA;
wire    HP0_RLAST;
wire   [0:0] HP0_RID;
wire   [0:0] HP0_RUSER;
wire   [1:0] HP0_RRESP;
wire    HP0_BVALID;
wire    HP0_BREADY;
wire   [1:0] HP0_BRESP;
wire   [0:0] HP0_BID;
wire   [0:0] HP0_BUSER;
wire    obj_detector_HP0_m_axi_U_ap_dummy_ce;
wire    HP1_AWVALID;
wire    HP1_AWREADY;
wire   [31:0] HP1_AWADDR;
wire   [0:0] HP1_AWID;
wire   [31:0] HP1_AWLEN;
wire   [2:0] HP1_AWSIZE;
wire   [1:0] HP1_AWBURST;
wire   [1:0] HP1_AWLOCK;
wire   [3:0] HP1_AWCACHE;
wire   [2:0] HP1_AWPROT;
wire   [3:0] HP1_AWQOS;
wire   [3:0] HP1_AWREGION;
wire   [0:0] HP1_AWUSER;
wire    HP1_WVALID;
wire    HP1_WREADY;
wire   [31:0] HP1_WDATA;
wire   [3:0] HP1_WSTRB;
wire    HP1_WLAST;
wire   [0:0] HP1_WID;
wire   [0:0] HP1_WUSER;
reg    HP1_ARVALID;
wire    HP1_ARREADY;
wire   [31:0] HP1_ARADDR;
wire   [0:0] HP1_ARID;
wire   [31:0] HP1_ARLEN;
wire   [2:0] HP1_ARSIZE;
wire   [1:0] HP1_ARBURST;
wire   [1:0] HP1_ARLOCK;
wire   [3:0] HP1_ARCACHE;
wire   [2:0] HP1_ARPROT;
wire   [3:0] HP1_ARQOS;
wire   [3:0] HP1_ARREGION;
wire   [0:0] HP1_ARUSER;
wire    HP1_RVALID;
reg    HP1_RREADY;
wire   [31:0] HP1_RDATA;
wire    HP1_RLAST;
wire   [0:0] HP1_RID;
wire   [0:0] HP1_RUSER;
wire   [1:0] HP1_RRESP;
wire    HP1_BVALID;
wire    HP1_BREADY;
wire   [1:0] HP1_BRESP;
wire   [0:0] HP1_BID;
wire   [0:0] HP1_BUSER;
wire    obj_detector_HP1_m_axi_U_ap_dummy_ce;
wire    HP2_AWVALID;
wire    HP2_AWREADY;
wire   [31:0] HP2_AWADDR;
wire   [0:0] HP2_AWID;
wire   [31:0] HP2_AWLEN;
wire   [2:0] HP2_AWSIZE;
wire   [1:0] HP2_AWBURST;
wire   [1:0] HP2_AWLOCK;
wire   [3:0] HP2_AWCACHE;
wire   [2:0] HP2_AWPROT;
wire   [3:0] HP2_AWQOS;
wire   [3:0] HP2_AWREGION;
wire   [0:0] HP2_AWUSER;
wire    HP2_WVALID;
wire    HP2_WREADY;
wire   [31:0] HP2_WDATA;
wire   [3:0] HP2_WSTRB;
wire    HP2_WLAST;
wire   [0:0] HP2_WID;
wire   [0:0] HP2_WUSER;
reg    HP2_ARVALID;
wire    HP2_ARREADY;
wire   [31:0] HP2_ARADDR;
wire   [0:0] HP2_ARID;
wire   [31:0] HP2_ARLEN;
wire   [2:0] HP2_ARSIZE;
wire   [1:0] HP2_ARBURST;
wire   [1:0] HP2_ARLOCK;
wire   [3:0] HP2_ARCACHE;
wire   [2:0] HP2_ARPROT;
wire   [3:0] HP2_ARQOS;
wire   [3:0] HP2_ARREGION;
wire   [0:0] HP2_ARUSER;
wire    HP2_RVALID;
reg    HP2_RREADY;
wire   [31:0] HP2_RDATA;
wire    HP2_RLAST;
wire   [0:0] HP2_RID;
wire   [0:0] HP2_RUSER;
wire   [1:0] HP2_RRESP;
wire    HP2_BVALID;
wire    HP2_BREADY;
wire   [1:0] HP2_BRESP;
wire   [0:0] HP2_BID;
wire   [0:0] HP2_BUSER;
wire    obj_detector_HP2_m_axi_U_ap_dummy_ce;
reg    HP3_AWVALID;
wire    HP3_AWREADY;
wire   [31:0] HP3_AWADDR;
wire   [0:0] HP3_AWID;
wire   [31:0] HP3_AWLEN;
wire   [2:0] HP3_AWSIZE;
wire   [1:0] HP3_AWBURST;
wire   [1:0] HP3_AWLOCK;
wire   [3:0] HP3_AWCACHE;
wire   [2:0] HP3_AWPROT;
wire   [3:0] HP3_AWQOS;
wire   [3:0] HP3_AWREGION;
wire   [0:0] HP3_AWUSER;
reg    HP3_WVALID;
wire    HP3_WREADY;
wire   [31:0] HP3_WDATA;
wire   [3:0] HP3_WSTRB;
wire    HP3_WLAST;
wire   [0:0] HP3_WID;
wire   [0:0] HP3_WUSER;
wire    HP3_ARVALID;
wire    HP3_ARREADY;
wire   [31:0] HP3_ARADDR;
wire   [0:0] HP3_ARID;
wire   [31:0] HP3_ARLEN;
wire   [2:0] HP3_ARSIZE;
wire   [1:0] HP3_ARBURST;
wire   [1:0] HP3_ARLOCK;
wire   [3:0] HP3_ARCACHE;
wire   [2:0] HP3_ARPROT;
wire   [3:0] HP3_ARQOS;
wire   [3:0] HP3_ARREGION;
wire   [0:0] HP3_ARUSER;
wire    HP3_RVALID;
wire    HP3_RREADY;
wire   [31:0] HP3_RDATA;
wire    HP3_RLAST;
wire   [0:0] HP3_RID;
wire   [0:0] HP3_RUSER;
wire   [1:0] HP3_RRESP;
wire    HP3_BVALID;
reg    HP3_BREADY;
wire   [1:0] HP3_BRESP;
wire   [0:0] HP3_BID;
wire   [0:0] HP3_BUSER;
wire    obj_detector_HP3_m_axi_U_ap_dummy_ce;
reg   [9:0] indvar_reg_392;
reg   [9:0] ap_reg_ppstg_indvar_reg_392_pp0_it1;
reg    ap_sig_cseq_ST_pp0_stg0_fsm_7;
reg    ap_sig_bdd_631;
reg    ap_reg_ppiten_pp0_it0 = 1'b0;
reg   [0:0] exitcond4_reg_888;
reg    ap_sig_bdd_640;
reg    ap_reg_ppiten_pp0_it1 = 1'b0;
reg    ap_reg_ppiten_pp0_it2 = 1'b0;
reg   [7:0] indvar1_reg_404;
reg   [7:0] ap_reg_ppstg_indvar1_reg_404_pp1_it1;
reg    ap_sig_cseq_ST_pp1_stg0_fsm_14;
reg    ap_sig_bdd_656;
reg    ap_reg_ppiten_pp1_it0 = 1'b0;
reg   [0:0] exitcond3_reg_908;
reg    ap_sig_bdd_664;
reg    ap_reg_ppiten_pp1_it1 = 1'b0;
reg    ap_reg_ppiten_pp1_it2 = 1'b0;
reg   [10:0] indvar2_reg_416;
reg   [10:0] ap_reg_ppstg_indvar2_reg_416_pp2_it1;
reg    ap_sig_cseq_ST_pp2_stg0_fsm_21;
reg    ap_sig_bdd_680;
reg    ap_reg_ppiten_pp2_it0 = 1'b0;
reg   [0:0] exitcond5_reg_928;
reg    ap_sig_bdd_688;
reg    ap_reg_ppiten_pp2_it1 = 1'b0;
reg    ap_reg_ppiten_pp2_it2 = 1'b0;
reg   [31:0] cost_0_reg_464;
reg   [9:0] i_i_reg_476;
reg   [31:0] cost_1_reg_487;
reg   [9:0] i_i1_reg_499;
reg   [1:0] indvar3_reg_510;
wire   [31:0] s3_q0;
reg    ap_sig_cseq_ST_pp3_stg1_fsm_30;
reg    ap_sig_bdd_713;
reg    ap_reg_ppiten_pp3_it0 = 1'b0;
reg    ap_reg_ppiten_pp3_it1 = 1'b0;
reg   [0:0] exitcond_i_reg_966;
reg    ap_sig_cseq_ST_pp4_stg1_fsm_35;
reg    ap_sig_bdd_727;
reg    ap_reg_ppiten_pp4_it0 = 1'b0;
reg    ap_reg_ppiten_pp4_it1 = 1'b0;
reg   [0:0] exitcond_i1_reg_990;
wire   [31:0] local_W1_q0;
wire   [31:0] grp_fu_594_p2;
reg   [31:0] reg_610;
reg    ap_sig_cseq_ST_pp3_stg4_fsm_33;
reg    ap_sig_bdd_746;
reg    ap_sig_cseq_ST_pp4_stg4_fsm_38;
reg    ap_sig_bdd_754;
reg   [29:0] tmp_reg_862;
reg   [29:0] tmp_36_reg_867;
reg   [29:0] tmp_37_reg_872;
reg   [29:0] tmp_38_reg_877;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_bdd_776;
reg    ap_sig_ioackin_HP0_ARREADY;
wire   [0:0] exitcond4_fu_665_p2;
reg   [0:0] ap_reg_ppstg_exitcond4_reg_888_pp0_it1;
wire   [9:0] indvar_next_fu_671_p2;
reg   [9:0] indvar_next_reg_892;
reg   [31:0] HP0_addr_read_reg_897;
reg    ap_sig_cseq_ST_st11_fsm_8;
reg    ap_sig_bdd_799;
reg    ap_sig_ioackin_HP1_ARREADY;
wire   [0:0] exitcond3_fu_692_p2;
reg   [0:0] ap_reg_ppstg_exitcond3_reg_908_pp1_it1;
wire   [7:0] indvar_next1_fu_698_p2;
reg   [7:0] indvar_next1_reg_912;
reg   [31:0] HP1_addr_read_reg_917;
reg    ap_sig_cseq_ST_st20_fsm_15;
reg    ap_sig_bdd_822;
reg    ap_sig_ioackin_HP2_ARREADY;
wire   [0:0] exitcond5_fu_719_p2;
reg   [0:0] ap_reg_ppstg_exitcond5_reg_928_pp2_it1;
wire   [10:0] indvar_next2_fu_725_p2;
reg   [10:0] indvar_next2_reg_932;
reg   [31:0] HP2_addr_read_reg_937;
wire   [2:0] i_1_fu_742_p2;
reg   [2:0] i_1_reg_945;
reg    ap_sig_cseq_ST_st29_fsm_22;
reg    ap_sig_bdd_845;
wire   [2:0] i_2_fu_754_p2;
reg   [2:0] i_2_reg_953;
reg    ap_sig_cseq_ST_st31_fsm_24;
reg    ap_sig_bdd_854;
wire   [2:0] i_3_fu_766_p2;
reg   [2:0] i_3_reg_961;
reg    ap_sig_cseq_ST_st33_fsm_26;
reg    ap_sig_bdd_863;
wire   [0:0] exitcond_i_fu_772_p2;
reg    ap_sig_cseq_ST_pp3_stg0_fsm_29;
reg    ap_sig_bdd_871;
reg   [0:0] ap_reg_ppstg_exitcond_i_reg_966_pp3_it1;
wire   [9:0] i_4_fu_778_p2;
reg   [9:0] i_4_reg_970;
wire   [31:0] grp_fu_588_p2;
wire   [0:0] exitcond_i1_fu_790_p2;
reg    ap_sig_cseq_ST_pp4_stg0_fsm_34;
reg    ap_sig_bdd_895;
reg   [0:0] ap_reg_ppstg_exitcond_i1_reg_990_pp4_it1;
wire   [9:0] i_5_fu_796_p2;
reg   [9:0] i_5_reg_994;
reg   [31:0] local_res_0_reg_1014;
reg    ap_sig_cseq_ST_st57_fsm_40;
reg    ap_sig_bdd_919;
reg    ap_sig_ioackin_HP3_AWREADY;
wire    grp_obj_detector_softmax_fu_532_ap_done;
reg   [31:0] local_res_1_reg_1019;
wire   [0:0] exitcond6_fu_840_p2;
reg   [0:0] exitcond6_reg_1029;
reg    ap_sig_cseq_ST_pp5_stg0_fsm_41;
reg    ap_sig_bdd_939;
reg    ap_reg_ppiten_pp5_it0 = 1'b0;
reg    ap_sig_ioackin_HP3_WREADY;
reg    ap_reg_ppiten_pp5_it1 = 1'b0;
wire   [1:0] indvar_next3_fu_846_p2;
wire   [31:0] local_res_load_phi_fu_856_p3;
reg   [31:0] local_res_load_phi_reg_1038;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_bdd_965;
reg    ap_sig_cseq_ST_st16_fsm_13;
reg    ap_sig_bdd_977;
reg    ap_sig_cseq_ST_st25_fsm_20;
reg    ap_sig_bdd_989;
reg    ap_sig_cseq_ST_st35_fsm_28;
reg    ap_sig_bdd_1001;
wire    grp_obj_detector_flatten_fu_540_ap_done;
reg   [9:0] local_A_address0;
reg    local_A_ce0;
reg    local_A_we0;
wire   [31:0] local_A_d0;
wire   [31:0] local_A_q0;
wire   [9:0] local_A_address1;
reg    local_A_ce1;
wire   [31:0] local_A_q1;
reg   [7:0] local_W0_address0;
reg    local_W0_ce0;
reg    local_W0_we0;
wire   [31:0] local_W0_d0;
wire   [31:0] local_W0_q0;
wire   [7:0] local_W0_address1;
reg    local_W0_ce1;
wire   [31:0] local_W0_q1;
reg   [10:0] local_W1_address0;
reg    local_W1_ce0;
reg    local_W1_we0;
wire   [31:0] local_W1_d0;
reg   [11:0] s0_address0;
reg    s0_ce0;
reg    s0_we0;
wire   [31:0] s0_d0;
wire   [31:0] s0_q0;
wire   [11:0] s0_address1;
reg    s0_ce1;
reg    s0_we1;
wire   [31:0] s0_d1;
reg   [11:0] s1_address0;
reg    s1_ce0;
reg    s1_we0;
wire   [31:0] s1_d0;
wire   [31:0] s1_q0;
wire   [11:0] s1_address1;
reg    s1_ce1;
wire   [31:0] s1_q1;
reg   [6:0] s2_0_address0;
reg    s2_0_ce0;
reg    s2_0_we0;
wire   [31:0] s2_0_d0;
wire   [31:0] s2_0_q0;
wire   [6:0] s2_0_address1;
reg    s2_0_ce1;
wire   [31:0] s2_0_q1;
reg   [6:0] s2_1_address0;
reg    s2_1_ce0;
reg    s2_1_we0;
wire   [31:0] s2_1_d0;
wire   [31:0] s2_1_q0;
wire   [6:0] s2_1_address1;
reg    s2_1_ce1;
wire   [31:0] s2_1_q1;
reg   [6:0] s2_2_address0;
reg    s2_2_ce0;
reg    s2_2_we0;
wire   [31:0] s2_2_d0;
wire   [31:0] s2_2_q0;
wire   [6:0] s2_2_address1;
reg    s2_2_ce1;
wire   [31:0] s2_2_q1;
reg   [6:0] s2_3_address0;
reg    s2_3_ce0;
reg    s2_3_we0;
wire   [31:0] s2_3_d0;
wire   [31:0] s2_3_q0;
wire   [6:0] s2_3_address1;
reg    s2_3_ce1;
wire   [31:0] s2_3_q1;
reg   [6:0] s2_4_address0;
reg    s2_4_ce0;
reg    s2_4_we0;
wire   [31:0] s2_4_d0;
wire   [31:0] s2_4_q0;
wire   [6:0] s2_4_address1;
reg    s2_4_ce1;
wire   [31:0] s2_4_q1;
reg   [6:0] s2_5_address0;
reg    s2_5_ce0;
reg    s2_5_we0;
wire   [31:0] s2_5_d0;
wire   [31:0] s2_5_q0;
wire   [6:0] s2_5_address1;
reg    s2_5_ce1;
wire   [31:0] s2_5_q1;
reg   [6:0] s2_6_address0;
reg    s2_6_ce0;
reg    s2_6_we0;
wire   [31:0] s2_6_d0;
wire   [31:0] s2_6_q0;
wire   [6:0] s2_6_address1;
reg    s2_6_ce1;
wire   [31:0] s2_6_q1;
reg   [6:0] s2_7_address0;
reg    s2_7_ce0;
reg    s2_7_we0;
wire   [31:0] s2_7_d0;
wire   [31:0] s2_7_q0;
wire   [6:0] s2_7_address1;
reg    s2_7_ce1;
wire   [31:0] s2_7_q1;
reg   [6:0] s2_8_address0;
reg    s2_8_ce0;
reg    s2_8_we0;
wire   [31:0] s2_8_d0;
wire   [31:0] s2_8_q0;
wire   [6:0] s2_8_address1;
reg    s2_8_ce1;
wire   [31:0] s2_8_q1;
reg   [6:0] s2_9_address0;
reg    s2_9_ce0;
reg    s2_9_we0;
wire   [31:0] s2_9_d0;
wire   [31:0] s2_9_q0;
wire   [6:0] s2_9_address1;
reg    s2_9_ce1;
wire   [31:0] s2_9_q1;
reg   [6:0] s2_10_address0;
reg    s2_10_ce0;
reg    s2_10_we0;
wire   [31:0] s2_10_d0;
wire   [31:0] s2_10_q0;
wire   [6:0] s2_10_address1;
reg    s2_10_ce1;
wire   [31:0] s2_10_q1;
reg   [6:0] s2_11_address0;
reg    s2_11_ce0;
reg    s2_11_we0;
wire   [31:0] s2_11_d0;
wire   [31:0] s2_11_q0;
wire   [6:0] s2_11_address1;
reg    s2_11_ce1;
wire   [31:0] s2_11_q1;
reg   [9:0] s3_address0;
reg    s3_ce0;
reg    s3_we0;
wire   [31:0] s3_d0;
wire   [9:0] s3_address1;
reg    s3_ce1;
reg    s3_we1;
wire   [31:0] s3_d1;
wire    grp_obj_detector_convolve_fu_521_ap_start;
wire    grp_obj_detector_convolve_fu_521_ap_done;
wire    grp_obj_detector_convolve_fu_521_ap_idle;
wire    grp_obj_detector_convolve_fu_521_ap_ready;
wire   [9:0] grp_obj_detector_convolve_fu_521_A_address0;
wire    grp_obj_detector_convolve_fu_521_A_ce0;
wire   [31:0] grp_obj_detector_convolve_fu_521_A_q0;
wire   [9:0] grp_obj_detector_convolve_fu_521_A_address1;
wire    grp_obj_detector_convolve_fu_521_A_ce1;
wire   [31:0] grp_obj_detector_convolve_fu_521_A_q1;
wire   [7:0] grp_obj_detector_convolve_fu_521_B_address0;
wire    grp_obj_detector_convolve_fu_521_B_ce0;
wire   [31:0] grp_obj_detector_convolve_fu_521_B_q0;
wire   [7:0] grp_obj_detector_convolve_fu_521_B_address1;
wire    grp_obj_detector_convolve_fu_521_B_ce1;
wire   [31:0] grp_obj_detector_convolve_fu_521_B_q1;
wire   [2:0] grp_obj_detector_convolve_fu_521_tmp_20;
wire   [11:0] grp_obj_detector_convolve_fu_521_conv_address0;
wire    grp_obj_detector_convolve_fu_521_conv_ce0;
wire    grp_obj_detector_convolve_fu_521_conv_we0;
wire   [31:0] grp_obj_detector_convolve_fu_521_conv_d0;
wire   [11:0] grp_obj_detector_convolve_fu_521_conv_address1;
wire    grp_obj_detector_convolve_fu_521_conv_ce1;
wire    grp_obj_detector_convolve_fu_521_conv_we1;
wire   [31:0] grp_obj_detector_convolve_fu_521_conv_d1;
wire   [2:0] grp_obj_detector_convolve_fu_521_tmp_201;
wire    grp_obj_detector_softmax_fu_532_ap_start;
wire    grp_obj_detector_softmax_fu_532_ap_idle;
wire    grp_obj_detector_softmax_fu_532_ap_ready;
wire   [31:0] grp_obj_detector_softmax_fu_532_inp_0_read;
wire   [31:0] grp_obj_detector_softmax_fu_532_inp_1_read;
wire   [31:0] grp_obj_detector_softmax_fu_532_ap_return_0;
wire   [31:0] grp_obj_detector_softmax_fu_532_ap_return_1;
wire    grp_obj_detector_flatten_fu_540_ap_start;
wire    grp_obj_detector_flatten_fu_540_ap_idle;
wire    grp_obj_detector_flatten_fu_540_ap_ready;
wire   [6:0] grp_obj_detector_flatten_fu_540_inp_0_address0;
wire    grp_obj_detector_flatten_fu_540_inp_0_ce0;
wire   [31:0] grp_obj_detector_flatten_fu_540_inp_0_q0;
wire   [6:0] grp_obj_detector_flatten_fu_540_inp_0_address1;
wire    grp_obj_detector_flatten_fu_540_inp_0_ce1;
wire   [31:0] grp_obj_detector_flatten_fu_540_inp_0_q1;
wire   [6:0] grp_obj_detector_flatten_fu_540_inp_1_address0;
wire    grp_obj_detector_flatten_fu_540_inp_1_ce0;
wire   [31:0] grp_obj_detector_flatten_fu_540_inp_1_q0;
wire   [6:0] grp_obj_detector_flatten_fu_540_inp_1_address1;
wire    grp_obj_detector_flatten_fu_540_inp_1_ce1;
wire   [31:0] grp_obj_detector_flatten_fu_540_inp_1_q1;
wire   [6:0] grp_obj_detector_flatten_fu_540_inp_2_address0;
wire    grp_obj_detector_flatten_fu_540_inp_2_ce0;
wire   [31:0] grp_obj_detector_flatten_fu_540_inp_2_q0;
wire   [6:0] grp_obj_detector_flatten_fu_540_inp_2_address1;
wire    grp_obj_detector_flatten_fu_540_inp_2_ce1;
wire   [31:0] grp_obj_detector_flatten_fu_540_inp_2_q1;
wire   [6:0] grp_obj_detector_flatten_fu_540_inp_3_address0;
wire    grp_obj_detector_flatten_fu_540_inp_3_ce0;
wire   [31:0] grp_obj_detector_flatten_fu_540_inp_3_q0;
wire   [6:0] grp_obj_detector_flatten_fu_540_inp_3_address1;
wire    grp_obj_detector_flatten_fu_540_inp_3_ce1;
wire   [31:0] grp_obj_detector_flatten_fu_540_inp_3_q1;
wire   [6:0] grp_obj_detector_flatten_fu_540_inp_4_address0;
wire    grp_obj_detector_flatten_fu_540_inp_4_ce0;
wire   [31:0] grp_obj_detector_flatten_fu_540_inp_4_q0;
wire   [6:0] grp_obj_detector_flatten_fu_540_inp_4_address1;
wire    grp_obj_detector_flatten_fu_540_inp_4_ce1;
wire   [31:0] grp_obj_detector_flatten_fu_540_inp_4_q1;
wire   [6:0] grp_obj_detector_flatten_fu_540_inp_5_address0;
wire    grp_obj_detector_flatten_fu_540_inp_5_ce0;
wire   [31:0] grp_obj_detector_flatten_fu_540_inp_5_q0;
wire   [6:0] grp_obj_detector_flatten_fu_540_inp_5_address1;
wire    grp_obj_detector_flatten_fu_540_inp_5_ce1;
wire   [31:0] grp_obj_detector_flatten_fu_540_inp_5_q1;
wire   [6:0] grp_obj_detector_flatten_fu_540_inp_6_address0;
wire    grp_obj_detector_flatten_fu_540_inp_6_ce0;
wire   [31:0] grp_obj_detector_flatten_fu_540_inp_6_q0;
wire   [6:0] grp_obj_detector_flatten_fu_540_inp_6_address1;
wire    grp_obj_detector_flatten_fu_540_inp_6_ce1;
wire   [31:0] grp_obj_detector_flatten_fu_540_inp_6_q1;
wire   [6:0] grp_obj_detector_flatten_fu_540_inp_7_address0;
wire    grp_obj_detector_flatten_fu_540_inp_7_ce0;
wire   [31:0] grp_obj_detector_flatten_fu_540_inp_7_q0;
wire   [6:0] grp_obj_detector_flatten_fu_540_inp_7_address1;
wire    grp_obj_detector_flatten_fu_540_inp_7_ce1;
wire   [31:0] grp_obj_detector_flatten_fu_540_inp_7_q1;
wire   [6:0] grp_obj_detector_flatten_fu_540_inp_8_address0;
wire    grp_obj_detector_flatten_fu_540_inp_8_ce0;
wire   [31:0] grp_obj_detector_flatten_fu_540_inp_8_q0;
wire   [6:0] grp_obj_detector_flatten_fu_540_inp_8_address1;
wire    grp_obj_detector_flatten_fu_540_inp_8_ce1;
wire   [31:0] grp_obj_detector_flatten_fu_540_inp_8_q1;
wire   [6:0] grp_obj_detector_flatten_fu_540_inp_9_address0;
wire    grp_obj_detector_flatten_fu_540_inp_9_ce0;
wire   [31:0] grp_obj_detector_flatten_fu_540_inp_9_q0;
wire   [6:0] grp_obj_detector_flatten_fu_540_inp_9_address1;
wire    grp_obj_detector_flatten_fu_540_inp_9_ce1;
wire   [31:0] grp_obj_detector_flatten_fu_540_inp_9_q1;
wire   [6:0] grp_obj_detector_flatten_fu_540_inp_10_address0;
wire    grp_obj_detector_flatten_fu_540_inp_10_ce0;
wire   [31:0] grp_obj_detector_flatten_fu_540_inp_10_q0;
wire   [6:0] grp_obj_detector_flatten_fu_540_inp_10_address1;
wire    grp_obj_detector_flatten_fu_540_inp_10_ce1;
wire   [31:0] grp_obj_detector_flatten_fu_540_inp_10_q1;
wire   [6:0] grp_obj_detector_flatten_fu_540_inp_11_address0;
wire    grp_obj_detector_flatten_fu_540_inp_11_ce0;
wire   [31:0] grp_obj_detector_flatten_fu_540_inp_11_q0;
wire   [6:0] grp_obj_detector_flatten_fu_540_inp_11_address1;
wire    grp_obj_detector_flatten_fu_540_inp_11_ce1;
wire   [31:0] grp_obj_detector_flatten_fu_540_inp_11_q1;
wire   [9:0] grp_obj_detector_flatten_fu_540_out_r_address0;
wire    grp_obj_detector_flatten_fu_540_out_r_ce0;
wire    grp_obj_detector_flatten_fu_540_out_r_we0;
wire   [31:0] grp_obj_detector_flatten_fu_540_out_r_d0;
wire   [9:0] grp_obj_detector_flatten_fu_540_out_r_address1;
wire    grp_obj_detector_flatten_fu_540_out_r_ce1;
wire    grp_obj_detector_flatten_fu_540_out_r_we1;
wire   [31:0] grp_obj_detector_flatten_fu_540_out_r_d1;
wire    grp_obj_detector_maxpool_fu_557_ap_start;
wire    grp_obj_detector_maxpool_fu_557_ap_done;
wire    grp_obj_detector_maxpool_fu_557_ap_idle;
wire    grp_obj_detector_maxpool_fu_557_ap_ready;
wire   [11:0] grp_obj_detector_maxpool_fu_557_inp_address0;
wire    grp_obj_detector_maxpool_fu_557_inp_ce0;
wire   [31:0] grp_obj_detector_maxpool_fu_557_inp_q0;
wire   [11:0] grp_obj_detector_maxpool_fu_557_inp_address1;
wire    grp_obj_detector_maxpool_fu_557_inp_ce1;
wire   [31:0] grp_obj_detector_maxpool_fu_557_inp_q1;
wire   [2:0] grp_obj_detector_maxpool_fu_557_tmp_24;
wire   [6:0] grp_obj_detector_maxpool_fu_557_out_0_address0;
wire    grp_obj_detector_maxpool_fu_557_out_0_ce0;
wire    grp_obj_detector_maxpool_fu_557_out_0_we0;
wire   [31:0] grp_obj_detector_maxpool_fu_557_out_0_d0;
wire   [6:0] grp_obj_detector_maxpool_fu_557_out_1_address0;
wire    grp_obj_detector_maxpool_fu_557_out_1_ce0;
wire    grp_obj_detector_maxpool_fu_557_out_1_we0;
wire   [31:0] grp_obj_detector_maxpool_fu_557_out_1_d0;
wire   [6:0] grp_obj_detector_maxpool_fu_557_out_2_address0;
wire    grp_obj_detector_maxpool_fu_557_out_2_ce0;
wire    grp_obj_detector_maxpool_fu_557_out_2_we0;
wire   [31:0] grp_obj_detector_maxpool_fu_557_out_2_d0;
wire   [6:0] grp_obj_detector_maxpool_fu_557_out_3_address0;
wire    grp_obj_detector_maxpool_fu_557_out_3_ce0;
wire    grp_obj_detector_maxpool_fu_557_out_3_we0;
wire   [31:0] grp_obj_detector_maxpool_fu_557_out_3_d0;
wire   [6:0] grp_obj_detector_maxpool_fu_557_out_4_address0;
wire    grp_obj_detector_maxpool_fu_557_out_4_ce0;
wire    grp_obj_detector_maxpool_fu_557_out_4_we0;
wire   [31:0] grp_obj_detector_maxpool_fu_557_out_4_d0;
wire   [6:0] grp_obj_detector_maxpool_fu_557_out_5_address0;
wire    grp_obj_detector_maxpool_fu_557_out_5_ce0;
wire    grp_obj_detector_maxpool_fu_557_out_5_we0;
wire   [31:0] grp_obj_detector_maxpool_fu_557_out_5_d0;
wire   [6:0] grp_obj_detector_maxpool_fu_557_out_6_address0;
wire    grp_obj_detector_maxpool_fu_557_out_6_ce0;
wire    grp_obj_detector_maxpool_fu_557_out_6_we0;
wire   [31:0] grp_obj_detector_maxpool_fu_557_out_6_d0;
wire   [6:0] grp_obj_detector_maxpool_fu_557_out_7_address0;
wire    grp_obj_detector_maxpool_fu_557_out_7_ce0;
wire    grp_obj_detector_maxpool_fu_557_out_7_we0;
wire   [31:0] grp_obj_detector_maxpool_fu_557_out_7_d0;
wire   [6:0] grp_obj_detector_maxpool_fu_557_out_8_address0;
wire    grp_obj_detector_maxpool_fu_557_out_8_ce0;
wire    grp_obj_detector_maxpool_fu_557_out_8_we0;
wire   [31:0] grp_obj_detector_maxpool_fu_557_out_8_d0;
wire   [6:0] grp_obj_detector_maxpool_fu_557_out_9_address0;
wire    grp_obj_detector_maxpool_fu_557_out_9_ce0;
wire    grp_obj_detector_maxpool_fu_557_out_9_we0;
wire   [31:0] grp_obj_detector_maxpool_fu_557_out_9_d0;
wire   [6:0] grp_obj_detector_maxpool_fu_557_out_10_address0;
wire    grp_obj_detector_maxpool_fu_557_out_10_ce0;
wire    grp_obj_detector_maxpool_fu_557_out_10_we0;
wire   [31:0] grp_obj_detector_maxpool_fu_557_out_10_d0;
wire   [6:0] grp_obj_detector_maxpool_fu_557_out_11_address0;
wire    grp_obj_detector_maxpool_fu_557_out_11_ce0;
wire    grp_obj_detector_maxpool_fu_557_out_11_we0;
wire   [31:0] grp_obj_detector_maxpool_fu_557_out_11_d0;
wire   [2:0] grp_obj_detector_maxpool_fu_557_tmp_241;
wire    grp_obj_detector_ReLU_fu_578_ap_start;
wire    grp_obj_detector_ReLU_fu_578_ap_done;
wire    grp_obj_detector_ReLU_fu_578_ap_idle;
wire    grp_obj_detector_ReLU_fu_578_ap_ready;
wire   [11:0] grp_obj_detector_ReLU_fu_578_inp_address0;
wire    grp_obj_detector_ReLU_fu_578_inp_ce0;
wire   [31:0] grp_obj_detector_ReLU_fu_578_inp_q0;
wire   [2:0] grp_obj_detector_ReLU_fu_578_tmp_21;
wire   [11:0] grp_obj_detector_ReLU_fu_578_out_r_address0;
wire    grp_obj_detector_ReLU_fu_578_out_r_ce0;
wire    grp_obj_detector_ReLU_fu_578_out_r_we0;
wire   [31:0] grp_obj_detector_ReLU_fu_578_out_r_d0;
wire   [2:0] grp_obj_detector_ReLU_fu_578_tmp_211;
reg   [9:0] indvar_phi_fu_396_p4;
reg   [7:0] indvar1_phi_fu_408_p4;
reg   [10:0] indvar2_phi_fu_420_p4;
reg   [2:0] i_reg_428;
reg    ap_sig_cseq_ST_st30_fsm_23;
reg    ap_sig_bdd_1465;
reg   [2:0] i1_reg_440;
reg    ap_sig_cseq_ST_st32_fsm_25;
reg    ap_sig_bdd_1479;
wire   [0:0] exitcond2_fu_736_p2;
reg   [2:0] i2_reg_452;
reg    ap_sig_cseq_ST_st34_fsm_27;
reg    ap_sig_bdd_1495;
wire   [0:0] exitcond1_fu_748_p2;
reg   [9:0] i_i_phi_fu_480_p4;
reg   [9:0] i_i1_phi_fu_503_p4;
reg    grp_obj_detector_convolve_fu_521_ap_start_ap_start_reg = 1'b0;
reg    grp_obj_detector_softmax_fu_532_ap_start_ap_start_reg = 1'b0;
reg    ap_sig_cseq_ST_st56_fsm_39;
reg    ap_sig_bdd_1525;
reg    grp_obj_detector_flatten_fu_540_ap_start_ap_start_reg = 1'b0;
wire   [0:0] exitcond_fu_760_p2;
reg    grp_obj_detector_maxpool_fu_557_ap_start_ap_start_reg = 1'b0;
reg    grp_obj_detector_ReLU_fu_578_ap_start_ap_start_reg = 1'b0;
wire   [63:0] tmp_s_fu_677_p1;
wire   [63:0] tmp_287_fu_704_p1;
wire   [63:0] tmp_288_fu_731_p1;
wire   [63:0] tmp_i_fu_784_p1;
wire   [63:0] tmp_i1_fu_802_p1;
wire   [63:0] tmp_289_fu_817_p1;
wire   [63:0] tmp_39_fu_655_p1;
wire   [63:0] tmp_40_fu_682_p1;
wire   [63:0] tmp_41_fu_709_p1;
wire   [63:0] tmp_42_fu_830_p1;
reg    ap_reg_ioackin_HP0_ARREADY = 1'b0;
reg    ap_reg_ioackin_HP1_ARREADY = 1'b0;
reg    ap_reg_ioackin_HP2_ARREADY = 1'b0;
reg    ap_reg_ioackin_HP3_AWREADY = 1'b0;
reg    ap_reg_ioackin_HP3_WREADY = 1'b0;
reg    ap_sig_cseq_ST_st63_fsm_45;
reg    ap_sig_bdd_1607;
reg   [31:0] grp_fu_588_p0;
wire   [31:0] grp_fu_588_p1;
wire   [31:0] grp_fu_594_p0;
wire   [31:0] grp_fu_594_p1;
wire   [10:0] tmp_i1_trn_cast_fu_807_p1;
wire   [10:0] p_addr7_fu_811_p2;
wire   [0:0] tmp_43_fu_852_p1;
wire    grp_fu_588_ce;
wire    grp_fu_594_ce;
reg   [45:0] ap_NS_fsm;
reg    ap_sig_bdd_1925;
reg    ap_sig_bdd_1595;


obj_detector_AXILiteS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_AXILITES_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_AXILITES_DATA_WIDTH ))
obj_detector_AXILiteS_s_axi_U(
    .AWVALID( s_axi_AXILiteS_AWVALID ),
    .AWREADY( s_axi_AXILiteS_AWREADY ),
    .AWADDR( s_axi_AXILiteS_AWADDR ),
    .WVALID( s_axi_AXILiteS_WVALID ),
    .WREADY( s_axi_AXILiteS_WREADY ),
    .WDATA( s_axi_AXILiteS_WDATA ),
    .WSTRB( s_axi_AXILiteS_WSTRB ),
    .ARVALID( s_axi_AXILiteS_ARVALID ),
    .ARREADY( s_axi_AXILiteS_ARREADY ),
    .ARADDR( s_axi_AXILiteS_ARADDR ),
    .RVALID( s_axi_AXILiteS_RVALID ),
    .RREADY( s_axi_AXILiteS_RREADY ),
    .RDATA( s_axi_AXILiteS_RDATA ),
    .RRESP( s_axi_AXILiteS_RRESP ),
    .BVALID( s_axi_AXILiteS_BVALID ),
    .BREADY( s_axi_AXILiteS_BREADY ),
    .BRESP( s_axi_AXILiteS_BRESP ),
    .ACLK( ap_clk ),
    .ARESET( ap_rst_n_inv ),
    .ACLK_EN( obj_detector_AXILiteS_s_axi_U_ap_dummy_ce ),
    .A( A ),
    .W0( W0 ),
    .W1( W1 ),
    .res( res )
);

obj_detector_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
obj_detector_control_s_axi_U(
    .AWVALID( s_axi_control_AWVALID ),
    .AWREADY( s_axi_control_AWREADY ),
    .AWADDR( s_axi_control_AWADDR ),
    .WVALID( s_axi_control_WVALID ),
    .WREADY( s_axi_control_WREADY ),
    .WDATA( s_axi_control_WDATA ),
    .WSTRB( s_axi_control_WSTRB ),
    .ARVALID( s_axi_control_ARVALID ),
    .ARREADY( s_axi_control_ARREADY ),
    .ARADDR( s_axi_control_ARADDR ),
    .RVALID( s_axi_control_RVALID ),
    .RREADY( s_axi_control_RREADY ),
    .RDATA( s_axi_control_RDATA ),
    .RRESP( s_axi_control_RRESP ),
    .BVALID( s_axi_control_BVALID ),
    .BREADY( s_axi_control_BREADY ),
    .BRESP( s_axi_control_BRESP ),
    .ACLK( ap_clk ),
    .ARESET( ap_rst_n_inv ),
    .ACLK_EN( obj_detector_control_s_axi_U_ap_dummy_ce ),
    .ap_start( ap_start ),
    .interrupt( interrupt ),
    .ap_ready( ap_ready ),
    .ap_done( ap_done ),
    .ap_idle( ap_idle )
);

obj_detector_HP0_m_axi #(
    .USER_DW( 32 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_HP0_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_HP0_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_HP0_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_HP0_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_HP0_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_HP0_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_HP0_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_HP0_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_HP0_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_HP0_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_HP0_CACHE_VALUE ))
obj_detector_HP0_m_axi_U(
    .AWVALID( m_axi_HP0_AWVALID ),
    .AWREADY( m_axi_HP0_AWREADY ),
    .AWADDR( m_axi_HP0_AWADDR ),
    .AWID( m_axi_HP0_AWID ),
    .AWLEN( m_axi_HP0_AWLEN ),
    .AWSIZE( m_axi_HP0_AWSIZE ),
    .AWBURST( m_axi_HP0_AWBURST ),
    .AWLOCK( m_axi_HP0_AWLOCK ),
    .AWCACHE( m_axi_HP0_AWCACHE ),
    .AWPROT( m_axi_HP0_AWPROT ),
    .AWQOS( m_axi_HP0_AWQOS ),
    .AWREGION( m_axi_HP0_AWREGION ),
    .AWUSER( m_axi_HP0_AWUSER ),
    .WVALID( m_axi_HP0_WVALID ),
    .WREADY( m_axi_HP0_WREADY ),
    .WDATA( m_axi_HP0_WDATA ),
    .WSTRB( m_axi_HP0_WSTRB ),
    .WLAST( m_axi_HP0_WLAST ),
    .WID( m_axi_HP0_WID ),
    .WUSER( m_axi_HP0_WUSER ),
    .ARVALID( m_axi_HP0_ARVALID ),
    .ARREADY( m_axi_HP0_ARREADY ),
    .ARADDR( m_axi_HP0_ARADDR ),
    .ARID( m_axi_HP0_ARID ),
    .ARLEN( m_axi_HP0_ARLEN ),
    .ARSIZE( m_axi_HP0_ARSIZE ),
    .ARBURST( m_axi_HP0_ARBURST ),
    .ARLOCK( m_axi_HP0_ARLOCK ),
    .ARCACHE( m_axi_HP0_ARCACHE ),
    .ARPROT( m_axi_HP0_ARPROT ),
    .ARQOS( m_axi_HP0_ARQOS ),
    .ARREGION( m_axi_HP0_ARREGION ),
    .ARUSER( m_axi_HP0_ARUSER ),
    .RVALID( m_axi_HP0_RVALID ),
    .RREADY( m_axi_HP0_RREADY ),
    .RDATA( m_axi_HP0_RDATA ),
    .RLAST( m_axi_HP0_RLAST ),
    .RID( m_axi_HP0_RID ),
    .RUSER( m_axi_HP0_RUSER ),
    .RRESP( m_axi_HP0_RRESP ),
    .BVALID( m_axi_HP0_BVALID ),
    .BREADY( m_axi_HP0_BREADY ),
    .BRESP( m_axi_HP0_BRESP ),
    .BID( m_axi_HP0_BID ),
    .BUSER( m_axi_HP0_BUSER ),
    .ACLK( ap_clk ),
    .ARESET( ap_rst_n_inv ),
    .ACLK_EN( obj_detector_HP0_m_axi_U_ap_dummy_ce ),
    .I_ARVALID( HP0_ARVALID ),
    .I_ARREADY( HP0_ARREADY ),
    .I_ARADDR( HP0_ARADDR ),
    .I_ARID( HP0_ARID ),
    .I_ARLEN( HP0_ARLEN ),
    .I_ARSIZE( HP0_ARSIZE ),
    .I_ARLOCK( HP0_ARLOCK ),
    .I_ARCACHE( HP0_ARCACHE ),
    .I_ARQOS( HP0_ARQOS ),
    .I_ARPROT( HP0_ARPROT ),
    .I_ARUSER( HP0_ARUSER ),
    .I_ARBURST( HP0_ARBURST ),
    .I_ARREGION( HP0_ARREGION ),
    .I_RVALID( HP0_RVALID ),
    .I_RREADY( HP0_RREADY ),
    .I_RDATA( HP0_RDATA ),
    .I_RID( HP0_RID ),
    .I_RUSER( HP0_RUSER ),
    .I_RRESP( HP0_RRESP ),
    .I_RLAST( HP0_RLAST ),
    .I_AWVALID( HP0_AWVALID ),
    .I_AWREADY( HP0_AWREADY ),
    .I_AWADDR( HP0_AWADDR ),
    .I_AWID( HP0_AWID ),
    .I_AWLEN( HP0_AWLEN ),
    .I_AWSIZE( HP0_AWSIZE ),
    .I_AWLOCK( HP0_AWLOCK ),
    .I_AWCACHE( HP0_AWCACHE ),
    .I_AWQOS( HP0_AWQOS ),
    .I_AWPROT( HP0_AWPROT ),
    .I_AWUSER( HP0_AWUSER ),
    .I_AWBURST( HP0_AWBURST ),
    .I_AWREGION( HP0_AWREGION ),
    .I_WVALID( HP0_WVALID ),
    .I_WREADY( HP0_WREADY ),
    .I_WDATA( HP0_WDATA ),
    .I_WID( HP0_WID ),
    .I_WUSER( HP0_WUSER ),
    .I_WLAST( HP0_WLAST ),
    .I_WSTRB( HP0_WSTRB ),
    .I_BVALID( HP0_BVALID ),
    .I_BREADY( HP0_BREADY ),
    .I_BRESP( HP0_BRESP ),
    .I_BID( HP0_BID ),
    .I_BUSER( HP0_BUSER )
);

obj_detector_HP1_m_axi #(
    .USER_DW( 32 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_HP1_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_HP1_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_HP1_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_HP1_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_HP1_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_HP1_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_HP1_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_HP1_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_HP1_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_HP1_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_HP1_CACHE_VALUE ))
obj_detector_HP1_m_axi_U(
    .AWVALID( m_axi_HP1_AWVALID ),
    .AWREADY( m_axi_HP1_AWREADY ),
    .AWADDR( m_axi_HP1_AWADDR ),
    .AWID( m_axi_HP1_AWID ),
    .AWLEN( m_axi_HP1_AWLEN ),
    .AWSIZE( m_axi_HP1_AWSIZE ),
    .AWBURST( m_axi_HP1_AWBURST ),
    .AWLOCK( m_axi_HP1_AWLOCK ),
    .AWCACHE( m_axi_HP1_AWCACHE ),
    .AWPROT( m_axi_HP1_AWPROT ),
    .AWQOS( m_axi_HP1_AWQOS ),
    .AWREGION( m_axi_HP1_AWREGION ),
    .AWUSER( m_axi_HP1_AWUSER ),
    .WVALID( m_axi_HP1_WVALID ),
    .WREADY( m_axi_HP1_WREADY ),
    .WDATA( m_axi_HP1_WDATA ),
    .WSTRB( m_axi_HP1_WSTRB ),
    .WLAST( m_axi_HP1_WLAST ),
    .WID( m_axi_HP1_WID ),
    .WUSER( m_axi_HP1_WUSER ),
    .ARVALID( m_axi_HP1_ARVALID ),
    .ARREADY( m_axi_HP1_ARREADY ),
    .ARADDR( m_axi_HP1_ARADDR ),
    .ARID( m_axi_HP1_ARID ),
    .ARLEN( m_axi_HP1_ARLEN ),
    .ARSIZE( m_axi_HP1_ARSIZE ),
    .ARBURST( m_axi_HP1_ARBURST ),
    .ARLOCK( m_axi_HP1_ARLOCK ),
    .ARCACHE( m_axi_HP1_ARCACHE ),
    .ARPROT( m_axi_HP1_ARPROT ),
    .ARQOS( m_axi_HP1_ARQOS ),
    .ARREGION( m_axi_HP1_ARREGION ),
    .ARUSER( m_axi_HP1_ARUSER ),
    .RVALID( m_axi_HP1_RVALID ),
    .RREADY( m_axi_HP1_RREADY ),
    .RDATA( m_axi_HP1_RDATA ),
    .RLAST( m_axi_HP1_RLAST ),
    .RID( m_axi_HP1_RID ),
    .RUSER( m_axi_HP1_RUSER ),
    .RRESP( m_axi_HP1_RRESP ),
    .BVALID( m_axi_HP1_BVALID ),
    .BREADY( m_axi_HP1_BREADY ),
    .BRESP( m_axi_HP1_BRESP ),
    .BID( m_axi_HP1_BID ),
    .BUSER( m_axi_HP1_BUSER ),
    .ACLK( ap_clk ),
    .ARESET( ap_rst_n_inv ),
    .ACLK_EN( obj_detector_HP1_m_axi_U_ap_dummy_ce ),
    .I_ARVALID( HP1_ARVALID ),
    .I_ARREADY( HP1_ARREADY ),
    .I_ARADDR( HP1_ARADDR ),
    .I_ARID( HP1_ARID ),
    .I_ARLEN( HP1_ARLEN ),
    .I_ARSIZE( HP1_ARSIZE ),
    .I_ARLOCK( HP1_ARLOCK ),
    .I_ARCACHE( HP1_ARCACHE ),
    .I_ARQOS( HP1_ARQOS ),
    .I_ARPROT( HP1_ARPROT ),
    .I_ARUSER( HP1_ARUSER ),
    .I_ARBURST( HP1_ARBURST ),
    .I_ARREGION( HP1_ARREGION ),
    .I_RVALID( HP1_RVALID ),
    .I_RREADY( HP1_RREADY ),
    .I_RDATA( HP1_RDATA ),
    .I_RID( HP1_RID ),
    .I_RUSER( HP1_RUSER ),
    .I_RRESP( HP1_RRESP ),
    .I_RLAST( HP1_RLAST ),
    .I_AWVALID( HP1_AWVALID ),
    .I_AWREADY( HP1_AWREADY ),
    .I_AWADDR( HP1_AWADDR ),
    .I_AWID( HP1_AWID ),
    .I_AWLEN( HP1_AWLEN ),
    .I_AWSIZE( HP1_AWSIZE ),
    .I_AWLOCK( HP1_AWLOCK ),
    .I_AWCACHE( HP1_AWCACHE ),
    .I_AWQOS( HP1_AWQOS ),
    .I_AWPROT( HP1_AWPROT ),
    .I_AWUSER( HP1_AWUSER ),
    .I_AWBURST( HP1_AWBURST ),
    .I_AWREGION( HP1_AWREGION ),
    .I_WVALID( HP1_WVALID ),
    .I_WREADY( HP1_WREADY ),
    .I_WDATA( HP1_WDATA ),
    .I_WID( HP1_WID ),
    .I_WUSER( HP1_WUSER ),
    .I_WLAST( HP1_WLAST ),
    .I_WSTRB( HP1_WSTRB ),
    .I_BVALID( HP1_BVALID ),
    .I_BREADY( HP1_BREADY ),
    .I_BRESP( HP1_BRESP ),
    .I_BID( HP1_BID ),
    .I_BUSER( HP1_BUSER )
);

obj_detector_HP2_m_axi #(
    .USER_DW( 32 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_HP2_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_HP2_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_HP2_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_HP2_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_HP2_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_HP2_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_HP2_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_HP2_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_HP2_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_HP2_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_HP2_CACHE_VALUE ))
obj_detector_HP2_m_axi_U(
    .AWVALID( m_axi_HP2_AWVALID ),
    .AWREADY( m_axi_HP2_AWREADY ),
    .AWADDR( m_axi_HP2_AWADDR ),
    .AWID( m_axi_HP2_AWID ),
    .AWLEN( m_axi_HP2_AWLEN ),
    .AWSIZE( m_axi_HP2_AWSIZE ),
    .AWBURST( m_axi_HP2_AWBURST ),
    .AWLOCK( m_axi_HP2_AWLOCK ),
    .AWCACHE( m_axi_HP2_AWCACHE ),
    .AWPROT( m_axi_HP2_AWPROT ),
    .AWQOS( m_axi_HP2_AWQOS ),
    .AWREGION( m_axi_HP2_AWREGION ),
    .AWUSER( m_axi_HP2_AWUSER ),
    .WVALID( m_axi_HP2_WVALID ),
    .WREADY( m_axi_HP2_WREADY ),
    .WDATA( m_axi_HP2_WDATA ),
    .WSTRB( m_axi_HP2_WSTRB ),
    .WLAST( m_axi_HP2_WLAST ),
    .WID( m_axi_HP2_WID ),
    .WUSER( m_axi_HP2_WUSER ),
    .ARVALID( m_axi_HP2_ARVALID ),
    .ARREADY( m_axi_HP2_ARREADY ),
    .ARADDR( m_axi_HP2_ARADDR ),
    .ARID( m_axi_HP2_ARID ),
    .ARLEN( m_axi_HP2_ARLEN ),
    .ARSIZE( m_axi_HP2_ARSIZE ),
    .ARBURST( m_axi_HP2_ARBURST ),
    .ARLOCK( m_axi_HP2_ARLOCK ),
    .ARCACHE( m_axi_HP2_ARCACHE ),
    .ARPROT( m_axi_HP2_ARPROT ),
    .ARQOS( m_axi_HP2_ARQOS ),
    .ARREGION( m_axi_HP2_ARREGION ),
    .ARUSER( m_axi_HP2_ARUSER ),
    .RVALID( m_axi_HP2_RVALID ),
    .RREADY( m_axi_HP2_RREADY ),
    .RDATA( m_axi_HP2_RDATA ),
    .RLAST( m_axi_HP2_RLAST ),
    .RID( m_axi_HP2_RID ),
    .RUSER( m_axi_HP2_RUSER ),
    .RRESP( m_axi_HP2_RRESP ),
    .BVALID( m_axi_HP2_BVALID ),
    .BREADY( m_axi_HP2_BREADY ),
    .BRESP( m_axi_HP2_BRESP ),
    .BID( m_axi_HP2_BID ),
    .BUSER( m_axi_HP2_BUSER ),
    .ACLK( ap_clk ),
    .ARESET( ap_rst_n_inv ),
    .ACLK_EN( obj_detector_HP2_m_axi_U_ap_dummy_ce ),
    .I_ARVALID( HP2_ARVALID ),
    .I_ARREADY( HP2_ARREADY ),
    .I_ARADDR( HP2_ARADDR ),
    .I_ARID( HP2_ARID ),
    .I_ARLEN( HP2_ARLEN ),
    .I_ARSIZE( HP2_ARSIZE ),
    .I_ARLOCK( HP2_ARLOCK ),
    .I_ARCACHE( HP2_ARCACHE ),
    .I_ARQOS( HP2_ARQOS ),
    .I_ARPROT( HP2_ARPROT ),
    .I_ARUSER( HP2_ARUSER ),
    .I_ARBURST( HP2_ARBURST ),
    .I_ARREGION( HP2_ARREGION ),
    .I_RVALID( HP2_RVALID ),
    .I_RREADY( HP2_RREADY ),
    .I_RDATA( HP2_RDATA ),
    .I_RID( HP2_RID ),
    .I_RUSER( HP2_RUSER ),
    .I_RRESP( HP2_RRESP ),
    .I_RLAST( HP2_RLAST ),
    .I_AWVALID( HP2_AWVALID ),
    .I_AWREADY( HP2_AWREADY ),
    .I_AWADDR( HP2_AWADDR ),
    .I_AWID( HP2_AWID ),
    .I_AWLEN( HP2_AWLEN ),
    .I_AWSIZE( HP2_AWSIZE ),
    .I_AWLOCK( HP2_AWLOCK ),
    .I_AWCACHE( HP2_AWCACHE ),
    .I_AWQOS( HP2_AWQOS ),
    .I_AWPROT( HP2_AWPROT ),
    .I_AWUSER( HP2_AWUSER ),
    .I_AWBURST( HP2_AWBURST ),
    .I_AWREGION( HP2_AWREGION ),
    .I_WVALID( HP2_WVALID ),
    .I_WREADY( HP2_WREADY ),
    .I_WDATA( HP2_WDATA ),
    .I_WID( HP2_WID ),
    .I_WUSER( HP2_WUSER ),
    .I_WLAST( HP2_WLAST ),
    .I_WSTRB( HP2_WSTRB ),
    .I_BVALID( HP2_BVALID ),
    .I_BREADY( HP2_BREADY ),
    .I_BRESP( HP2_BRESP ),
    .I_BID( HP2_BID ),
    .I_BUSER( HP2_BUSER )
);

obj_detector_HP3_m_axi #(
    .USER_DW( 32 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_HP3_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_HP3_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_HP3_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_HP3_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_HP3_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_HP3_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_HP3_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_HP3_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_HP3_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_HP3_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_HP3_CACHE_VALUE ))
obj_detector_HP3_m_axi_U(
    .AWVALID( m_axi_HP3_AWVALID ),
    .AWREADY( m_axi_HP3_AWREADY ),
    .AWADDR( m_axi_HP3_AWADDR ),
    .AWID( m_axi_HP3_AWID ),
    .AWLEN( m_axi_HP3_AWLEN ),
    .AWSIZE( m_axi_HP3_AWSIZE ),
    .AWBURST( m_axi_HP3_AWBURST ),
    .AWLOCK( m_axi_HP3_AWLOCK ),
    .AWCACHE( m_axi_HP3_AWCACHE ),
    .AWPROT( m_axi_HP3_AWPROT ),
    .AWQOS( m_axi_HP3_AWQOS ),
    .AWREGION( m_axi_HP3_AWREGION ),
    .AWUSER( m_axi_HP3_AWUSER ),
    .WVALID( m_axi_HP3_WVALID ),
    .WREADY( m_axi_HP3_WREADY ),
    .WDATA( m_axi_HP3_WDATA ),
    .WSTRB( m_axi_HP3_WSTRB ),
    .WLAST( m_axi_HP3_WLAST ),
    .WID( m_axi_HP3_WID ),
    .WUSER( m_axi_HP3_WUSER ),
    .ARVALID( m_axi_HP3_ARVALID ),
    .ARREADY( m_axi_HP3_ARREADY ),
    .ARADDR( m_axi_HP3_ARADDR ),
    .ARID( m_axi_HP3_ARID ),
    .ARLEN( m_axi_HP3_ARLEN ),
    .ARSIZE( m_axi_HP3_ARSIZE ),
    .ARBURST( m_axi_HP3_ARBURST ),
    .ARLOCK( m_axi_HP3_ARLOCK ),
    .ARCACHE( m_axi_HP3_ARCACHE ),
    .ARPROT( m_axi_HP3_ARPROT ),
    .ARQOS( m_axi_HP3_ARQOS ),
    .ARREGION( m_axi_HP3_ARREGION ),
    .ARUSER( m_axi_HP3_ARUSER ),
    .RVALID( m_axi_HP3_RVALID ),
    .RREADY( m_axi_HP3_RREADY ),
    .RDATA( m_axi_HP3_RDATA ),
    .RLAST( m_axi_HP3_RLAST ),
    .RID( m_axi_HP3_RID ),
    .RUSER( m_axi_HP3_RUSER ),
    .RRESP( m_axi_HP3_RRESP ),
    .BVALID( m_axi_HP3_BVALID ),
    .BREADY( m_axi_HP3_BREADY ),
    .BRESP( m_axi_HP3_BRESP ),
    .BID( m_axi_HP3_BID ),
    .BUSER( m_axi_HP3_BUSER ),
    .ACLK( ap_clk ),
    .ARESET( ap_rst_n_inv ),
    .ACLK_EN( obj_detector_HP3_m_axi_U_ap_dummy_ce ),
    .I_ARVALID( HP3_ARVALID ),
    .I_ARREADY( HP3_ARREADY ),
    .I_ARADDR( HP3_ARADDR ),
    .I_ARID( HP3_ARID ),
    .I_ARLEN( HP3_ARLEN ),
    .I_ARSIZE( HP3_ARSIZE ),
    .I_ARLOCK( HP3_ARLOCK ),
    .I_ARCACHE( HP3_ARCACHE ),
    .I_ARQOS( HP3_ARQOS ),
    .I_ARPROT( HP3_ARPROT ),
    .I_ARUSER( HP3_ARUSER ),
    .I_ARBURST( HP3_ARBURST ),
    .I_ARREGION( HP3_ARREGION ),
    .I_RVALID( HP3_RVALID ),
    .I_RREADY( HP3_RREADY ),
    .I_RDATA( HP3_RDATA ),
    .I_RID( HP3_RID ),
    .I_RUSER( HP3_RUSER ),
    .I_RRESP( HP3_RRESP ),
    .I_RLAST( HP3_RLAST ),
    .I_AWVALID( HP3_AWVALID ),
    .I_AWREADY( HP3_AWREADY ),
    .I_AWADDR( HP3_AWADDR ),
    .I_AWID( HP3_AWID ),
    .I_AWLEN( HP3_AWLEN ),
    .I_AWSIZE( HP3_AWSIZE ),
    .I_AWLOCK( HP3_AWLOCK ),
    .I_AWCACHE( HP3_AWCACHE ),
    .I_AWQOS( HP3_AWQOS ),
    .I_AWPROT( HP3_AWPROT ),
    .I_AWUSER( HP3_AWUSER ),
    .I_AWBURST( HP3_AWBURST ),
    .I_AWREGION( HP3_AWREGION ),
    .I_WVALID( HP3_WVALID ),
    .I_WREADY( HP3_WREADY ),
    .I_WDATA( HP3_WDATA ),
    .I_WID( HP3_WID ),
    .I_WUSER( HP3_WUSER ),
    .I_WLAST( HP3_WLAST ),
    .I_WSTRB( HP3_WSTRB ),
    .I_BVALID( HP3_BVALID ),
    .I_BREADY( HP3_BREADY ),
    .I_BRESP( HP3_BRESP ),
    .I_BID( HP3_BID ),
    .I_BUSER( HP3_BUSER )
);

obj_detector_local_A #(
    .DataWidth( 32 ),
    .AddressRange( 784 ),
    .AddressWidth( 10 ))
local_A_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .address0( local_A_address0 ),
    .ce0( local_A_ce0 ),
    .we0( local_A_we0 ),
    .d0( local_A_d0 ),
    .q0( local_A_q0 ),
    .address1( local_A_address1 ),
    .ce1( local_A_ce1 ),
    .q1( local_A_q1 )
);

obj_detector_local_W0 #(
    .DataWidth( 32 ),
    .AddressRange( 150 ),
    .AddressWidth( 8 ))
local_W0_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .address0( local_W0_address0 ),
    .ce0( local_W0_ce0 ),
    .we0( local_W0_we0 ),
    .d0( local_W0_d0 ),
    .q0( local_W0_q0 ),
    .address1( local_W0_address1 ),
    .ce1( local_W0_ce1 ),
    .q1( local_W0_q1 )
);

obj_detector_local_W1 #(
    .DataWidth( 32 ),
    .AddressRange( 1728 ),
    .AddressWidth( 11 ))
local_W1_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .address0( local_W1_address0 ),
    .ce0( local_W1_ce0 ),
    .we0( local_W1_we0 ),
    .d0( local_W1_d0 ),
    .q0( local_W1_q0 )
);

obj_detector_s0 #(
    .DataWidth( 32 ),
    .AddressRange( 3456 ),
    .AddressWidth( 12 ))
s0_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .address0( s0_address0 ),
    .ce0( s0_ce0 ),
    .we0( s0_we0 ),
    .d0( s0_d0 ),
    .q0( s0_q0 ),
    .address1( s0_address1 ),
    .ce1( s0_ce1 ),
    .we1( s0_we1 ),
    .d1( s0_d1 )
);

obj_detector_s1 #(
    .DataWidth( 32 ),
    .AddressRange( 3456 ),
    .AddressWidth( 12 ))
s1_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .address0( s1_address0 ),
    .ce0( s1_ce0 ),
    .we0( s1_we0 ),
    .d0( s1_d0 ),
    .q0( s1_q0 ),
    .address1( s1_address1 ),
    .ce1( s1_ce1 ),
    .q1( s1_q1 )
);

obj_detector_s2_0 #(
    .DataWidth( 32 ),
    .AddressRange( 72 ),
    .AddressWidth( 7 ))
s2_0_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .address0( s2_0_address0 ),
    .ce0( s2_0_ce0 ),
    .we0( s2_0_we0 ),
    .d0( s2_0_d0 ),
    .q0( s2_0_q0 ),
    .address1( s2_0_address1 ),
    .ce1( s2_0_ce1 ),
    .q1( s2_0_q1 )
);

obj_detector_s2_0 #(
    .DataWidth( 32 ),
    .AddressRange( 72 ),
    .AddressWidth( 7 ))
s2_1_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .address0( s2_1_address0 ),
    .ce0( s2_1_ce0 ),
    .we0( s2_1_we0 ),
    .d0( s2_1_d0 ),
    .q0( s2_1_q0 ),
    .address1( s2_1_address1 ),
    .ce1( s2_1_ce1 ),
    .q1( s2_1_q1 )
);

obj_detector_s2_0 #(
    .DataWidth( 32 ),
    .AddressRange( 72 ),
    .AddressWidth( 7 ))
s2_2_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .address0( s2_2_address0 ),
    .ce0( s2_2_ce0 ),
    .we0( s2_2_we0 ),
    .d0( s2_2_d0 ),
    .q0( s2_2_q0 ),
    .address1( s2_2_address1 ),
    .ce1( s2_2_ce1 ),
    .q1( s2_2_q1 )
);

obj_detector_s2_0 #(
    .DataWidth( 32 ),
    .AddressRange( 72 ),
    .AddressWidth( 7 ))
s2_3_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .address0( s2_3_address0 ),
    .ce0( s2_3_ce0 ),
    .we0( s2_3_we0 ),
    .d0( s2_3_d0 ),
    .q0( s2_3_q0 ),
    .address1( s2_3_address1 ),
    .ce1( s2_3_ce1 ),
    .q1( s2_3_q1 )
);

obj_detector_s2_0 #(
    .DataWidth( 32 ),
    .AddressRange( 72 ),
    .AddressWidth( 7 ))
s2_4_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .address0( s2_4_address0 ),
    .ce0( s2_4_ce0 ),
    .we0( s2_4_we0 ),
    .d0( s2_4_d0 ),
    .q0( s2_4_q0 ),
    .address1( s2_4_address1 ),
    .ce1( s2_4_ce1 ),
    .q1( s2_4_q1 )
);

obj_detector_s2_0 #(
    .DataWidth( 32 ),
    .AddressRange( 72 ),
    .AddressWidth( 7 ))
s2_5_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .address0( s2_5_address0 ),
    .ce0( s2_5_ce0 ),
    .we0( s2_5_we0 ),
    .d0( s2_5_d0 ),
    .q0( s2_5_q0 ),
    .address1( s2_5_address1 ),
    .ce1( s2_5_ce1 ),
    .q1( s2_5_q1 )
);

obj_detector_s2_0 #(
    .DataWidth( 32 ),
    .AddressRange( 72 ),
    .AddressWidth( 7 ))
s2_6_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .address0( s2_6_address0 ),
    .ce0( s2_6_ce0 ),
    .we0( s2_6_we0 ),
    .d0( s2_6_d0 ),
    .q0( s2_6_q0 ),
    .address1( s2_6_address1 ),
    .ce1( s2_6_ce1 ),
    .q1( s2_6_q1 )
);

obj_detector_s2_0 #(
    .DataWidth( 32 ),
    .AddressRange( 72 ),
    .AddressWidth( 7 ))
s2_7_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .address0( s2_7_address0 ),
    .ce0( s2_7_ce0 ),
    .we0( s2_7_we0 ),
    .d0( s2_7_d0 ),
    .q0( s2_7_q0 ),
    .address1( s2_7_address1 ),
    .ce1( s2_7_ce1 ),
    .q1( s2_7_q1 )
);

obj_detector_s2_0 #(
    .DataWidth( 32 ),
    .AddressRange( 72 ),
    .AddressWidth( 7 ))
s2_8_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .address0( s2_8_address0 ),
    .ce0( s2_8_ce0 ),
    .we0( s2_8_we0 ),
    .d0( s2_8_d0 ),
    .q0( s2_8_q0 ),
    .address1( s2_8_address1 ),
    .ce1( s2_8_ce1 ),
    .q1( s2_8_q1 )
);

obj_detector_s2_0 #(
    .DataWidth( 32 ),
    .AddressRange( 72 ),
    .AddressWidth( 7 ))
s2_9_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .address0( s2_9_address0 ),
    .ce0( s2_9_ce0 ),
    .we0( s2_9_we0 ),
    .d0( s2_9_d0 ),
    .q0( s2_9_q0 ),
    .address1( s2_9_address1 ),
    .ce1( s2_9_ce1 ),
    .q1( s2_9_q1 )
);

obj_detector_s2_0 #(
    .DataWidth( 32 ),
    .AddressRange( 72 ),
    .AddressWidth( 7 ))
s2_10_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .address0( s2_10_address0 ),
    .ce0( s2_10_ce0 ),
    .we0( s2_10_we0 ),
    .d0( s2_10_d0 ),
    .q0( s2_10_q0 ),
    .address1( s2_10_address1 ),
    .ce1( s2_10_ce1 ),
    .q1( s2_10_q1 )
);

obj_detector_s2_0 #(
    .DataWidth( 32 ),
    .AddressRange( 72 ),
    .AddressWidth( 7 ))
s2_11_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .address0( s2_11_address0 ),
    .ce0( s2_11_ce0 ),
    .we0( s2_11_we0 ),
    .d0( s2_11_d0 ),
    .q0( s2_11_q0 ),
    .address1( s2_11_address1 ),
    .ce1( s2_11_ce1 ),
    .q1( s2_11_q1 )
);

obj_detector_s3 #(
    .DataWidth( 32 ),
    .AddressRange( 864 ),
    .AddressWidth( 10 ))
s3_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .address0( s3_address0 ),
    .ce0( s3_ce0 ),
    .we0( s3_we0 ),
    .d0( s3_d0 ),
    .q0( s3_q0 ),
    .address1( s3_address1 ),
    .ce1( s3_ce1 ),
    .we1( s3_we1 ),
    .d1( s3_d1 )
);

obj_detector_convolve grp_obj_detector_convolve_fu_521(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst_n_inv ),
    .ap_start( grp_obj_detector_convolve_fu_521_ap_start ),
    .ap_done( grp_obj_detector_convolve_fu_521_ap_done ),
    .ap_idle( grp_obj_detector_convolve_fu_521_ap_idle ),
    .ap_ready( grp_obj_detector_convolve_fu_521_ap_ready ),
    .A_address0( grp_obj_detector_convolve_fu_521_A_address0 ),
    .A_ce0( grp_obj_detector_convolve_fu_521_A_ce0 ),
    .A_q0( grp_obj_detector_convolve_fu_521_A_q0 ),
    .A_address1( grp_obj_detector_convolve_fu_521_A_address1 ),
    .A_ce1( grp_obj_detector_convolve_fu_521_A_ce1 ),
    .A_q1( grp_obj_detector_convolve_fu_521_A_q1 ),
    .B_address0( grp_obj_detector_convolve_fu_521_B_address0 ),
    .B_ce0( grp_obj_detector_convolve_fu_521_B_ce0 ),
    .B_q0( grp_obj_detector_convolve_fu_521_B_q0 ),
    .B_address1( grp_obj_detector_convolve_fu_521_B_address1 ),
    .B_ce1( grp_obj_detector_convolve_fu_521_B_ce1 ),
    .B_q1( grp_obj_detector_convolve_fu_521_B_q1 ),
    .tmp_20( grp_obj_detector_convolve_fu_521_tmp_20 ),
    .conv_address0( grp_obj_detector_convolve_fu_521_conv_address0 ),
    .conv_ce0( grp_obj_detector_convolve_fu_521_conv_ce0 ),
    .conv_we0( grp_obj_detector_convolve_fu_521_conv_we0 ),
    .conv_d0( grp_obj_detector_convolve_fu_521_conv_d0 ),
    .conv_address1( grp_obj_detector_convolve_fu_521_conv_address1 ),
    .conv_ce1( grp_obj_detector_convolve_fu_521_conv_ce1 ),
    .conv_we1( grp_obj_detector_convolve_fu_521_conv_we1 ),
    .conv_d1( grp_obj_detector_convolve_fu_521_conv_d1 ),
    .tmp_201( grp_obj_detector_convolve_fu_521_tmp_201 )
);

obj_detector_softmax grp_obj_detector_softmax_fu_532(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst_n_inv ),
    .ap_start( grp_obj_detector_softmax_fu_532_ap_start ),
    .ap_done( grp_obj_detector_softmax_fu_532_ap_done ),
    .ap_idle( grp_obj_detector_softmax_fu_532_ap_idle ),
    .ap_ready( grp_obj_detector_softmax_fu_532_ap_ready ),
    .inp_0_read( grp_obj_detector_softmax_fu_532_inp_0_read ),
    .inp_1_read( grp_obj_detector_softmax_fu_532_inp_1_read ),
    .ap_return_0( grp_obj_detector_softmax_fu_532_ap_return_0 ),
    .ap_return_1( grp_obj_detector_softmax_fu_532_ap_return_1 )
);

obj_detector_flatten grp_obj_detector_flatten_fu_540(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst_n_inv ),
    .ap_start( grp_obj_detector_flatten_fu_540_ap_start ),
    .ap_done( grp_obj_detector_flatten_fu_540_ap_done ),
    .ap_idle( grp_obj_detector_flatten_fu_540_ap_idle ),
    .ap_ready( grp_obj_detector_flatten_fu_540_ap_ready ),
    .inp_0_address0( grp_obj_detector_flatten_fu_540_inp_0_address0 ),
    .inp_0_ce0( grp_obj_detector_flatten_fu_540_inp_0_ce0 ),
    .inp_0_q0( grp_obj_detector_flatten_fu_540_inp_0_q0 ),
    .inp_0_address1( grp_obj_detector_flatten_fu_540_inp_0_address1 ),
    .inp_0_ce1( grp_obj_detector_flatten_fu_540_inp_0_ce1 ),
    .inp_0_q1( grp_obj_detector_flatten_fu_540_inp_0_q1 ),
    .inp_1_address0( grp_obj_detector_flatten_fu_540_inp_1_address0 ),
    .inp_1_ce0( grp_obj_detector_flatten_fu_540_inp_1_ce0 ),
    .inp_1_q0( grp_obj_detector_flatten_fu_540_inp_1_q0 ),
    .inp_1_address1( grp_obj_detector_flatten_fu_540_inp_1_address1 ),
    .inp_1_ce1( grp_obj_detector_flatten_fu_540_inp_1_ce1 ),
    .inp_1_q1( grp_obj_detector_flatten_fu_540_inp_1_q1 ),
    .inp_2_address0( grp_obj_detector_flatten_fu_540_inp_2_address0 ),
    .inp_2_ce0( grp_obj_detector_flatten_fu_540_inp_2_ce0 ),
    .inp_2_q0( grp_obj_detector_flatten_fu_540_inp_2_q0 ),
    .inp_2_address1( grp_obj_detector_flatten_fu_540_inp_2_address1 ),
    .inp_2_ce1( grp_obj_detector_flatten_fu_540_inp_2_ce1 ),
    .inp_2_q1( grp_obj_detector_flatten_fu_540_inp_2_q1 ),
    .inp_3_address0( grp_obj_detector_flatten_fu_540_inp_3_address0 ),
    .inp_3_ce0( grp_obj_detector_flatten_fu_540_inp_3_ce0 ),
    .inp_3_q0( grp_obj_detector_flatten_fu_540_inp_3_q0 ),
    .inp_3_address1( grp_obj_detector_flatten_fu_540_inp_3_address1 ),
    .inp_3_ce1( grp_obj_detector_flatten_fu_540_inp_3_ce1 ),
    .inp_3_q1( grp_obj_detector_flatten_fu_540_inp_3_q1 ),
    .inp_4_address0( grp_obj_detector_flatten_fu_540_inp_4_address0 ),
    .inp_4_ce0( grp_obj_detector_flatten_fu_540_inp_4_ce0 ),
    .inp_4_q0( grp_obj_detector_flatten_fu_540_inp_4_q0 ),
    .inp_4_address1( grp_obj_detector_flatten_fu_540_inp_4_address1 ),
    .inp_4_ce1( grp_obj_detector_flatten_fu_540_inp_4_ce1 ),
    .inp_4_q1( grp_obj_detector_flatten_fu_540_inp_4_q1 ),
    .inp_5_address0( grp_obj_detector_flatten_fu_540_inp_5_address0 ),
    .inp_5_ce0( grp_obj_detector_flatten_fu_540_inp_5_ce0 ),
    .inp_5_q0( grp_obj_detector_flatten_fu_540_inp_5_q0 ),
    .inp_5_address1( grp_obj_detector_flatten_fu_540_inp_5_address1 ),
    .inp_5_ce1( grp_obj_detector_flatten_fu_540_inp_5_ce1 ),
    .inp_5_q1( grp_obj_detector_flatten_fu_540_inp_5_q1 ),
    .inp_6_address0( grp_obj_detector_flatten_fu_540_inp_6_address0 ),
    .inp_6_ce0( grp_obj_detector_flatten_fu_540_inp_6_ce0 ),
    .inp_6_q0( grp_obj_detector_flatten_fu_540_inp_6_q0 ),
    .inp_6_address1( grp_obj_detector_flatten_fu_540_inp_6_address1 ),
    .inp_6_ce1( grp_obj_detector_flatten_fu_540_inp_6_ce1 ),
    .inp_6_q1( grp_obj_detector_flatten_fu_540_inp_6_q1 ),
    .inp_7_address0( grp_obj_detector_flatten_fu_540_inp_7_address0 ),
    .inp_7_ce0( grp_obj_detector_flatten_fu_540_inp_7_ce0 ),
    .inp_7_q0( grp_obj_detector_flatten_fu_540_inp_7_q0 ),
    .inp_7_address1( grp_obj_detector_flatten_fu_540_inp_7_address1 ),
    .inp_7_ce1( grp_obj_detector_flatten_fu_540_inp_7_ce1 ),
    .inp_7_q1( grp_obj_detector_flatten_fu_540_inp_7_q1 ),
    .inp_8_address0( grp_obj_detector_flatten_fu_540_inp_8_address0 ),
    .inp_8_ce0( grp_obj_detector_flatten_fu_540_inp_8_ce0 ),
    .inp_8_q0( grp_obj_detector_flatten_fu_540_inp_8_q0 ),
    .inp_8_address1( grp_obj_detector_flatten_fu_540_inp_8_address1 ),
    .inp_8_ce1( grp_obj_detector_flatten_fu_540_inp_8_ce1 ),
    .inp_8_q1( grp_obj_detector_flatten_fu_540_inp_8_q1 ),
    .inp_9_address0( grp_obj_detector_flatten_fu_540_inp_9_address0 ),
    .inp_9_ce0( grp_obj_detector_flatten_fu_540_inp_9_ce0 ),
    .inp_9_q0( grp_obj_detector_flatten_fu_540_inp_9_q0 ),
    .inp_9_address1( grp_obj_detector_flatten_fu_540_inp_9_address1 ),
    .inp_9_ce1( grp_obj_detector_flatten_fu_540_inp_9_ce1 ),
    .inp_9_q1( grp_obj_detector_flatten_fu_540_inp_9_q1 ),
    .inp_10_address0( grp_obj_detector_flatten_fu_540_inp_10_address0 ),
    .inp_10_ce0( grp_obj_detector_flatten_fu_540_inp_10_ce0 ),
    .inp_10_q0( grp_obj_detector_flatten_fu_540_inp_10_q0 ),
    .inp_10_address1( grp_obj_detector_flatten_fu_540_inp_10_address1 ),
    .inp_10_ce1( grp_obj_detector_flatten_fu_540_inp_10_ce1 ),
    .inp_10_q1( grp_obj_detector_flatten_fu_540_inp_10_q1 ),
    .inp_11_address0( grp_obj_detector_flatten_fu_540_inp_11_address0 ),
    .inp_11_ce0( grp_obj_detector_flatten_fu_540_inp_11_ce0 ),
    .inp_11_q0( grp_obj_detector_flatten_fu_540_inp_11_q0 ),
    .inp_11_address1( grp_obj_detector_flatten_fu_540_inp_11_address1 ),
    .inp_11_ce1( grp_obj_detector_flatten_fu_540_inp_11_ce1 ),
    .inp_11_q1( grp_obj_detector_flatten_fu_540_inp_11_q1 ),
    .out_r_address0( grp_obj_detector_flatten_fu_540_out_r_address0 ),
    .out_r_ce0( grp_obj_detector_flatten_fu_540_out_r_ce0 ),
    .out_r_we0( grp_obj_detector_flatten_fu_540_out_r_we0 ),
    .out_r_d0( grp_obj_detector_flatten_fu_540_out_r_d0 ),
    .out_r_address1( grp_obj_detector_flatten_fu_540_out_r_address1 ),
    .out_r_ce1( grp_obj_detector_flatten_fu_540_out_r_ce1 ),
    .out_r_we1( grp_obj_detector_flatten_fu_540_out_r_we1 ),
    .out_r_d1( grp_obj_detector_flatten_fu_540_out_r_d1 )
);

obj_detector_maxpool grp_obj_detector_maxpool_fu_557(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst_n_inv ),
    .ap_start( grp_obj_detector_maxpool_fu_557_ap_start ),
    .ap_done( grp_obj_detector_maxpool_fu_557_ap_done ),
    .ap_idle( grp_obj_detector_maxpool_fu_557_ap_idle ),
    .ap_ready( grp_obj_detector_maxpool_fu_557_ap_ready ),
    .inp_address0( grp_obj_detector_maxpool_fu_557_inp_address0 ),
    .inp_ce0( grp_obj_detector_maxpool_fu_557_inp_ce0 ),
    .inp_q0( grp_obj_detector_maxpool_fu_557_inp_q0 ),
    .inp_address1( grp_obj_detector_maxpool_fu_557_inp_address1 ),
    .inp_ce1( grp_obj_detector_maxpool_fu_557_inp_ce1 ),
    .inp_q1( grp_obj_detector_maxpool_fu_557_inp_q1 ),
    .tmp_24( grp_obj_detector_maxpool_fu_557_tmp_24 ),
    .out_0_address0( grp_obj_detector_maxpool_fu_557_out_0_address0 ),
    .out_0_ce0( grp_obj_detector_maxpool_fu_557_out_0_ce0 ),
    .out_0_we0( grp_obj_detector_maxpool_fu_557_out_0_we0 ),
    .out_0_d0( grp_obj_detector_maxpool_fu_557_out_0_d0 ),
    .out_1_address0( grp_obj_detector_maxpool_fu_557_out_1_address0 ),
    .out_1_ce0( grp_obj_detector_maxpool_fu_557_out_1_ce0 ),
    .out_1_we0( grp_obj_detector_maxpool_fu_557_out_1_we0 ),
    .out_1_d0( grp_obj_detector_maxpool_fu_557_out_1_d0 ),
    .out_2_address0( grp_obj_detector_maxpool_fu_557_out_2_address0 ),
    .out_2_ce0( grp_obj_detector_maxpool_fu_557_out_2_ce0 ),
    .out_2_we0( grp_obj_detector_maxpool_fu_557_out_2_we0 ),
    .out_2_d0( grp_obj_detector_maxpool_fu_557_out_2_d0 ),
    .out_3_address0( grp_obj_detector_maxpool_fu_557_out_3_address0 ),
    .out_3_ce0( grp_obj_detector_maxpool_fu_557_out_3_ce0 ),
    .out_3_we0( grp_obj_detector_maxpool_fu_557_out_3_we0 ),
    .out_3_d0( grp_obj_detector_maxpool_fu_557_out_3_d0 ),
    .out_4_address0( grp_obj_detector_maxpool_fu_557_out_4_address0 ),
    .out_4_ce0( grp_obj_detector_maxpool_fu_557_out_4_ce0 ),
    .out_4_we0( grp_obj_detector_maxpool_fu_557_out_4_we0 ),
    .out_4_d0( grp_obj_detector_maxpool_fu_557_out_4_d0 ),
    .out_5_address0( grp_obj_detector_maxpool_fu_557_out_5_address0 ),
    .out_5_ce0( grp_obj_detector_maxpool_fu_557_out_5_ce0 ),
    .out_5_we0( grp_obj_detector_maxpool_fu_557_out_5_we0 ),
    .out_5_d0( grp_obj_detector_maxpool_fu_557_out_5_d0 ),
    .out_6_address0( grp_obj_detector_maxpool_fu_557_out_6_address0 ),
    .out_6_ce0( grp_obj_detector_maxpool_fu_557_out_6_ce0 ),
    .out_6_we0( grp_obj_detector_maxpool_fu_557_out_6_we0 ),
    .out_6_d0( grp_obj_detector_maxpool_fu_557_out_6_d0 ),
    .out_7_address0( grp_obj_detector_maxpool_fu_557_out_7_address0 ),
    .out_7_ce0( grp_obj_detector_maxpool_fu_557_out_7_ce0 ),
    .out_7_we0( grp_obj_detector_maxpool_fu_557_out_7_we0 ),
    .out_7_d0( grp_obj_detector_maxpool_fu_557_out_7_d0 ),
    .out_8_address0( grp_obj_detector_maxpool_fu_557_out_8_address0 ),
    .out_8_ce0( grp_obj_detector_maxpool_fu_557_out_8_ce0 ),
    .out_8_we0( grp_obj_detector_maxpool_fu_557_out_8_we0 ),
    .out_8_d0( grp_obj_detector_maxpool_fu_557_out_8_d0 ),
    .out_9_address0( grp_obj_detector_maxpool_fu_557_out_9_address0 ),
    .out_9_ce0( grp_obj_detector_maxpool_fu_557_out_9_ce0 ),
    .out_9_we0( grp_obj_detector_maxpool_fu_557_out_9_we0 ),
    .out_9_d0( grp_obj_detector_maxpool_fu_557_out_9_d0 ),
    .out_10_address0( grp_obj_detector_maxpool_fu_557_out_10_address0 ),
    .out_10_ce0( grp_obj_detector_maxpool_fu_557_out_10_ce0 ),
    .out_10_we0( grp_obj_detector_maxpool_fu_557_out_10_we0 ),
    .out_10_d0( grp_obj_detector_maxpool_fu_557_out_10_d0 ),
    .out_11_address0( grp_obj_detector_maxpool_fu_557_out_11_address0 ),
    .out_11_ce0( grp_obj_detector_maxpool_fu_557_out_11_ce0 ),
    .out_11_we0( grp_obj_detector_maxpool_fu_557_out_11_we0 ),
    .out_11_d0( grp_obj_detector_maxpool_fu_557_out_11_d0 ),
    .tmp_241( grp_obj_detector_maxpool_fu_557_tmp_241 )
);

obj_detector_ReLU grp_obj_detector_ReLU_fu_578(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst_n_inv ),
    .ap_start( grp_obj_detector_ReLU_fu_578_ap_start ),
    .ap_done( grp_obj_detector_ReLU_fu_578_ap_done ),
    .ap_idle( grp_obj_detector_ReLU_fu_578_ap_idle ),
    .ap_ready( grp_obj_detector_ReLU_fu_578_ap_ready ),
    .inp_address0( grp_obj_detector_ReLU_fu_578_inp_address0 ),
    .inp_ce0( grp_obj_detector_ReLU_fu_578_inp_ce0 ),
    .inp_q0( grp_obj_detector_ReLU_fu_578_inp_q0 ),
    .tmp_21( grp_obj_detector_ReLU_fu_578_tmp_21 ),
    .out_r_address0( grp_obj_detector_ReLU_fu_578_out_r_address0 ),
    .out_r_ce0( grp_obj_detector_ReLU_fu_578_out_r_ce0 ),
    .out_r_we0( grp_obj_detector_ReLU_fu_578_out_r_we0 ),
    .out_r_d0( grp_obj_detector_ReLU_fu_578_out_r_d0 ),
    .tmp_211( grp_obj_detector_ReLU_fu_578_tmp_211 )
);

obj_detector_fadd_32ns_32ns_32_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
obj_detector_fadd_32ns_32ns_32_5_full_dsp_U73(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .din0( grp_fu_588_p0 ),
    .din1( grp_fu_588_p1 ),
    .ce( grp_fu_588_ce ),
    .dout( grp_fu_588_p2 )
);

obj_detector_fmul_32ns_32ns_32_4_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
obj_detector_fmul_32ns_32ns_32_4_max_dsp_U74(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .din0( grp_fu_594_p0 ),
    .din1( grp_fu_594_p1 ),
    .ce( grp_fu_594_ce ),
    .dout( grp_fu_594_p2 )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// ap_reg_ioackin_HP0_ARREADY assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ioackin_HP0_ARREADY
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_HP0_ARREADY <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
            if (~(ap_const_logic_0 == ap_sig_ioackin_HP0_ARREADY)) begin
                ap_reg_ioackin_HP0_ARREADY <= ap_const_logic_0;
            end else if ((ap_const_logic_1 == HP0_ARREADY)) begin
                ap_reg_ioackin_HP0_ARREADY <= ap_const_logic_1;
            end
        end
    end
end

/// ap_reg_ioackin_HP1_ARREADY assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ioackin_HP1_ARREADY
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_HP1_ARREADY <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_8)) begin
            if (~(ap_const_logic_0 == ap_sig_ioackin_HP1_ARREADY)) begin
                ap_reg_ioackin_HP1_ARREADY <= ap_const_logic_0;
            end else if ((ap_const_logic_1 == HP1_ARREADY)) begin
                ap_reg_ioackin_HP1_ARREADY <= ap_const_logic_1;
            end
        end
    end
end

/// ap_reg_ioackin_HP2_ARREADY assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ioackin_HP2_ARREADY
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_HP2_ARREADY <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st20_fsm_15)) begin
            if (~(ap_const_logic_0 == ap_sig_ioackin_HP2_ARREADY)) begin
                ap_reg_ioackin_HP2_ARREADY <= ap_const_logic_0;
            end else if ((ap_const_logic_1 == HP2_ARREADY)) begin
                ap_reg_ioackin_HP2_ARREADY <= ap_const_logic_1;
            end
        end
    end
end

/// ap_reg_ioackin_HP3_AWREADY assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ioackin_HP3_AWREADY
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_HP3_AWREADY <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st57_fsm_40)) begin
            if (~((ap_const_logic_0 == ap_sig_ioackin_HP3_AWREADY) | (ap_const_logic_0 == grp_obj_detector_softmax_fu_532_ap_done))) begin
                ap_reg_ioackin_HP3_AWREADY <= ap_const_logic_0;
            end else if (ap_sig_bdd_1925) begin
                ap_reg_ioackin_HP3_AWREADY <= ap_const_logic_1;
            end
        end
    end
end

/// ap_reg_ioackin_HP3_WREADY assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ioackin_HP3_WREADY
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_HP3_WREADY <= ap_const_logic_0;
    end else begin
        if (ap_sig_bdd_1595) begin
            if (~((ap_const_lv1_0 == exitcond6_reg_1029) & (ap_const_logic_0 == ap_sig_ioackin_HP3_WREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp5_it1))) begin
                ap_reg_ioackin_HP3_WREADY <= ap_const_logic_0;
            end else if ((ap_const_logic_1 == HP3_WREADY)) begin
                ap_reg_ioackin_HP3_WREADY <= ap_const_logic_1;
            end
        end
    end
end

/// ap_reg_ppiten_pp0_it0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it0
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_7) & ~(ap_sig_bdd_640 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ~(ap_const_lv1_0 == exitcond4_fu_665_p2))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp0_it1 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it1
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_7) & ~(ap_sig_bdd_640 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & (ap_const_lv1_0 == exitcond4_fu_665_p2))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_7) & ~(ap_sig_bdd_640 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ~(ap_const_lv1_0 == exitcond4_fu_665_p2)))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it2 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it2
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_640 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) begin
            ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
            ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp1_it0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it0
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp1_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_14) & ~(ap_sig_bdd_664 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1)) & ~(ap_const_lv1_0 == exitcond3_fu_692_p2))) begin
            ap_reg_ppiten_pp1_it0 <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st16_fsm_13)) begin
            ap_reg_ppiten_pp1_it0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp1_it1 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it1
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp1_it1 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_14) & ~(ap_sig_bdd_664 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1)) & (ap_const_lv1_0 == exitcond3_fu_692_p2))) begin
            ap_reg_ppiten_pp1_it1 <= ap_const_logic_1;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st16_fsm_13) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_14) & ~(ap_sig_bdd_664 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1)) & ~(ap_const_lv1_0 == exitcond3_fu_692_p2)))) begin
            ap_reg_ppiten_pp1_it1 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp1_it2 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it2
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp1_it2 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_664 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1))) begin
            ap_reg_ppiten_pp1_it2 <= ap_reg_ppiten_pp1_it1;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st16_fsm_13)) begin
            ap_reg_ppiten_pp1_it2 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp2_it0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it0
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_21) & ~(ap_sig_bdd_688 & (ap_const_logic_1 == ap_reg_ppiten_pp2_it1)) & ~(ap_const_lv1_0 == exitcond5_fu_719_p2))) begin
            ap_reg_ppiten_pp2_it0 <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st25_fsm_20)) begin
            ap_reg_ppiten_pp2_it0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp2_it1 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it1
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it1 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_21) & ~(ap_sig_bdd_688 & (ap_const_logic_1 == ap_reg_ppiten_pp2_it1)) & (ap_const_lv1_0 == exitcond5_fu_719_p2))) begin
            ap_reg_ppiten_pp2_it1 <= ap_const_logic_1;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st25_fsm_20) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_21) & ~(ap_sig_bdd_688 & (ap_const_logic_1 == ap_reg_ppiten_pp2_it1)) & ~(ap_const_lv1_0 == exitcond5_fu_719_p2)))) begin
            ap_reg_ppiten_pp2_it1 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp2_it2 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it2
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it2 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_688 & (ap_const_logic_1 == ap_reg_ppiten_pp2_it1))) begin
            ap_reg_ppiten_pp2_it2 <= ap_reg_ppiten_pp2_it1;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st25_fsm_20)) begin
            ap_reg_ppiten_pp2_it2 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp3_it0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp3_it0
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp3_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg0_fsm_29) & ~(ap_const_lv1_0 == exitcond_i_fu_772_p2))) begin
            ap_reg_ppiten_pp3_it0 <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st35_fsm_28) & ~(ap_const_logic_0 == grp_obj_detector_flatten_fu_540_ap_done))) begin
            ap_reg_ppiten_pp3_it0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp3_it1 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp3_it1
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp3_it1 <= ap_const_logic_0;
    end else begin
        if (((ap_const_lv1_0 == exitcond_i_reg_966) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg4_fsm_33))) begin
            ap_reg_ppiten_pp3_it1 <= ap_const_logic_1;
        end else if ((((ap_const_logic_1 == ap_sig_cseq_ST_st35_fsm_28) & ~(ap_const_logic_0 == grp_obj_detector_flatten_fu_540_ap_done)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg4_fsm_33) & ~(ap_const_lv1_0 == exitcond_i_reg_966)))) begin
            ap_reg_ppiten_pp3_it1 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp4_it0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp4_it0
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp4_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp4_stg0_fsm_34) & ~(ap_const_lv1_0 == exitcond_i1_fu_790_p2))) begin
            ap_reg_ppiten_pp4_it0 <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg0_fsm_29) & ~(ap_const_lv1_0 == exitcond_i_fu_772_p2))) begin
            ap_reg_ppiten_pp4_it0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp4_it1 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp4_it1
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp4_it1 <= ap_const_logic_0;
    end else begin
        if (((ap_const_lv1_0 == exitcond_i1_reg_990) & (ap_const_logic_1 == ap_sig_cseq_ST_pp4_stg4_fsm_38))) begin
            ap_reg_ppiten_pp4_it1 <= ap_const_logic_1;
        end else if ((((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg0_fsm_29) & ~(ap_const_lv1_0 == exitcond_i_fu_772_p2)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp4_stg4_fsm_38) & ~(ap_const_lv1_0 == exitcond_i1_reg_990)))) begin
            ap_reg_ppiten_pp4_it1 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp5_it0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp5_it0
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp5_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp5_stg0_fsm_41) & ~((ap_const_lv1_0 == exitcond6_reg_1029) & (ap_const_logic_0 == ap_sig_ioackin_HP3_WREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp5_it1)) & ~(ap_const_lv1_0 == exitcond6_fu_840_p2))) begin
            ap_reg_ppiten_pp5_it0 <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st57_fsm_40) & ~((ap_const_logic_0 == ap_sig_ioackin_HP3_AWREADY) | (ap_const_logic_0 == grp_obj_detector_softmax_fu_532_ap_done)))) begin
            ap_reg_ppiten_pp5_it0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp5_it1 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp5_it1
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp5_it1 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp5_stg0_fsm_41) & ~((ap_const_lv1_0 == exitcond6_reg_1029) & (ap_const_logic_0 == ap_sig_ioackin_HP3_WREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp5_it1)) & (ap_const_lv1_0 == exitcond6_fu_840_p2))) begin
            ap_reg_ppiten_pp5_it1 <= ap_const_logic_1;
        end else if ((((ap_const_logic_1 == ap_sig_cseq_ST_st57_fsm_40) & ~((ap_const_logic_0 == ap_sig_ioackin_HP3_AWREADY) | (ap_const_logic_0 == grp_obj_detector_softmax_fu_532_ap_done))) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp5_stg0_fsm_41) & ~((ap_const_lv1_0 == exitcond6_reg_1029) & (ap_const_logic_0 == ap_sig_ioackin_HP3_WREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp5_it1)) & ~(ap_const_lv1_0 == exitcond6_fu_840_p2)))) begin
            ap_reg_ppiten_pp5_it1 <= ap_const_logic_0;
        end
    end
end

/// grp_obj_detector_ReLU_fu_578_ap_start_ap_start_reg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_grp_obj_detector_ReLU_fu_578_ap_start_ap_start_reg
    if (ap_rst_n_inv == 1'b1) begin
        grp_obj_detector_ReLU_fu_578_ap_start_ap_start_reg <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_st31_fsm_24) & (ap_const_lv1_0 == exitcond1_fu_748_p2))) begin
            grp_obj_detector_ReLU_fu_578_ap_start_ap_start_reg <= ap_const_logic_1;
        end else if ((ap_const_logic_1 == grp_obj_detector_ReLU_fu_578_ap_ready)) begin
            grp_obj_detector_ReLU_fu_578_ap_start_ap_start_reg <= ap_const_logic_0;
        end
    end
end

/// grp_obj_detector_convolve_fu_521_ap_start_ap_start_reg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_grp_obj_detector_convolve_fu_521_ap_start_ap_start_reg
    if (ap_rst_n_inv == 1'b1) begin
        grp_obj_detector_convolve_fu_521_ap_start_ap_start_reg <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_22) & (ap_const_lv1_0 == exitcond2_fu_736_p2))) begin
            grp_obj_detector_convolve_fu_521_ap_start_ap_start_reg <= ap_const_logic_1;
        end else if ((ap_const_logic_1 == grp_obj_detector_convolve_fu_521_ap_ready)) begin
            grp_obj_detector_convolve_fu_521_ap_start_ap_start_reg <= ap_const_logic_0;
        end
    end
end

/// grp_obj_detector_flatten_fu_540_ap_start_ap_start_reg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_grp_obj_detector_flatten_fu_540_ap_start_ap_start_reg
    if (ap_rst_n_inv == 1'b1) begin
        grp_obj_detector_flatten_fu_540_ap_start_ap_start_reg <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_st33_fsm_26) & ~(ap_const_lv1_0 == exitcond_fu_760_p2))) begin
            grp_obj_detector_flatten_fu_540_ap_start_ap_start_reg <= ap_const_logic_1;
        end else if ((ap_const_logic_1 == grp_obj_detector_flatten_fu_540_ap_ready)) begin
            grp_obj_detector_flatten_fu_540_ap_start_ap_start_reg <= ap_const_logic_0;
        end
    end
end

/// grp_obj_detector_maxpool_fu_557_ap_start_ap_start_reg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_grp_obj_detector_maxpool_fu_557_ap_start_ap_start_reg
    if (ap_rst_n_inv == 1'b1) begin
        grp_obj_detector_maxpool_fu_557_ap_start_ap_start_reg <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_st33_fsm_26) & (ap_const_lv1_0 == exitcond_fu_760_p2))) begin
            grp_obj_detector_maxpool_fu_557_ap_start_ap_start_reg <= ap_const_logic_1;
        end else if ((ap_const_logic_1 == grp_obj_detector_maxpool_fu_557_ap_ready)) begin
            grp_obj_detector_maxpool_fu_557_ap_start_ap_start_reg <= ap_const_logic_0;
        end
    end
end

/// grp_obj_detector_softmax_fu_532_ap_start_ap_start_reg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_grp_obj_detector_softmax_fu_532_ap_start_ap_start_reg
    if (ap_rst_n_inv == 1'b1) begin
        grp_obj_detector_softmax_fu_532_ap_start_ap_start_reg <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_39)) begin
            grp_obj_detector_softmax_fu_532_ap_start_ap_start_reg <= ap_const_logic_1;
        end else if ((ap_const_logic_1 == grp_obj_detector_softmax_fu_532_ap_ready)) begin
            grp_obj_detector_softmax_fu_532_ap_start_ap_start_reg <= ap_const_logic_0;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg4_fsm_33) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_i_reg_966_pp3_it1))) begin
        cost_0_reg_464 <= grp_fu_588_p2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st35_fsm_28) & ~(ap_const_logic_0 == grp_obj_detector_flatten_fu_540_ap_done))) begin
        cost_0_reg_464 <= ap_const_lv32_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg0_fsm_29) & ~(ap_const_lv1_0 == exitcond_i_fu_772_p2))) begin
        cost_1_reg_487 <= ap_const_lv32_0;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp4_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp4_stg4_fsm_38) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_i1_reg_990_pp4_it1))) begin
        cost_1_reg_487 <= grp_fu_588_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_22) & ~(ap_const_lv1_0 == exitcond2_fu_736_p2))) begin
        i1_reg_440 <= ap_const_lv3_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st32_fsm_25) & ~(ap_const_logic_0 == grp_obj_detector_ReLU_fu_578_ap_done))) begin
        i1_reg_440 <= i_2_reg_953;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st31_fsm_24) & ~(ap_const_lv1_0 == exitcond1_fu_748_p2))) begin
        i2_reg_452 <= ap_const_lv3_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_27) & ~(ap_const_logic_0 == grp_obj_detector_maxpool_fu_557_ap_done))) begin
        i2_reg_452 <= i_3_reg_961;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg0_fsm_29) & ~(ap_const_lv1_0 == exitcond_i_fu_772_p2))) begin
        i_i1_reg_499 <= ap_const_lv10_0;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp4_it1) & (ap_const_lv1_0 == exitcond_i1_reg_990) & (ap_const_logic_1 == ap_sig_cseq_ST_pp4_stg0_fsm_34))) begin
        i_i1_reg_499 <= i_5_reg_994;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it1) & (ap_const_lv1_0 == exitcond_i_reg_966) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg0_fsm_29))) begin
        i_i_reg_476 <= i_4_reg_970;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st35_fsm_28) & ~(ap_const_logic_0 == grp_obj_detector_flatten_fu_540_ap_done))) begin
        i_i_reg_476 <= ap_const_lv10_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_21) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it0) & ~(ap_sig_bdd_688 & (ap_const_logic_1 == ap_reg_ppiten_pp2_it1)) & ~(ap_const_lv1_0 == exitcond5_fu_719_p2))) begin
        i_reg_428 <= ap_const_lv3_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st30_fsm_23) & ~(ap_const_logic_0 == grp_obj_detector_convolve_fu_521_ap_done))) begin
        i_reg_428 <= i_1_reg_945;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st16_fsm_13)) begin
        indvar1_reg_404 <= ap_const_lv8_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_14) & (ap_const_lv1_0 == exitcond3_reg_908) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & ~(ap_sig_bdd_664 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1)))) begin
        indvar1_reg_404 <= indvar_next1_reg_912;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st25_fsm_20)) begin
        indvar2_reg_416 <= ap_const_lv11_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_21) & (ap_const_lv1_0 == exitcond5_reg_928) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it1) & ~(ap_sig_bdd_688 & (ap_const_logic_1 == ap_reg_ppiten_pp2_it1)))) begin
        indvar2_reg_416 <= indvar_next2_reg_932;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp5_stg0_fsm_41) & (ap_const_logic_1 == ap_reg_ppiten_pp5_it0) & ~((ap_const_lv1_0 == exitcond6_reg_1029) & (ap_const_logic_0 == ap_sig_ioackin_HP3_WREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp5_it1)) & (ap_const_lv1_0 == exitcond6_fu_840_p2))) begin
        indvar3_reg_510 <= indvar_next3_fu_846_p2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st57_fsm_40) & ~((ap_const_logic_0 == ap_sig_ioackin_HP3_AWREADY) | (ap_const_logic_0 == grp_obj_detector_softmax_fu_532_ap_done)))) begin
        indvar3_reg_510 <= ap_const_lv2_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_7) & (exitcond4_reg_888 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~(ap_sig_bdd_640 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        indvar_reg_392 <= indvar_next_reg_892;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        indvar_reg_392 <= ap_const_lv10_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_7) & (exitcond4_reg_888 == ap_const_lv1_0) & ~(ap_sig_bdd_640 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        HP0_addr_read_reg_897 <= HP0_RDATA;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_14) & (ap_const_lv1_0 == exitcond3_reg_908) & ~(ap_sig_bdd_664 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1)))) begin
        HP1_addr_read_reg_917 <= HP1_RDATA;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_21) & (ap_const_lv1_0 == exitcond5_reg_928) & ~(ap_sig_bdd_688 & (ap_const_logic_1 == ap_reg_ppiten_pp2_it1)))) begin
        HP2_addr_read_reg_937 <= HP2_RDATA;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_14) & ~(ap_sig_bdd_664 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1)))) begin
        ap_reg_ppstg_exitcond3_reg_908_pp1_it1 <= exitcond3_reg_908;
        ap_reg_ppstg_indvar1_reg_404_pp1_it1 <= indvar1_reg_404;
        exitcond3_reg_908 <= exitcond3_fu_692_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_7) & ~(ap_sig_bdd_640 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        ap_reg_ppstg_exitcond4_reg_888_pp0_it1 <= exitcond4_reg_888;
        ap_reg_ppstg_indvar_reg_392_pp0_it1 <= indvar_reg_392;
        exitcond4_reg_888 <= exitcond4_fu_665_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_21) & ~(ap_sig_bdd_688 & (ap_const_logic_1 == ap_reg_ppiten_pp2_it1)))) begin
        ap_reg_ppstg_exitcond5_reg_928_pp2_it1 <= exitcond5_reg_928;
        ap_reg_ppstg_indvar2_reg_416_pp2_it1 <= indvar2_reg_416;
        exitcond5_reg_928 <= exitcond5_fu_719_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_pp4_stg0_fsm_34)) begin
        ap_reg_ppstg_exitcond_i1_reg_990_pp4_it1 <= exitcond_i1_reg_990;
        exitcond_i1_reg_990 <= exitcond_i1_fu_790_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg0_fsm_29)) begin
        ap_reg_ppstg_exitcond_i_reg_966_pp3_it1 <= exitcond_i_reg_966;
        exitcond_i_reg_966 <= exitcond_i_fu_772_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp5_stg0_fsm_41) & ~((ap_const_lv1_0 == exitcond6_reg_1029) & (ap_const_logic_0 == ap_sig_ioackin_HP3_WREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp5_it1)))) begin
        exitcond6_reg_1029 <= exitcond6_fu_840_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_22)) begin
        i_1_reg_945 <= i_1_fu_742_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st31_fsm_24)) begin
        i_2_reg_953 <= i_2_fu_754_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st33_fsm_26)) begin
        i_3_reg_961 <= i_3_fu_766_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg0_fsm_29))) begin
        i_4_reg_970 <= i_4_fu_778_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp4_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp4_stg0_fsm_34))) begin
        i_5_reg_994 <= i_5_fu_796_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_14) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & ~(ap_sig_bdd_664 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1)))) begin
        indvar_next1_reg_912 <= indvar_next1_fu_698_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_21) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it0) & ~(ap_sig_bdd_688 & (ap_const_logic_1 == ap_reg_ppiten_pp2_it1)))) begin
        indvar_next2_reg_932 <= indvar_next2_fu_725_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_7) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_sig_bdd_640 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        indvar_next_reg_892 <= indvar_next_fu_671_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st57_fsm_40) & ~((ap_const_logic_0 == ap_sig_ioackin_HP3_AWREADY) | (ap_const_logic_0 == grp_obj_detector_softmax_fu_532_ap_done)))) begin
        local_res_0_reg_1014 <= grp_obj_detector_softmax_fu_532_ap_return_0;
        local_res_1_reg_1019 <= grp_obj_detector_softmax_fu_532_ap_return_1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp5_stg0_fsm_41) & ~((ap_const_lv1_0 == exitcond6_reg_1029) & (ap_const_logic_0 == ap_sig_ioackin_HP3_WREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp5_it1)) & (ap_const_lv1_0 == exitcond6_fu_840_p2))) begin
        local_res_load_phi_reg_1038 <= local_res_load_phi_fu_856_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((((ap_const_lv1_0 == exitcond_i_reg_966) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg4_fsm_33)) | ((ap_const_lv1_0 == exitcond_i1_reg_990) & (ap_const_logic_1 == ap_sig_cseq_ST_pp4_stg4_fsm_38)))) begin
        reg_610 <= grp_fu_594_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        tmp_36_reg_867 <= {{W1[ap_const_lv32_1F : ap_const_lv32_2]}};
        tmp_37_reg_872 <= {{W0[ap_const_lv32_1F : ap_const_lv32_2]}};
        tmp_38_reg_877 <= {{A[ap_const_lv32_1F : ap_const_lv32_2]}};
        tmp_reg_862 <= {{res[ap_const_lv32_1F : ap_const_lv32_2]}};
    end
end

/// HP0_ARVALID assign process. ///
always @ (ap_sig_cseq_ST_st2_fsm_1 or ap_reg_ioackin_HP0_ARREADY)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (ap_const_logic_0 == ap_reg_ioackin_HP0_ARREADY))) begin
        HP0_ARVALID = ap_const_logic_1;
    end else begin
        HP0_ARVALID = ap_const_logic_0;
    end
end

/// HP0_RREADY assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_7 or exitcond4_reg_888 or ap_sig_bdd_640 or ap_reg_ppiten_pp0_it1)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_7) & (exitcond4_reg_888 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~(ap_sig_bdd_640 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        HP0_RREADY = ap_const_logic_1;
    end else begin
        HP0_RREADY = ap_const_logic_0;
    end
end

/// HP1_ARVALID assign process. ///
always @ (ap_sig_cseq_ST_st11_fsm_8 or ap_reg_ioackin_HP1_ARREADY)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_8) & (ap_const_logic_0 == ap_reg_ioackin_HP1_ARREADY))) begin
        HP1_ARVALID = ap_const_logic_1;
    end else begin
        HP1_ARVALID = ap_const_logic_0;
    end
end

/// HP1_RREADY assign process. ///
always @ (ap_sig_cseq_ST_pp1_stg0_fsm_14 or exitcond3_reg_908 or ap_sig_bdd_664 or ap_reg_ppiten_pp1_it1)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_14) & (ap_const_lv1_0 == exitcond3_reg_908) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & ~(ap_sig_bdd_664 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1)))) begin
        HP1_RREADY = ap_const_logic_1;
    end else begin
        HP1_RREADY = ap_const_logic_0;
    end
end

/// HP2_ARVALID assign process. ///
always @ (ap_sig_cseq_ST_st20_fsm_15 or ap_reg_ioackin_HP2_ARREADY)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st20_fsm_15) & (ap_const_logic_0 == ap_reg_ioackin_HP2_ARREADY))) begin
        HP2_ARVALID = ap_const_logic_1;
    end else begin
        HP2_ARVALID = ap_const_logic_0;
    end
end

/// HP2_RREADY assign process. ///
always @ (ap_sig_cseq_ST_pp2_stg0_fsm_21 or exitcond5_reg_928 or ap_sig_bdd_688 or ap_reg_ppiten_pp2_it1)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_21) & (ap_const_lv1_0 == exitcond5_reg_928) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it1) & ~(ap_sig_bdd_688 & (ap_const_logic_1 == ap_reg_ppiten_pp2_it1)))) begin
        HP2_RREADY = ap_const_logic_1;
    end else begin
        HP2_RREADY = ap_const_logic_0;
    end
end

/// HP3_AWVALID assign process. ///
always @ (ap_sig_cseq_ST_st57_fsm_40 or grp_obj_detector_softmax_fu_532_ap_done or ap_reg_ioackin_HP3_AWREADY)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st57_fsm_40) & ~(ap_const_logic_0 == grp_obj_detector_softmax_fu_532_ap_done) & (ap_const_logic_0 == ap_reg_ioackin_HP3_AWREADY))) begin
        HP3_AWVALID = ap_const_logic_1;
    end else begin
        HP3_AWVALID = ap_const_logic_0;
    end
end

/// HP3_BREADY assign process. ///
always @ (HP3_BVALID or ap_sig_cseq_ST_st63_fsm_45)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st63_fsm_45) & ~(HP3_BVALID == ap_const_logic_0))) begin
        HP3_BREADY = ap_const_logic_1;
    end else begin
        HP3_BREADY = ap_const_logic_0;
    end
end

/// HP3_WVALID assign process. ///
always @ (exitcond6_reg_1029 or ap_sig_cseq_ST_pp5_stg0_fsm_41 or ap_reg_ppiten_pp5_it1 or ap_reg_ioackin_HP3_WREADY)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp5_stg0_fsm_41) & (ap_const_lv1_0 == exitcond6_reg_1029) & (ap_const_logic_1 == ap_reg_ppiten_pp5_it1) & (ap_const_logic_0 == ap_reg_ioackin_HP3_WREADY))) begin
        HP3_WVALID = ap_const_logic_1;
    end else begin
        HP3_WVALID = ap_const_logic_0;
    end
end

/// ap_done assign process. ///
always @ (HP3_BVALID or ap_sig_cseq_ST_st63_fsm_45)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st63_fsm_45) & ~(HP3_BVALID == ap_const_logic_0))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (HP3_BVALID or ap_sig_cseq_ST_st63_fsm_45)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st63_fsm_45) & ~(HP3_BVALID == ap_const_logic_0))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg0_fsm_7 assign process. ///
always @ (ap_sig_bdd_631)
begin
    if (ap_sig_bdd_631) begin
        ap_sig_cseq_ST_pp0_stg0_fsm_7 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg0_fsm_7 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp1_stg0_fsm_14 assign process. ///
always @ (ap_sig_bdd_656)
begin
    if (ap_sig_bdd_656) begin
        ap_sig_cseq_ST_pp1_stg0_fsm_14 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp1_stg0_fsm_14 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp2_stg0_fsm_21 assign process. ///
always @ (ap_sig_bdd_680)
begin
    if (ap_sig_bdd_680) begin
        ap_sig_cseq_ST_pp2_stg0_fsm_21 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp2_stg0_fsm_21 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp3_stg0_fsm_29 assign process. ///
always @ (ap_sig_bdd_871)
begin
    if (ap_sig_bdd_871) begin
        ap_sig_cseq_ST_pp3_stg0_fsm_29 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp3_stg0_fsm_29 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp3_stg1_fsm_30 assign process. ///
always @ (ap_sig_bdd_713)
begin
    if (ap_sig_bdd_713) begin
        ap_sig_cseq_ST_pp3_stg1_fsm_30 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp3_stg1_fsm_30 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp3_stg4_fsm_33 assign process. ///
always @ (ap_sig_bdd_746)
begin
    if (ap_sig_bdd_746) begin
        ap_sig_cseq_ST_pp3_stg4_fsm_33 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp3_stg4_fsm_33 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp4_stg0_fsm_34 assign process. ///
always @ (ap_sig_bdd_895)
begin
    if (ap_sig_bdd_895) begin
        ap_sig_cseq_ST_pp4_stg0_fsm_34 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp4_stg0_fsm_34 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp4_stg1_fsm_35 assign process. ///
always @ (ap_sig_bdd_727)
begin
    if (ap_sig_bdd_727) begin
        ap_sig_cseq_ST_pp4_stg1_fsm_35 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp4_stg1_fsm_35 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp4_stg4_fsm_38 assign process. ///
always @ (ap_sig_bdd_754)
begin
    if (ap_sig_bdd_754) begin
        ap_sig_cseq_ST_pp4_stg4_fsm_38 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp4_stg4_fsm_38 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp5_stg0_fsm_41 assign process. ///
always @ (ap_sig_bdd_939)
begin
    if (ap_sig_bdd_939) begin
        ap_sig_cseq_ST_pp5_stg0_fsm_41 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp5_stg0_fsm_41 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st11_fsm_8 assign process. ///
always @ (ap_sig_bdd_799)
begin
    if (ap_sig_bdd_799) begin
        ap_sig_cseq_ST_st11_fsm_8 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st11_fsm_8 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st16_fsm_13 assign process. ///
always @ (ap_sig_bdd_977)
begin
    if (ap_sig_bdd_977) begin
        ap_sig_cseq_ST_st16_fsm_13 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st16_fsm_13 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st1_fsm_0 assign process. ///
always @ (ap_sig_bdd_110)
begin
    if (ap_sig_bdd_110) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st20_fsm_15 assign process. ///
always @ (ap_sig_bdd_822)
begin
    if (ap_sig_bdd_822) begin
        ap_sig_cseq_ST_st20_fsm_15 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st20_fsm_15 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st25_fsm_20 assign process. ///
always @ (ap_sig_bdd_989)
begin
    if (ap_sig_bdd_989) begin
        ap_sig_cseq_ST_st25_fsm_20 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st25_fsm_20 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st29_fsm_22 assign process. ///
always @ (ap_sig_bdd_845)
begin
    if (ap_sig_bdd_845) begin
        ap_sig_cseq_ST_st29_fsm_22 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st29_fsm_22 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st2_fsm_1 assign process. ///
always @ (ap_sig_bdd_776)
begin
    if (ap_sig_bdd_776) begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st30_fsm_23 assign process. ///
always @ (ap_sig_bdd_1465)
begin
    if (ap_sig_bdd_1465) begin
        ap_sig_cseq_ST_st30_fsm_23 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st30_fsm_23 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st31_fsm_24 assign process. ///
always @ (ap_sig_bdd_854)
begin
    if (ap_sig_bdd_854) begin
        ap_sig_cseq_ST_st31_fsm_24 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st31_fsm_24 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st32_fsm_25 assign process. ///
always @ (ap_sig_bdd_1479)
begin
    if (ap_sig_bdd_1479) begin
        ap_sig_cseq_ST_st32_fsm_25 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st32_fsm_25 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st33_fsm_26 assign process. ///
always @ (ap_sig_bdd_863)
begin
    if (ap_sig_bdd_863) begin
        ap_sig_cseq_ST_st33_fsm_26 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st33_fsm_26 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st34_fsm_27 assign process. ///
always @ (ap_sig_bdd_1495)
begin
    if (ap_sig_bdd_1495) begin
        ap_sig_cseq_ST_st34_fsm_27 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st34_fsm_27 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st35_fsm_28 assign process. ///
always @ (ap_sig_bdd_1001)
begin
    if (ap_sig_bdd_1001) begin
        ap_sig_cseq_ST_st35_fsm_28 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st35_fsm_28 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st56_fsm_39 assign process. ///
always @ (ap_sig_bdd_1525)
begin
    if (ap_sig_bdd_1525) begin
        ap_sig_cseq_ST_st56_fsm_39 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st56_fsm_39 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st57_fsm_40 assign process. ///
always @ (ap_sig_bdd_919)
begin
    if (ap_sig_bdd_919) begin
        ap_sig_cseq_ST_st57_fsm_40 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st57_fsm_40 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st63_fsm_45 assign process. ///
always @ (ap_sig_bdd_1607)
begin
    if (ap_sig_bdd_1607) begin
        ap_sig_cseq_ST_st63_fsm_45 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st63_fsm_45 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st7_fsm_6 assign process. ///
always @ (ap_sig_bdd_965)
begin
    if (ap_sig_bdd_965) begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_0;
    end
end

/// ap_sig_ioackin_HP0_ARREADY assign process. ///
always @ (HP0_ARREADY or ap_reg_ioackin_HP0_ARREADY)
begin
    if ((ap_const_logic_0 == ap_reg_ioackin_HP0_ARREADY)) begin
        ap_sig_ioackin_HP0_ARREADY = HP0_ARREADY;
    end else begin
        ap_sig_ioackin_HP0_ARREADY = ap_const_logic_1;
    end
end

/// ap_sig_ioackin_HP1_ARREADY assign process. ///
always @ (HP1_ARREADY or ap_reg_ioackin_HP1_ARREADY)
begin
    if ((ap_const_logic_0 == ap_reg_ioackin_HP1_ARREADY)) begin
        ap_sig_ioackin_HP1_ARREADY = HP1_ARREADY;
    end else begin
        ap_sig_ioackin_HP1_ARREADY = ap_const_logic_1;
    end
end

/// ap_sig_ioackin_HP2_ARREADY assign process. ///
always @ (HP2_ARREADY or ap_reg_ioackin_HP2_ARREADY)
begin
    if ((ap_const_logic_0 == ap_reg_ioackin_HP2_ARREADY)) begin
        ap_sig_ioackin_HP2_ARREADY = HP2_ARREADY;
    end else begin
        ap_sig_ioackin_HP2_ARREADY = ap_const_logic_1;
    end
end

/// ap_sig_ioackin_HP3_AWREADY assign process. ///
always @ (HP3_AWREADY or ap_reg_ioackin_HP3_AWREADY)
begin
    if ((ap_const_logic_0 == ap_reg_ioackin_HP3_AWREADY)) begin
        ap_sig_ioackin_HP3_AWREADY = HP3_AWREADY;
    end else begin
        ap_sig_ioackin_HP3_AWREADY = ap_const_logic_1;
    end
end

/// ap_sig_ioackin_HP3_WREADY assign process. ///
always @ (HP3_WREADY or ap_reg_ioackin_HP3_WREADY)
begin
    if ((ap_const_logic_0 == ap_reg_ioackin_HP3_WREADY)) begin
        ap_sig_ioackin_HP3_WREADY = HP3_WREADY;
    end else begin
        ap_sig_ioackin_HP3_WREADY = ap_const_logic_1;
    end
end

/// grp_fu_588_p0 assign process. ///
always @ (cost_0_reg_464 or cost_1_reg_487 or ap_reg_ppiten_pp3_it1 or ap_reg_ppiten_pp4_it1 or ap_sig_cseq_ST_pp3_stg0_fsm_29 or ap_sig_cseq_ST_pp4_stg0_fsm_34)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp4_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp4_stg0_fsm_34))) begin
        grp_fu_588_p0 = cost_1_reg_487;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg0_fsm_29))) begin
        grp_fu_588_p0 = cost_0_reg_464;
    end else begin
        grp_fu_588_p0 = 'bx;
    end
end

/// i_i1_phi_fu_503_p4 assign process. ///
always @ (i_i1_reg_499 or ap_reg_ppiten_pp4_it1 or exitcond_i1_reg_990 or ap_sig_cseq_ST_pp4_stg0_fsm_34 or i_5_reg_994)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp4_it1) & (ap_const_lv1_0 == exitcond_i1_reg_990) & (ap_const_logic_1 == ap_sig_cseq_ST_pp4_stg0_fsm_34))) begin
        i_i1_phi_fu_503_p4 = i_5_reg_994;
    end else begin
        i_i1_phi_fu_503_p4 = i_i1_reg_499;
    end
end

/// i_i_phi_fu_480_p4 assign process. ///
always @ (i_i_reg_476 or ap_reg_ppiten_pp3_it1 or exitcond_i_reg_966 or ap_sig_cseq_ST_pp3_stg0_fsm_29 or i_4_reg_970)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it1) & (ap_const_lv1_0 == exitcond_i_reg_966) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg0_fsm_29))) begin
        i_i_phi_fu_480_p4 = i_4_reg_970;
    end else begin
        i_i_phi_fu_480_p4 = i_i_reg_476;
    end
end

/// indvar1_phi_fu_408_p4 assign process. ///
always @ (indvar1_reg_404 or ap_sig_cseq_ST_pp1_stg0_fsm_14 or exitcond3_reg_908 or ap_reg_ppiten_pp1_it1 or indvar_next1_reg_912)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_14) & (ap_const_lv1_0 == exitcond3_reg_908) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1))) begin
        indvar1_phi_fu_408_p4 = indvar_next1_reg_912;
    end else begin
        indvar1_phi_fu_408_p4 = indvar1_reg_404;
    end
end

/// indvar2_phi_fu_420_p4 assign process. ///
always @ (indvar2_reg_416 or ap_sig_cseq_ST_pp2_stg0_fsm_21 or exitcond5_reg_928 or ap_reg_ppiten_pp2_it1 or indvar_next2_reg_932)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_21) & (ap_const_lv1_0 == exitcond5_reg_928) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it1))) begin
        indvar2_phi_fu_420_p4 = indvar_next2_reg_932;
    end else begin
        indvar2_phi_fu_420_p4 = indvar2_reg_416;
    end
end

/// indvar_phi_fu_396_p4 assign process. ///
always @ (indvar_reg_392 or ap_sig_cseq_ST_pp0_stg0_fsm_7 or exitcond4_reg_888 or ap_reg_ppiten_pp0_it1 or indvar_next_reg_892)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_7) & (exitcond4_reg_888 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) begin
        indvar_phi_fu_396_p4 = indvar_next_reg_892;
    end else begin
        indvar_phi_fu_396_p4 = indvar_reg_392;
    end
end

/// local_A_address0 assign process. ///
always @ (ap_reg_ppiten_pp0_it2 or grp_obj_detector_convolve_fu_521_A_address0 or ap_sig_cseq_ST_st30_fsm_23 or tmp_s_fu_677_p1)
begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it2)) begin
        local_A_address0 = tmp_s_fu_677_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st30_fsm_23)) begin
        local_A_address0 = grp_obj_detector_convolve_fu_521_A_address0;
    end else begin
        local_A_address0 = 'bx;
    end
end

/// local_A_ce0 assign process. ///
always @ (ap_sig_bdd_640 or ap_reg_ppiten_pp0_it1 or ap_reg_ppiten_pp0_it2 or grp_obj_detector_convolve_fu_521_A_ce0 or ap_sig_cseq_ST_st30_fsm_23)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & ~(ap_sig_bdd_640 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        local_A_ce0 = ap_const_logic_1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st30_fsm_23)) begin
        local_A_ce0 = grp_obj_detector_convolve_fu_521_A_ce0;
    end else begin
        local_A_ce0 = ap_const_logic_0;
    end
end

/// local_A_ce1 assign process. ///
always @ (grp_obj_detector_convolve_fu_521_A_ce1 or ap_sig_cseq_ST_st30_fsm_23)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st30_fsm_23)) begin
        local_A_ce1 = grp_obj_detector_convolve_fu_521_A_ce1;
    end else begin
        local_A_ce1 = ap_const_logic_0;
    end
end

/// local_A_we0 assign process. ///
always @ (ap_sig_bdd_640 or ap_reg_ppiten_pp0_it1 or ap_reg_ppiten_pp0_it2 or ap_reg_ppstg_exitcond4_reg_888_pp0_it1)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & ~(ap_sig_bdd_640 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond4_reg_888_pp0_it1))) begin
        local_A_we0 = ap_const_logic_1;
    end else begin
        local_A_we0 = ap_const_logic_0;
    end
end

/// local_W0_address0 assign process. ///
always @ (ap_reg_ppiten_pp1_it2 or grp_obj_detector_convolve_fu_521_B_address0 or ap_sig_cseq_ST_st30_fsm_23 or tmp_287_fu_704_p1)
begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp1_it2)) begin
        local_W0_address0 = tmp_287_fu_704_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st30_fsm_23)) begin
        local_W0_address0 = grp_obj_detector_convolve_fu_521_B_address0;
    end else begin
        local_W0_address0 = 'bx;
    end
end

/// local_W0_ce0 assign process. ///
always @ (ap_sig_bdd_664 or ap_reg_ppiten_pp1_it1 or ap_reg_ppiten_pp1_it2 or grp_obj_detector_convolve_fu_521_B_ce0 or ap_sig_cseq_ST_st30_fsm_23)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp1_it2) & ~(ap_sig_bdd_664 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1)))) begin
        local_W0_ce0 = ap_const_logic_1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st30_fsm_23)) begin
        local_W0_ce0 = grp_obj_detector_convolve_fu_521_B_ce0;
    end else begin
        local_W0_ce0 = ap_const_logic_0;
    end
end

/// local_W0_ce1 assign process. ///
always @ (grp_obj_detector_convolve_fu_521_B_ce1 or ap_sig_cseq_ST_st30_fsm_23)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st30_fsm_23)) begin
        local_W0_ce1 = grp_obj_detector_convolve_fu_521_B_ce1;
    end else begin
        local_W0_ce1 = ap_const_logic_0;
    end
end

/// local_W0_we0 assign process. ///
always @ (ap_sig_bdd_664 or ap_reg_ppiten_pp1_it1 or ap_reg_ppiten_pp1_it2 or ap_reg_ppstg_exitcond3_reg_908_pp1_it1)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp1_it2) & ~(ap_sig_bdd_664 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1)) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond3_reg_908_pp1_it1))) begin
        local_W0_we0 = ap_const_logic_1;
    end else begin
        local_W0_we0 = ap_const_logic_0;
    end
end

/// local_W1_address0 assign process. ///
always @ (ap_reg_ppiten_pp2_it2 or ap_reg_ppiten_pp3_it0 or ap_reg_ppiten_pp4_it0 or ap_sig_cseq_ST_pp3_stg0_fsm_29 or ap_sig_cseq_ST_pp4_stg0_fsm_34 or tmp_288_fu_731_p1 or tmp_i_fu_784_p1 or tmp_289_fu_817_p1)
begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp2_it2)) begin
        local_W1_address0 = tmp_288_fu_731_p1;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp4_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp4_stg0_fsm_34))) begin
        local_W1_address0 = tmp_289_fu_817_p1;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg0_fsm_29))) begin
        local_W1_address0 = tmp_i_fu_784_p1;
    end else begin
        local_W1_address0 = 'bx;
    end
end

/// local_W1_ce0 assign process. ///
always @ (ap_sig_bdd_688 or ap_reg_ppiten_pp2_it1 or ap_reg_ppiten_pp2_it2 or ap_reg_ppiten_pp3_it0 or ap_reg_ppiten_pp4_it0 or ap_sig_cseq_ST_pp3_stg0_fsm_29 or ap_sig_cseq_ST_pp4_stg0_fsm_34)
begin
    if ((((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg0_fsm_29)) | ((ap_const_logic_1 == ap_reg_ppiten_pp4_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp4_stg0_fsm_34)) | ((ap_const_logic_1 == ap_reg_ppiten_pp2_it2) & ~(ap_sig_bdd_688 & (ap_const_logic_1 == ap_reg_ppiten_pp2_it1))))) begin
        local_W1_ce0 = ap_const_logic_1;
    end else begin
        local_W1_ce0 = ap_const_logic_0;
    end
end

/// local_W1_we0 assign process. ///
always @ (ap_sig_bdd_688 or ap_reg_ppiten_pp2_it1 or ap_reg_ppiten_pp2_it2 or ap_reg_ppstg_exitcond5_reg_928_pp2_it1)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp2_it2) & ~(ap_sig_bdd_688 & (ap_const_logic_1 == ap_reg_ppiten_pp2_it1)) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond5_reg_928_pp2_it1))) begin
        local_W1_we0 = ap_const_logic_1;
    end else begin
        local_W1_we0 = ap_const_logic_0;
    end
end

/// s0_address0 assign process. ///
always @ (grp_obj_detector_convolve_fu_521_conv_address0 or grp_obj_detector_ReLU_fu_578_inp_address0 or ap_sig_cseq_ST_st30_fsm_23 or ap_sig_cseq_ST_st32_fsm_25)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st32_fsm_25)) begin
        s0_address0 = grp_obj_detector_ReLU_fu_578_inp_address0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st30_fsm_23)) begin
        s0_address0 = grp_obj_detector_convolve_fu_521_conv_address0;
    end else begin
        s0_address0 = 'bx;
    end
end

/// s0_ce0 assign process. ///
always @ (grp_obj_detector_convolve_fu_521_conv_ce0 or grp_obj_detector_ReLU_fu_578_inp_ce0 or ap_sig_cseq_ST_st30_fsm_23 or ap_sig_cseq_ST_st32_fsm_25)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st32_fsm_25)) begin
        s0_ce0 = grp_obj_detector_ReLU_fu_578_inp_ce0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st30_fsm_23)) begin
        s0_ce0 = grp_obj_detector_convolve_fu_521_conv_ce0;
    end else begin
        s0_ce0 = ap_const_logic_0;
    end
end

/// s0_ce1 assign process. ///
always @ (grp_obj_detector_convolve_fu_521_conv_ce1 or ap_sig_cseq_ST_st30_fsm_23)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st30_fsm_23)) begin
        s0_ce1 = grp_obj_detector_convolve_fu_521_conv_ce1;
    end else begin
        s0_ce1 = ap_const_logic_0;
    end
end

/// s0_we0 assign process. ///
always @ (grp_obj_detector_convolve_fu_521_conv_we0 or ap_sig_cseq_ST_st30_fsm_23)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st30_fsm_23)) begin
        s0_we0 = grp_obj_detector_convolve_fu_521_conv_we0;
    end else begin
        s0_we0 = ap_const_logic_0;
    end
end

/// s0_we1 assign process. ///
always @ (grp_obj_detector_convolve_fu_521_conv_we1 or ap_sig_cseq_ST_st30_fsm_23)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st30_fsm_23)) begin
        s0_we1 = grp_obj_detector_convolve_fu_521_conv_we1;
    end else begin
        s0_we1 = ap_const_logic_0;
    end
end

/// s1_address0 assign process. ///
always @ (grp_obj_detector_maxpool_fu_557_inp_address0 or grp_obj_detector_ReLU_fu_578_out_r_address0 or ap_sig_cseq_ST_st32_fsm_25 or ap_sig_cseq_ST_st34_fsm_27)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st32_fsm_25)) begin
        s1_address0 = grp_obj_detector_ReLU_fu_578_out_r_address0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_27)) begin
        s1_address0 = grp_obj_detector_maxpool_fu_557_inp_address0;
    end else begin
        s1_address0 = 'bx;
    end
end

/// s1_ce0 assign process. ///
always @ (grp_obj_detector_maxpool_fu_557_inp_ce0 or grp_obj_detector_ReLU_fu_578_out_r_ce0 or ap_sig_cseq_ST_st32_fsm_25 or ap_sig_cseq_ST_st34_fsm_27)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st32_fsm_25)) begin
        s1_ce0 = grp_obj_detector_ReLU_fu_578_out_r_ce0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_27)) begin
        s1_ce0 = grp_obj_detector_maxpool_fu_557_inp_ce0;
    end else begin
        s1_ce0 = ap_const_logic_0;
    end
end

/// s1_ce1 assign process. ///
always @ (grp_obj_detector_maxpool_fu_557_inp_ce1 or ap_sig_cseq_ST_st34_fsm_27)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_27)) begin
        s1_ce1 = grp_obj_detector_maxpool_fu_557_inp_ce1;
    end else begin
        s1_ce1 = ap_const_logic_0;
    end
end

/// s1_we0 assign process. ///
always @ (grp_obj_detector_ReLU_fu_578_out_r_we0 or ap_sig_cseq_ST_st32_fsm_25)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st32_fsm_25)) begin
        s1_we0 = grp_obj_detector_ReLU_fu_578_out_r_we0;
    end else begin
        s1_we0 = ap_const_logic_0;
    end
end

/// s2_0_address0 assign process. ///
always @ (ap_sig_cseq_ST_st35_fsm_28 or grp_obj_detector_flatten_fu_540_inp_0_address0 or grp_obj_detector_maxpool_fu_557_out_0_address0 or ap_sig_cseq_ST_st34_fsm_27)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_27)) begin
        s2_0_address0 = grp_obj_detector_maxpool_fu_557_out_0_address0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st35_fsm_28)) begin
        s2_0_address0 = grp_obj_detector_flatten_fu_540_inp_0_address0;
    end else begin
        s2_0_address0 = 'bx;
    end
end

/// s2_0_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st35_fsm_28 or grp_obj_detector_flatten_fu_540_inp_0_ce0 or grp_obj_detector_maxpool_fu_557_out_0_ce0 or ap_sig_cseq_ST_st34_fsm_27)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_27)) begin
        s2_0_ce0 = grp_obj_detector_maxpool_fu_557_out_0_ce0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st35_fsm_28)) begin
        s2_0_ce0 = grp_obj_detector_flatten_fu_540_inp_0_ce0;
    end else begin
        s2_0_ce0 = ap_const_logic_0;
    end
end

/// s2_0_ce1 assign process. ///
always @ (ap_sig_cseq_ST_st35_fsm_28 or grp_obj_detector_flatten_fu_540_inp_0_ce1)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st35_fsm_28)) begin
        s2_0_ce1 = grp_obj_detector_flatten_fu_540_inp_0_ce1;
    end else begin
        s2_0_ce1 = ap_const_logic_0;
    end
end

/// s2_0_we0 assign process. ///
always @ (grp_obj_detector_maxpool_fu_557_out_0_we0 or ap_sig_cseq_ST_st34_fsm_27)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_27)) begin
        s2_0_we0 = grp_obj_detector_maxpool_fu_557_out_0_we0;
    end else begin
        s2_0_we0 = ap_const_logic_0;
    end
end

/// s2_10_address0 assign process. ///
always @ (ap_sig_cseq_ST_st35_fsm_28 or grp_obj_detector_flatten_fu_540_inp_10_address0 or grp_obj_detector_maxpool_fu_557_out_10_address0 or ap_sig_cseq_ST_st34_fsm_27)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_27)) begin
        s2_10_address0 = grp_obj_detector_maxpool_fu_557_out_10_address0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st35_fsm_28)) begin
        s2_10_address0 = grp_obj_detector_flatten_fu_540_inp_10_address0;
    end else begin
        s2_10_address0 = 'bx;
    end
end

/// s2_10_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st35_fsm_28 or grp_obj_detector_flatten_fu_540_inp_10_ce0 or grp_obj_detector_maxpool_fu_557_out_10_ce0 or ap_sig_cseq_ST_st34_fsm_27)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_27)) begin
        s2_10_ce0 = grp_obj_detector_maxpool_fu_557_out_10_ce0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st35_fsm_28)) begin
        s2_10_ce0 = grp_obj_detector_flatten_fu_540_inp_10_ce0;
    end else begin
        s2_10_ce0 = ap_const_logic_0;
    end
end

/// s2_10_ce1 assign process. ///
always @ (ap_sig_cseq_ST_st35_fsm_28 or grp_obj_detector_flatten_fu_540_inp_10_ce1)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st35_fsm_28)) begin
        s2_10_ce1 = grp_obj_detector_flatten_fu_540_inp_10_ce1;
    end else begin
        s2_10_ce1 = ap_const_logic_0;
    end
end

/// s2_10_we0 assign process. ///
always @ (grp_obj_detector_maxpool_fu_557_out_10_we0 or ap_sig_cseq_ST_st34_fsm_27)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_27)) begin
        s2_10_we0 = grp_obj_detector_maxpool_fu_557_out_10_we0;
    end else begin
        s2_10_we0 = ap_const_logic_0;
    end
end

/// s2_11_address0 assign process. ///
always @ (ap_sig_cseq_ST_st35_fsm_28 or grp_obj_detector_flatten_fu_540_inp_11_address0 or grp_obj_detector_maxpool_fu_557_out_11_address0 or ap_sig_cseq_ST_st34_fsm_27)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_27)) begin
        s2_11_address0 = grp_obj_detector_maxpool_fu_557_out_11_address0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st35_fsm_28)) begin
        s2_11_address0 = grp_obj_detector_flatten_fu_540_inp_11_address0;
    end else begin
        s2_11_address0 = 'bx;
    end
end

/// s2_11_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st35_fsm_28 or grp_obj_detector_flatten_fu_540_inp_11_ce0 or grp_obj_detector_maxpool_fu_557_out_11_ce0 or ap_sig_cseq_ST_st34_fsm_27)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_27)) begin
        s2_11_ce0 = grp_obj_detector_maxpool_fu_557_out_11_ce0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st35_fsm_28)) begin
        s2_11_ce0 = grp_obj_detector_flatten_fu_540_inp_11_ce0;
    end else begin
        s2_11_ce0 = ap_const_logic_0;
    end
end

/// s2_11_ce1 assign process. ///
always @ (ap_sig_cseq_ST_st35_fsm_28 or grp_obj_detector_flatten_fu_540_inp_11_ce1)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st35_fsm_28)) begin
        s2_11_ce1 = grp_obj_detector_flatten_fu_540_inp_11_ce1;
    end else begin
        s2_11_ce1 = ap_const_logic_0;
    end
end

/// s2_11_we0 assign process. ///
always @ (grp_obj_detector_maxpool_fu_557_out_11_we0 or ap_sig_cseq_ST_st34_fsm_27)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_27)) begin
        s2_11_we0 = grp_obj_detector_maxpool_fu_557_out_11_we0;
    end else begin
        s2_11_we0 = ap_const_logic_0;
    end
end

/// s2_1_address0 assign process. ///
always @ (ap_sig_cseq_ST_st35_fsm_28 or grp_obj_detector_flatten_fu_540_inp_1_address0 or grp_obj_detector_maxpool_fu_557_out_1_address0 or ap_sig_cseq_ST_st34_fsm_27)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_27)) begin
        s2_1_address0 = grp_obj_detector_maxpool_fu_557_out_1_address0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st35_fsm_28)) begin
        s2_1_address0 = grp_obj_detector_flatten_fu_540_inp_1_address0;
    end else begin
        s2_1_address0 = 'bx;
    end
end

/// s2_1_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st35_fsm_28 or grp_obj_detector_flatten_fu_540_inp_1_ce0 or grp_obj_detector_maxpool_fu_557_out_1_ce0 or ap_sig_cseq_ST_st34_fsm_27)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_27)) begin
        s2_1_ce0 = grp_obj_detector_maxpool_fu_557_out_1_ce0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st35_fsm_28)) begin
        s2_1_ce0 = grp_obj_detector_flatten_fu_540_inp_1_ce0;
    end else begin
        s2_1_ce0 = ap_const_logic_0;
    end
end

/// s2_1_ce1 assign process. ///
always @ (ap_sig_cseq_ST_st35_fsm_28 or grp_obj_detector_flatten_fu_540_inp_1_ce1)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st35_fsm_28)) begin
        s2_1_ce1 = grp_obj_detector_flatten_fu_540_inp_1_ce1;
    end else begin
        s2_1_ce1 = ap_const_logic_0;
    end
end

/// s2_1_we0 assign process. ///
always @ (grp_obj_detector_maxpool_fu_557_out_1_we0 or ap_sig_cseq_ST_st34_fsm_27)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_27)) begin
        s2_1_we0 = grp_obj_detector_maxpool_fu_557_out_1_we0;
    end else begin
        s2_1_we0 = ap_const_logic_0;
    end
end

/// s2_2_address0 assign process. ///
always @ (ap_sig_cseq_ST_st35_fsm_28 or grp_obj_detector_flatten_fu_540_inp_2_address0 or grp_obj_detector_maxpool_fu_557_out_2_address0 or ap_sig_cseq_ST_st34_fsm_27)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_27)) begin
        s2_2_address0 = grp_obj_detector_maxpool_fu_557_out_2_address0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st35_fsm_28)) begin
        s2_2_address0 = grp_obj_detector_flatten_fu_540_inp_2_address0;
    end else begin
        s2_2_address0 = 'bx;
    end
end

/// s2_2_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st35_fsm_28 or grp_obj_detector_flatten_fu_540_inp_2_ce0 or grp_obj_detector_maxpool_fu_557_out_2_ce0 or ap_sig_cseq_ST_st34_fsm_27)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_27)) begin
        s2_2_ce0 = grp_obj_detector_maxpool_fu_557_out_2_ce0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st35_fsm_28)) begin
        s2_2_ce0 = grp_obj_detector_flatten_fu_540_inp_2_ce0;
    end else begin
        s2_2_ce0 = ap_const_logic_0;
    end
end

/// s2_2_ce1 assign process. ///
always @ (ap_sig_cseq_ST_st35_fsm_28 or grp_obj_detector_flatten_fu_540_inp_2_ce1)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st35_fsm_28)) begin
        s2_2_ce1 = grp_obj_detector_flatten_fu_540_inp_2_ce1;
    end else begin
        s2_2_ce1 = ap_const_logic_0;
    end
end

/// s2_2_we0 assign process. ///
always @ (grp_obj_detector_maxpool_fu_557_out_2_we0 or ap_sig_cseq_ST_st34_fsm_27)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_27)) begin
        s2_2_we0 = grp_obj_detector_maxpool_fu_557_out_2_we0;
    end else begin
        s2_2_we0 = ap_const_logic_0;
    end
end

/// s2_3_address0 assign process. ///
always @ (ap_sig_cseq_ST_st35_fsm_28 or grp_obj_detector_flatten_fu_540_inp_3_address0 or grp_obj_detector_maxpool_fu_557_out_3_address0 or ap_sig_cseq_ST_st34_fsm_27)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_27)) begin
        s2_3_address0 = grp_obj_detector_maxpool_fu_557_out_3_address0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st35_fsm_28)) begin
        s2_3_address0 = grp_obj_detector_flatten_fu_540_inp_3_address0;
    end else begin
        s2_3_address0 = 'bx;
    end
end

/// s2_3_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st35_fsm_28 or grp_obj_detector_flatten_fu_540_inp_3_ce0 or grp_obj_detector_maxpool_fu_557_out_3_ce0 or ap_sig_cseq_ST_st34_fsm_27)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_27)) begin
        s2_3_ce0 = grp_obj_detector_maxpool_fu_557_out_3_ce0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st35_fsm_28)) begin
        s2_3_ce0 = grp_obj_detector_flatten_fu_540_inp_3_ce0;
    end else begin
        s2_3_ce0 = ap_const_logic_0;
    end
end

/// s2_3_ce1 assign process. ///
always @ (ap_sig_cseq_ST_st35_fsm_28 or grp_obj_detector_flatten_fu_540_inp_3_ce1)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st35_fsm_28)) begin
        s2_3_ce1 = grp_obj_detector_flatten_fu_540_inp_3_ce1;
    end else begin
        s2_3_ce1 = ap_const_logic_0;
    end
end

/// s2_3_we0 assign process. ///
always @ (grp_obj_detector_maxpool_fu_557_out_3_we0 or ap_sig_cseq_ST_st34_fsm_27)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_27)) begin
        s2_3_we0 = grp_obj_detector_maxpool_fu_557_out_3_we0;
    end else begin
        s2_3_we0 = ap_const_logic_0;
    end
end

/// s2_4_address0 assign process. ///
always @ (ap_sig_cseq_ST_st35_fsm_28 or grp_obj_detector_flatten_fu_540_inp_4_address0 or grp_obj_detector_maxpool_fu_557_out_4_address0 or ap_sig_cseq_ST_st34_fsm_27)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_27)) begin
        s2_4_address0 = grp_obj_detector_maxpool_fu_557_out_4_address0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st35_fsm_28)) begin
        s2_4_address0 = grp_obj_detector_flatten_fu_540_inp_4_address0;
    end else begin
        s2_4_address0 = 'bx;
    end
end

/// s2_4_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st35_fsm_28 or grp_obj_detector_flatten_fu_540_inp_4_ce0 or grp_obj_detector_maxpool_fu_557_out_4_ce0 or ap_sig_cseq_ST_st34_fsm_27)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_27)) begin
        s2_4_ce0 = grp_obj_detector_maxpool_fu_557_out_4_ce0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st35_fsm_28)) begin
        s2_4_ce0 = grp_obj_detector_flatten_fu_540_inp_4_ce0;
    end else begin
        s2_4_ce0 = ap_const_logic_0;
    end
end

/// s2_4_ce1 assign process. ///
always @ (ap_sig_cseq_ST_st35_fsm_28 or grp_obj_detector_flatten_fu_540_inp_4_ce1)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st35_fsm_28)) begin
        s2_4_ce1 = grp_obj_detector_flatten_fu_540_inp_4_ce1;
    end else begin
        s2_4_ce1 = ap_const_logic_0;
    end
end

/// s2_4_we0 assign process. ///
always @ (grp_obj_detector_maxpool_fu_557_out_4_we0 or ap_sig_cseq_ST_st34_fsm_27)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_27)) begin
        s2_4_we0 = grp_obj_detector_maxpool_fu_557_out_4_we0;
    end else begin
        s2_4_we0 = ap_const_logic_0;
    end
end

/// s2_5_address0 assign process. ///
always @ (ap_sig_cseq_ST_st35_fsm_28 or grp_obj_detector_flatten_fu_540_inp_5_address0 or grp_obj_detector_maxpool_fu_557_out_5_address0 or ap_sig_cseq_ST_st34_fsm_27)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_27)) begin
        s2_5_address0 = grp_obj_detector_maxpool_fu_557_out_5_address0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st35_fsm_28)) begin
        s2_5_address0 = grp_obj_detector_flatten_fu_540_inp_5_address0;
    end else begin
        s2_5_address0 = 'bx;
    end
end

/// s2_5_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st35_fsm_28 or grp_obj_detector_flatten_fu_540_inp_5_ce0 or grp_obj_detector_maxpool_fu_557_out_5_ce0 or ap_sig_cseq_ST_st34_fsm_27)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_27)) begin
        s2_5_ce0 = grp_obj_detector_maxpool_fu_557_out_5_ce0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st35_fsm_28)) begin
        s2_5_ce0 = grp_obj_detector_flatten_fu_540_inp_5_ce0;
    end else begin
        s2_5_ce0 = ap_const_logic_0;
    end
end

/// s2_5_ce1 assign process. ///
always @ (ap_sig_cseq_ST_st35_fsm_28 or grp_obj_detector_flatten_fu_540_inp_5_ce1)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st35_fsm_28)) begin
        s2_5_ce1 = grp_obj_detector_flatten_fu_540_inp_5_ce1;
    end else begin
        s2_5_ce1 = ap_const_logic_0;
    end
end

/// s2_5_we0 assign process. ///
always @ (grp_obj_detector_maxpool_fu_557_out_5_we0 or ap_sig_cseq_ST_st34_fsm_27)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_27)) begin
        s2_5_we0 = grp_obj_detector_maxpool_fu_557_out_5_we0;
    end else begin
        s2_5_we0 = ap_const_logic_0;
    end
end

/// s2_6_address0 assign process. ///
always @ (ap_sig_cseq_ST_st35_fsm_28 or grp_obj_detector_flatten_fu_540_inp_6_address0 or grp_obj_detector_maxpool_fu_557_out_6_address0 or ap_sig_cseq_ST_st34_fsm_27)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_27)) begin
        s2_6_address0 = grp_obj_detector_maxpool_fu_557_out_6_address0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st35_fsm_28)) begin
        s2_6_address0 = grp_obj_detector_flatten_fu_540_inp_6_address0;
    end else begin
        s2_6_address0 = 'bx;
    end
end

/// s2_6_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st35_fsm_28 or grp_obj_detector_flatten_fu_540_inp_6_ce0 or grp_obj_detector_maxpool_fu_557_out_6_ce0 or ap_sig_cseq_ST_st34_fsm_27)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_27)) begin
        s2_6_ce0 = grp_obj_detector_maxpool_fu_557_out_6_ce0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st35_fsm_28)) begin
        s2_6_ce0 = grp_obj_detector_flatten_fu_540_inp_6_ce0;
    end else begin
        s2_6_ce0 = ap_const_logic_0;
    end
end

/// s2_6_ce1 assign process. ///
always @ (ap_sig_cseq_ST_st35_fsm_28 or grp_obj_detector_flatten_fu_540_inp_6_ce1)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st35_fsm_28)) begin
        s2_6_ce1 = grp_obj_detector_flatten_fu_540_inp_6_ce1;
    end else begin
        s2_6_ce1 = ap_const_logic_0;
    end
end

/// s2_6_we0 assign process. ///
always @ (grp_obj_detector_maxpool_fu_557_out_6_we0 or ap_sig_cseq_ST_st34_fsm_27)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_27)) begin
        s2_6_we0 = grp_obj_detector_maxpool_fu_557_out_6_we0;
    end else begin
        s2_6_we0 = ap_const_logic_0;
    end
end

/// s2_7_address0 assign process. ///
always @ (ap_sig_cseq_ST_st35_fsm_28 or grp_obj_detector_flatten_fu_540_inp_7_address0 or grp_obj_detector_maxpool_fu_557_out_7_address0 or ap_sig_cseq_ST_st34_fsm_27)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_27)) begin
        s2_7_address0 = grp_obj_detector_maxpool_fu_557_out_7_address0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st35_fsm_28)) begin
        s2_7_address0 = grp_obj_detector_flatten_fu_540_inp_7_address0;
    end else begin
        s2_7_address0 = 'bx;
    end
end

/// s2_7_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st35_fsm_28 or grp_obj_detector_flatten_fu_540_inp_7_ce0 or grp_obj_detector_maxpool_fu_557_out_7_ce0 or ap_sig_cseq_ST_st34_fsm_27)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_27)) begin
        s2_7_ce0 = grp_obj_detector_maxpool_fu_557_out_7_ce0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st35_fsm_28)) begin
        s2_7_ce0 = grp_obj_detector_flatten_fu_540_inp_7_ce0;
    end else begin
        s2_7_ce0 = ap_const_logic_0;
    end
end

/// s2_7_ce1 assign process. ///
always @ (ap_sig_cseq_ST_st35_fsm_28 or grp_obj_detector_flatten_fu_540_inp_7_ce1)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st35_fsm_28)) begin
        s2_7_ce1 = grp_obj_detector_flatten_fu_540_inp_7_ce1;
    end else begin
        s2_7_ce1 = ap_const_logic_0;
    end
end

/// s2_7_we0 assign process. ///
always @ (grp_obj_detector_maxpool_fu_557_out_7_we0 or ap_sig_cseq_ST_st34_fsm_27)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_27)) begin
        s2_7_we0 = grp_obj_detector_maxpool_fu_557_out_7_we0;
    end else begin
        s2_7_we0 = ap_const_logic_0;
    end
end

/// s2_8_address0 assign process. ///
always @ (ap_sig_cseq_ST_st35_fsm_28 or grp_obj_detector_flatten_fu_540_inp_8_address0 or grp_obj_detector_maxpool_fu_557_out_8_address0 or ap_sig_cseq_ST_st34_fsm_27)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_27)) begin
        s2_8_address0 = grp_obj_detector_maxpool_fu_557_out_8_address0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st35_fsm_28)) begin
        s2_8_address0 = grp_obj_detector_flatten_fu_540_inp_8_address0;
    end else begin
        s2_8_address0 = 'bx;
    end
end

/// s2_8_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st35_fsm_28 or grp_obj_detector_flatten_fu_540_inp_8_ce0 or grp_obj_detector_maxpool_fu_557_out_8_ce0 or ap_sig_cseq_ST_st34_fsm_27)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_27)) begin
        s2_8_ce0 = grp_obj_detector_maxpool_fu_557_out_8_ce0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st35_fsm_28)) begin
        s2_8_ce0 = grp_obj_detector_flatten_fu_540_inp_8_ce0;
    end else begin
        s2_8_ce0 = ap_const_logic_0;
    end
end

/// s2_8_ce1 assign process. ///
always @ (ap_sig_cseq_ST_st35_fsm_28 or grp_obj_detector_flatten_fu_540_inp_8_ce1)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st35_fsm_28)) begin
        s2_8_ce1 = grp_obj_detector_flatten_fu_540_inp_8_ce1;
    end else begin
        s2_8_ce1 = ap_const_logic_0;
    end
end

/// s2_8_we0 assign process. ///
always @ (grp_obj_detector_maxpool_fu_557_out_8_we0 or ap_sig_cseq_ST_st34_fsm_27)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_27)) begin
        s2_8_we0 = grp_obj_detector_maxpool_fu_557_out_8_we0;
    end else begin
        s2_8_we0 = ap_const_logic_0;
    end
end

/// s2_9_address0 assign process. ///
always @ (ap_sig_cseq_ST_st35_fsm_28 or grp_obj_detector_flatten_fu_540_inp_9_address0 or grp_obj_detector_maxpool_fu_557_out_9_address0 or ap_sig_cseq_ST_st34_fsm_27)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_27)) begin
        s2_9_address0 = grp_obj_detector_maxpool_fu_557_out_9_address0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st35_fsm_28)) begin
        s2_9_address0 = grp_obj_detector_flatten_fu_540_inp_9_address0;
    end else begin
        s2_9_address0 = 'bx;
    end
end

/// s2_9_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st35_fsm_28 or grp_obj_detector_flatten_fu_540_inp_9_ce0 or grp_obj_detector_maxpool_fu_557_out_9_ce0 or ap_sig_cseq_ST_st34_fsm_27)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_27)) begin
        s2_9_ce0 = grp_obj_detector_maxpool_fu_557_out_9_ce0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st35_fsm_28)) begin
        s2_9_ce0 = grp_obj_detector_flatten_fu_540_inp_9_ce0;
    end else begin
        s2_9_ce0 = ap_const_logic_0;
    end
end

/// s2_9_ce1 assign process. ///
always @ (ap_sig_cseq_ST_st35_fsm_28 or grp_obj_detector_flatten_fu_540_inp_9_ce1)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st35_fsm_28)) begin
        s2_9_ce1 = grp_obj_detector_flatten_fu_540_inp_9_ce1;
    end else begin
        s2_9_ce1 = ap_const_logic_0;
    end
end

/// s2_9_we0 assign process. ///
always @ (grp_obj_detector_maxpool_fu_557_out_9_we0 or ap_sig_cseq_ST_st34_fsm_27)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_27)) begin
        s2_9_we0 = grp_obj_detector_maxpool_fu_557_out_9_we0;
    end else begin
        s2_9_we0 = ap_const_logic_0;
    end
end

/// s3_address0 assign process. ///
always @ (ap_reg_ppiten_pp3_it0 or ap_reg_ppiten_pp4_it0 or ap_sig_cseq_ST_pp3_stg0_fsm_29 or ap_sig_cseq_ST_pp4_stg0_fsm_34 or ap_sig_cseq_ST_st35_fsm_28 or grp_obj_detector_flatten_fu_540_out_r_address0 or tmp_i_fu_784_p1 or tmp_i1_fu_802_p1)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp4_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp4_stg0_fsm_34))) begin
        s3_address0 = tmp_i1_fu_802_p1;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg0_fsm_29))) begin
        s3_address0 = tmp_i_fu_784_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st35_fsm_28)) begin
        s3_address0 = grp_obj_detector_flatten_fu_540_out_r_address0;
    end else begin
        s3_address0 = 'bx;
    end
end

/// s3_ce0 assign process. ///
always @ (ap_reg_ppiten_pp3_it0 or ap_reg_ppiten_pp4_it0 or ap_sig_cseq_ST_pp3_stg0_fsm_29 or ap_sig_cseq_ST_pp4_stg0_fsm_34 or ap_sig_cseq_ST_st35_fsm_28 or grp_obj_detector_flatten_fu_540_out_r_ce0)
begin
    if ((((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg0_fsm_29)) | ((ap_const_logic_1 == ap_reg_ppiten_pp4_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp4_stg0_fsm_34)))) begin
        s3_ce0 = ap_const_logic_1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st35_fsm_28)) begin
        s3_ce0 = grp_obj_detector_flatten_fu_540_out_r_ce0;
    end else begin
        s3_ce0 = ap_const_logic_0;
    end
end

/// s3_ce1 assign process. ///
always @ (ap_sig_cseq_ST_st35_fsm_28 or grp_obj_detector_flatten_fu_540_out_r_ce1)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st35_fsm_28)) begin
        s3_ce1 = grp_obj_detector_flatten_fu_540_out_r_ce1;
    end else begin
        s3_ce1 = ap_const_logic_0;
    end
end

/// s3_we0 assign process. ///
always @ (ap_sig_cseq_ST_st35_fsm_28 or grp_obj_detector_flatten_fu_540_out_r_we0)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st35_fsm_28)) begin
        s3_we0 = grp_obj_detector_flatten_fu_540_out_r_we0;
    end else begin
        s3_we0 = ap_const_logic_0;
    end
end

/// s3_we1 assign process. ///
always @ (ap_sig_cseq_ST_st35_fsm_28 or grp_obj_detector_flatten_fu_540_out_r_we1)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st35_fsm_28)) begin
        s3_we1 = grp_obj_detector_flatten_fu_540_out_r_we1;
    end else begin
        s3_we1 = ap_const_logic_0;
    end
end
/// the next state (ap_NS_fsm) of the state machine. ///
always @ (ap_start or ap_CS_fsm or HP3_BVALID or ap_reg_ppiten_pp0_it0 or ap_sig_bdd_640 or ap_reg_ppiten_pp0_it1 or ap_reg_ppiten_pp0_it2 or ap_reg_ppiten_pp1_it0 or ap_sig_bdd_664 or ap_reg_ppiten_pp1_it1 or ap_reg_ppiten_pp1_it2 or ap_reg_ppiten_pp2_it0 or ap_sig_bdd_688 or ap_reg_ppiten_pp2_it1 or ap_reg_ppiten_pp2_it2 or ap_reg_ppiten_pp3_it0 or ap_reg_ppiten_pp3_it1 or ap_reg_ppiten_pp4_it0 or ap_reg_ppiten_pp4_it1 or ap_sig_cseq_ST_pp3_stg4_fsm_33 or ap_sig_cseq_ST_pp4_stg4_fsm_38 or ap_sig_ioackin_HP0_ARREADY or exitcond4_fu_665_p2 or ap_sig_ioackin_HP1_ARREADY or exitcond3_fu_692_p2 or ap_sig_ioackin_HP2_ARREADY or exitcond5_fu_719_p2 or exitcond_i_fu_772_p2 or exitcond_i1_fu_790_p2 or ap_sig_ioackin_HP3_AWREADY or grp_obj_detector_softmax_fu_532_ap_done or exitcond6_fu_840_p2 or exitcond6_reg_1029 or ap_reg_ppiten_pp5_it0 or ap_sig_ioackin_HP3_WREADY or ap_reg_ppiten_pp5_it1 or grp_obj_detector_flatten_fu_540_ap_done or grp_obj_detector_convolve_fu_521_ap_done or grp_obj_detector_maxpool_fu_557_ap_done or grp_obj_detector_ReLU_fu_578_ap_done or exitcond2_fu_736_p2 or exitcond1_fu_748_p2 or exitcond_fu_760_p2)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            if (~(ap_const_logic_0 == ap_sig_ioackin_HP0_ARREADY)) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end
        end
        ap_ST_st3_fsm_2 : 
        begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        ap_ST_st4_fsm_3 : 
        begin
            ap_NS_fsm = ap_ST_st5_fsm_4;
        end
        ap_ST_st5_fsm_4 : 
        begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st6_fsm_5 : 
        begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        ap_ST_st7_fsm_6 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg0_fsm_7;
        end
        ap_ST_pp0_stg0_fsm_7 : 
        begin
            if ((~((ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & ~(ap_sig_bdd_640 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_sig_bdd_640 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ~(ap_const_lv1_0 == exitcond4_fu_665_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_7;
            end else if ((((ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & ~(ap_sig_bdd_640 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_sig_bdd_640 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ~(ap_const_lv1_0 == exitcond4_fu_665_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
                ap_NS_fsm = ap_ST_st11_fsm_8;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_7;
            end
        end
        ap_ST_st11_fsm_8 : 
        begin
            if (~(ap_const_logic_0 == ap_sig_ioackin_HP1_ARREADY)) begin
                ap_NS_fsm = ap_ST_st12_fsm_9;
            end else begin
                ap_NS_fsm = ap_ST_st11_fsm_8;
            end
        end
        ap_ST_st12_fsm_9 : 
        begin
            ap_NS_fsm = ap_ST_st13_fsm_10;
        end
        ap_ST_st13_fsm_10 : 
        begin
            ap_NS_fsm = ap_ST_st14_fsm_11;
        end
        ap_ST_st14_fsm_11 : 
        begin
            ap_NS_fsm = ap_ST_st15_fsm_12;
        end
        ap_ST_st15_fsm_12 : 
        begin
            ap_NS_fsm = ap_ST_st16_fsm_13;
        end
        ap_ST_st16_fsm_13 : 
        begin
            ap_NS_fsm = ap_ST_pp1_stg0_fsm_14;
        end
        ap_ST_pp1_stg0_fsm_14 : 
        begin
            if ((~((ap_const_logic_1 == ap_reg_ppiten_pp1_it2) & ~(ap_sig_bdd_664 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1)) & ~(ap_const_logic_1 == ap_reg_ppiten_pp1_it1)) & ~((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & ~(ap_sig_bdd_664 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1)) & ~(ap_const_lv1_0 == exitcond3_fu_692_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp1_it1)))) begin
                ap_NS_fsm = ap_ST_pp1_stg0_fsm_14;
            end else if ((((ap_const_logic_1 == ap_reg_ppiten_pp1_it2) & ~(ap_sig_bdd_664 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1)) & ~(ap_const_logic_1 == ap_reg_ppiten_pp1_it1)) | ((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & ~(ap_sig_bdd_664 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1)) & ~(ap_const_lv1_0 == exitcond3_fu_692_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp1_it1)))) begin
                ap_NS_fsm = ap_ST_st20_fsm_15;
            end else begin
                ap_NS_fsm = ap_ST_pp1_stg0_fsm_14;
            end
        end
        ap_ST_st20_fsm_15 : 
        begin
            if (~(ap_const_logic_0 == ap_sig_ioackin_HP2_ARREADY)) begin
                ap_NS_fsm = ap_ST_st21_fsm_16;
            end else begin
                ap_NS_fsm = ap_ST_st20_fsm_15;
            end
        end
        ap_ST_st21_fsm_16 : 
        begin
            ap_NS_fsm = ap_ST_st22_fsm_17;
        end
        ap_ST_st22_fsm_17 : 
        begin
            ap_NS_fsm = ap_ST_st23_fsm_18;
        end
        ap_ST_st23_fsm_18 : 
        begin
            ap_NS_fsm = ap_ST_st24_fsm_19;
        end
        ap_ST_st24_fsm_19 : 
        begin
            ap_NS_fsm = ap_ST_st25_fsm_20;
        end
        ap_ST_st25_fsm_20 : 
        begin
            ap_NS_fsm = ap_ST_pp2_stg0_fsm_21;
        end
        ap_ST_pp2_stg0_fsm_21 : 
        begin
            if ((~((ap_const_logic_1 == ap_reg_ppiten_pp2_it2) & ~(ap_sig_bdd_688 & (ap_const_logic_1 == ap_reg_ppiten_pp2_it1)) & ~(ap_const_logic_1 == ap_reg_ppiten_pp2_it1)) & ~((ap_const_logic_1 == ap_reg_ppiten_pp2_it0) & ~(ap_sig_bdd_688 & (ap_const_logic_1 == ap_reg_ppiten_pp2_it1)) & ~(ap_const_lv1_0 == exitcond5_fu_719_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp2_it1)))) begin
                ap_NS_fsm = ap_ST_pp2_stg0_fsm_21;
            end else if ((((ap_const_logic_1 == ap_reg_ppiten_pp2_it2) & ~(ap_sig_bdd_688 & (ap_const_logic_1 == ap_reg_ppiten_pp2_it1)) & ~(ap_const_logic_1 == ap_reg_ppiten_pp2_it1)) | ((ap_const_logic_1 == ap_reg_ppiten_pp2_it0) & ~(ap_sig_bdd_688 & (ap_const_logic_1 == ap_reg_ppiten_pp2_it1)) & ~(ap_const_lv1_0 == exitcond5_fu_719_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp2_it1)))) begin
                ap_NS_fsm = ap_ST_st29_fsm_22;
            end else begin
                ap_NS_fsm = ap_ST_pp2_stg0_fsm_21;
            end
        end
        ap_ST_st29_fsm_22 : 
        begin
            if (~(ap_const_lv1_0 == exitcond2_fu_736_p2)) begin
                ap_NS_fsm = ap_ST_st31_fsm_24;
            end else begin
                ap_NS_fsm = ap_ST_st30_fsm_23;
            end
        end
        ap_ST_st30_fsm_23 : 
        begin
            if (~(ap_const_logic_0 == grp_obj_detector_convolve_fu_521_ap_done)) begin
                ap_NS_fsm = ap_ST_st29_fsm_22;
            end else begin
                ap_NS_fsm = ap_ST_st30_fsm_23;
            end
        end
        ap_ST_st31_fsm_24 : 
        begin
            if (~(ap_const_lv1_0 == exitcond1_fu_748_p2)) begin
                ap_NS_fsm = ap_ST_st33_fsm_26;
            end else begin
                ap_NS_fsm = ap_ST_st32_fsm_25;
            end
        end
        ap_ST_st32_fsm_25 : 
        begin
            if (~(ap_const_logic_0 == grp_obj_detector_ReLU_fu_578_ap_done)) begin
                ap_NS_fsm = ap_ST_st31_fsm_24;
            end else begin
                ap_NS_fsm = ap_ST_st32_fsm_25;
            end
        end
        ap_ST_st33_fsm_26 : 
        begin
            if (~(ap_const_lv1_0 == exitcond_fu_760_p2)) begin
                ap_NS_fsm = ap_ST_st35_fsm_28;
            end else begin
                ap_NS_fsm = ap_ST_st34_fsm_27;
            end
        end
        ap_ST_st34_fsm_27 : 
        begin
            if (~(ap_const_logic_0 == grp_obj_detector_maxpool_fu_557_ap_done)) begin
                ap_NS_fsm = ap_ST_st33_fsm_26;
            end else begin
                ap_NS_fsm = ap_ST_st34_fsm_27;
            end
        end
        ap_ST_st35_fsm_28 : 
        begin
            if (~(ap_const_logic_0 == grp_obj_detector_flatten_fu_540_ap_done)) begin
                ap_NS_fsm = ap_ST_pp3_stg0_fsm_29;
            end else begin
                ap_NS_fsm = ap_ST_st35_fsm_28;
            end
        end
        ap_ST_pp3_stg0_fsm_29 : 
        begin
            if (~((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & ~(ap_const_lv1_0 == exitcond_i_fu_772_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp3_it1))) begin
                ap_NS_fsm = ap_ST_pp3_stg1_fsm_30;
            end else begin
                ap_NS_fsm = ap_ST_pp4_stg0_fsm_34;
            end
        end
        ap_ST_pp3_stg1_fsm_30 : 
        begin
            ap_NS_fsm = ap_ST_pp3_stg2_fsm_31;
        end
        ap_ST_pp3_stg2_fsm_31 : 
        begin
            ap_NS_fsm = ap_ST_pp3_stg3_fsm_32;
        end
        ap_ST_pp3_stg3_fsm_32 : 
        begin
            ap_NS_fsm = ap_ST_pp3_stg4_fsm_33;
        end
        ap_ST_pp3_stg4_fsm_33 : 
        begin
            if (~((ap_const_logic_1 == ap_reg_ppiten_pp3_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg4_fsm_33) & ~(ap_const_logic_1 == ap_reg_ppiten_pp3_it0))) begin
                ap_NS_fsm = ap_ST_pp3_stg0_fsm_29;
            end else begin
                ap_NS_fsm = ap_ST_pp4_stg0_fsm_34;
            end
        end
        ap_ST_pp4_stg0_fsm_34 : 
        begin
            if (~((ap_const_logic_1 == ap_reg_ppiten_pp4_it0) & ~(ap_const_lv1_0 == exitcond_i1_fu_790_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp4_it1))) begin
                ap_NS_fsm = ap_ST_pp4_stg1_fsm_35;
            end else begin
                ap_NS_fsm = ap_ST_st56_fsm_39;
            end
        end
        ap_ST_pp4_stg1_fsm_35 : 
        begin
            ap_NS_fsm = ap_ST_pp4_stg2_fsm_36;
        end
        ap_ST_pp4_stg2_fsm_36 : 
        begin
            ap_NS_fsm = ap_ST_pp4_stg3_fsm_37;
        end
        ap_ST_pp4_stg3_fsm_37 : 
        begin
            ap_NS_fsm = ap_ST_pp4_stg4_fsm_38;
        end
        ap_ST_pp4_stg4_fsm_38 : 
        begin
            if (~((ap_const_logic_1 == ap_reg_ppiten_pp4_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp4_stg4_fsm_38) & ~(ap_const_logic_1 == ap_reg_ppiten_pp4_it0))) begin
                ap_NS_fsm = ap_ST_pp4_stg0_fsm_34;
            end else begin
                ap_NS_fsm = ap_ST_st56_fsm_39;
            end
        end
        ap_ST_st56_fsm_39 : 
        begin
            ap_NS_fsm = ap_ST_st57_fsm_40;
        end
        ap_ST_st57_fsm_40 : 
        begin
            if (~((ap_const_logic_0 == ap_sig_ioackin_HP3_AWREADY) | (ap_const_logic_0 == grp_obj_detector_softmax_fu_532_ap_done))) begin
                ap_NS_fsm = ap_ST_pp5_stg0_fsm_41;
            end else begin
                ap_NS_fsm = ap_ST_st57_fsm_40;
            end
        end
        ap_ST_pp5_stg0_fsm_41 : 
        begin
            if (~((ap_const_logic_1 == ap_reg_ppiten_pp5_it0) & ~((ap_const_lv1_0 == exitcond6_reg_1029) & (ap_const_logic_0 == ap_sig_ioackin_HP3_WREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp5_it1)) & ~(ap_const_lv1_0 == exitcond6_fu_840_p2))) begin
                ap_NS_fsm = ap_ST_pp5_stg0_fsm_41;
            end else if (((ap_const_logic_1 == ap_reg_ppiten_pp5_it0) & ~((ap_const_lv1_0 == exitcond6_reg_1029) & (ap_const_logic_0 == ap_sig_ioackin_HP3_WREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp5_it1)) & ~(ap_const_lv1_0 == exitcond6_fu_840_p2))) begin
                ap_NS_fsm = ap_ST_st60_fsm_42;
            end else begin
                ap_NS_fsm = ap_ST_pp5_stg0_fsm_41;
            end
        end
        ap_ST_st60_fsm_42 : 
        begin
            ap_NS_fsm = ap_ST_st61_fsm_43;
        end
        ap_ST_st61_fsm_43 : 
        begin
            ap_NS_fsm = ap_ST_st62_fsm_44;
        end
        ap_ST_st62_fsm_44 : 
        begin
            ap_NS_fsm = ap_ST_st63_fsm_45;
        end
        ap_ST_st63_fsm_45 : 
        begin
            if (~(HP3_BVALID == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st63_fsm_45;
            end
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign HP0_ARADDR = tmp_39_fu_655_p1;
assign HP0_ARBURST = ap_const_lv2_0;
assign HP0_ARCACHE = ap_const_lv4_0;
assign HP0_ARID = ap_const_lv1_0;
assign HP0_ARLEN = ap_const_lv32_310;
assign HP0_ARLOCK = ap_const_lv2_0;
assign HP0_ARPROT = ap_const_lv3_0;
assign HP0_ARQOS = ap_const_lv4_0;
assign HP0_ARREGION = ap_const_lv4_0;
assign HP0_ARSIZE = ap_const_lv3_0;
assign HP0_ARUSER = ap_const_lv1_0;
assign HP0_AWADDR = ap_const_lv32_0;
assign HP0_AWBURST = ap_const_lv2_0;
assign HP0_AWCACHE = ap_const_lv4_0;
assign HP0_AWID = ap_const_lv1_0;
assign HP0_AWLEN = ap_const_lv32_0;
assign HP0_AWLOCK = ap_const_lv2_0;
assign HP0_AWPROT = ap_const_lv3_0;
assign HP0_AWQOS = ap_const_lv4_0;
assign HP0_AWREGION = ap_const_lv4_0;
assign HP0_AWSIZE = ap_const_lv3_0;
assign HP0_AWUSER = ap_const_lv1_0;
assign HP0_AWVALID = ap_const_logic_0;
assign HP0_BREADY = ap_const_logic_0;
assign HP0_WDATA = ap_const_lv32_0;
assign HP0_WID = ap_const_lv1_0;
assign HP0_WLAST = ap_const_logic_0;
assign HP0_WSTRB = ap_const_lv4_0;
assign HP0_WUSER = ap_const_lv1_0;
assign HP0_WVALID = ap_const_logic_0;
assign HP1_ARADDR = tmp_40_fu_682_p1;
assign HP1_ARBURST = ap_const_lv2_0;
assign HP1_ARCACHE = ap_const_lv4_0;
assign HP1_ARID = ap_const_lv1_0;
assign HP1_ARLEN = ap_const_lv32_96;
assign HP1_ARLOCK = ap_const_lv2_0;
assign HP1_ARPROT = ap_const_lv3_0;
assign HP1_ARQOS = ap_const_lv4_0;
assign HP1_ARREGION = ap_const_lv4_0;
assign HP1_ARSIZE = ap_const_lv3_0;
assign HP1_ARUSER = ap_const_lv1_0;
assign HP1_AWADDR = ap_const_lv32_0;
assign HP1_AWBURST = ap_const_lv2_0;
assign HP1_AWCACHE = ap_const_lv4_0;
assign HP1_AWID = ap_const_lv1_0;
assign HP1_AWLEN = ap_const_lv32_0;
assign HP1_AWLOCK = ap_const_lv2_0;
assign HP1_AWPROT = ap_const_lv3_0;
assign HP1_AWQOS = ap_const_lv4_0;
assign HP1_AWREGION = ap_const_lv4_0;
assign HP1_AWSIZE = ap_const_lv3_0;
assign HP1_AWUSER = ap_const_lv1_0;
assign HP1_AWVALID = ap_const_logic_0;
assign HP1_BREADY = ap_const_logic_0;
assign HP1_WDATA = ap_const_lv32_0;
assign HP1_WID = ap_const_lv1_0;
assign HP1_WLAST = ap_const_logic_0;
assign HP1_WSTRB = ap_const_lv4_0;
assign HP1_WUSER = ap_const_lv1_0;
assign HP1_WVALID = ap_const_logic_0;
assign HP2_ARADDR = tmp_41_fu_709_p1;
assign HP2_ARBURST = ap_const_lv2_0;
assign HP2_ARCACHE = ap_const_lv4_0;
assign HP2_ARID = ap_const_lv1_0;
assign HP2_ARLEN = ap_const_lv32_6C0;
assign HP2_ARLOCK = ap_const_lv2_0;
assign HP2_ARPROT = ap_const_lv3_0;
assign HP2_ARQOS = ap_const_lv4_0;
assign HP2_ARREGION = ap_const_lv4_0;
assign HP2_ARSIZE = ap_const_lv3_0;
assign HP2_ARUSER = ap_const_lv1_0;
assign HP2_AWADDR = ap_const_lv32_0;
assign HP2_AWBURST = ap_const_lv2_0;
assign HP2_AWCACHE = ap_const_lv4_0;
assign HP2_AWID = ap_const_lv1_0;
assign HP2_AWLEN = ap_const_lv32_0;
assign HP2_AWLOCK = ap_const_lv2_0;
assign HP2_AWPROT = ap_const_lv3_0;
assign HP2_AWQOS = ap_const_lv4_0;
assign HP2_AWREGION = ap_const_lv4_0;
assign HP2_AWSIZE = ap_const_lv3_0;
assign HP2_AWUSER = ap_const_lv1_0;
assign HP2_AWVALID = ap_const_logic_0;
assign HP2_BREADY = ap_const_logic_0;
assign HP2_WDATA = ap_const_lv32_0;
assign HP2_WID = ap_const_lv1_0;
assign HP2_WLAST = ap_const_logic_0;
assign HP2_WSTRB = ap_const_lv4_0;
assign HP2_WUSER = ap_const_lv1_0;
assign HP2_WVALID = ap_const_logic_0;
assign HP3_ARADDR = ap_const_lv32_0;
assign HP3_ARBURST = ap_const_lv2_0;
assign HP3_ARCACHE = ap_const_lv4_0;
assign HP3_ARID = ap_const_lv1_0;
assign HP3_ARLEN = ap_const_lv32_0;
assign HP3_ARLOCK = ap_const_lv2_0;
assign HP3_ARPROT = ap_const_lv3_0;
assign HP3_ARQOS = ap_const_lv4_0;
assign HP3_ARREGION = ap_const_lv4_0;
assign HP3_ARSIZE = ap_const_lv3_0;
assign HP3_ARUSER = ap_const_lv1_0;
assign HP3_ARVALID = ap_const_logic_0;
assign HP3_AWADDR = tmp_42_fu_830_p1;
assign HP3_AWBURST = ap_const_lv2_0;
assign HP3_AWCACHE = ap_const_lv4_0;
assign HP3_AWID = ap_const_lv1_0;
assign HP3_AWLEN = ap_const_lv32_2;
assign HP3_AWLOCK = ap_const_lv2_0;
assign HP3_AWPROT = ap_const_lv3_0;
assign HP3_AWQOS = ap_const_lv4_0;
assign HP3_AWREGION = ap_const_lv4_0;
assign HP3_AWSIZE = ap_const_lv3_0;
assign HP3_AWUSER = ap_const_lv1_0;
assign HP3_RREADY = ap_const_logic_0;
assign HP3_WDATA = local_res_load_phi_reg_1038;
assign HP3_WID = ap_const_lv1_0;
assign HP3_WLAST = ap_const_logic_0;
assign HP3_WSTRB = ap_const_lv4_F;
assign HP3_WUSER = ap_const_lv1_0;

/// ap_rst_n_inv assign process. ///
always @ (ap_rst_n)
begin
    ap_rst_n_inv = ~ap_rst_n;
end

/// ap_sig_bdd_1001 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1001 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1C]);
end

/// ap_sig_bdd_110 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_110 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end

/// ap_sig_bdd_1465 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1465 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_17]);
end

/// ap_sig_bdd_1479 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1479 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_19]);
end

/// ap_sig_bdd_1495 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1495 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1B]);
end

/// ap_sig_bdd_1525 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1525 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_27]);
end

/// ap_sig_bdd_1595 assign process. ///
always @ (exitcond6_reg_1029 or ap_sig_cseq_ST_pp5_stg0_fsm_41 or ap_reg_ppiten_pp5_it1)
begin
    ap_sig_bdd_1595 = ((ap_const_logic_1 == ap_sig_cseq_ST_pp5_stg0_fsm_41) & (ap_const_lv1_0 == exitcond6_reg_1029) & (ap_const_logic_1 == ap_reg_ppiten_pp5_it1));
end

/// ap_sig_bdd_1607 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1607 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2D]);
end

/// ap_sig_bdd_1925 assign process. ///
always @ (HP3_AWREADY or grp_obj_detector_softmax_fu_532_ap_done)
begin
    ap_sig_bdd_1925 = ((ap_const_logic_1 == HP3_AWREADY) & ~(ap_const_logic_0 == grp_obj_detector_softmax_fu_532_ap_done));
end

/// ap_sig_bdd_631 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_631 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_7]);
end

/// ap_sig_bdd_640 assign process. ///
always @ (HP0_RVALID or exitcond4_reg_888)
begin
    ap_sig_bdd_640 = ((HP0_RVALID == ap_const_logic_0) & (exitcond4_reg_888 == ap_const_lv1_0));
end

/// ap_sig_bdd_656 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_656 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_E]);
end

/// ap_sig_bdd_664 assign process. ///
always @ (HP1_RVALID or exitcond3_reg_908)
begin
    ap_sig_bdd_664 = ((HP1_RVALID == ap_const_logic_0) & (ap_const_lv1_0 == exitcond3_reg_908));
end

/// ap_sig_bdd_680 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_680 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_15]);
end

/// ap_sig_bdd_688 assign process. ///
always @ (HP2_RVALID or exitcond5_reg_928)
begin
    ap_sig_bdd_688 = ((HP2_RVALID == ap_const_logic_0) & (ap_const_lv1_0 == exitcond5_reg_928));
end

/// ap_sig_bdd_713 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_713 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1E]);
end

/// ap_sig_bdd_727 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_727 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_23]);
end

/// ap_sig_bdd_746 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_746 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_21]);
end

/// ap_sig_bdd_754 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_754 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_26]);
end

/// ap_sig_bdd_776 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_776 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end

/// ap_sig_bdd_799 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_799 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_8]);
end

/// ap_sig_bdd_822 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_822 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_F]);
end

/// ap_sig_bdd_845 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_845 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_16]);
end

/// ap_sig_bdd_854 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_854 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_18]);
end

/// ap_sig_bdd_863 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_863 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1A]);
end

/// ap_sig_bdd_871 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_871 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1D]);
end

/// ap_sig_bdd_895 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_895 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_22]);
end

/// ap_sig_bdd_919 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_919 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_28]);
end

/// ap_sig_bdd_939 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_939 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_29]);
end

/// ap_sig_bdd_965 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_965 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_6]);
end

/// ap_sig_bdd_977 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_977 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_D]);
end

/// ap_sig_bdd_989 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_989 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_14]);
end
assign exitcond1_fu_748_p2 = (i1_reg_440 == ap_const_lv3_6? 1'b1: 1'b0);
assign exitcond2_fu_736_p2 = (i_reg_428 == ap_const_lv3_6? 1'b1: 1'b0);
assign exitcond3_fu_692_p2 = (indvar1_phi_fu_408_p4 == ap_const_lv8_96? 1'b1: 1'b0);
assign exitcond4_fu_665_p2 = (indvar_phi_fu_396_p4 == ap_const_lv10_310? 1'b1: 1'b0);
assign exitcond5_fu_719_p2 = (indvar2_phi_fu_420_p4 == ap_const_lv11_6C0? 1'b1: 1'b0);
assign exitcond6_fu_840_p2 = (indvar3_reg_510 == ap_const_lv2_2? 1'b1: 1'b0);
assign exitcond_fu_760_p2 = (i2_reg_452 == ap_const_lv3_6? 1'b1: 1'b0);
assign exitcond_i1_fu_790_p2 = (i_i1_phi_fu_503_p4 == ap_const_lv10_360? 1'b1: 1'b0);
assign exitcond_i_fu_772_p2 = (i_i_phi_fu_480_p4 == ap_const_lv10_360? 1'b1: 1'b0);
assign grp_fu_588_ce = ap_const_logic_1;
assign grp_fu_588_p1 = reg_610;
assign grp_fu_594_ce = ap_const_logic_1;
assign grp_fu_594_p0 = s3_q0;
assign grp_fu_594_p1 = local_W1_q0;
assign grp_obj_detector_ReLU_fu_578_ap_start = grp_obj_detector_ReLU_fu_578_ap_start_ap_start_reg;
assign grp_obj_detector_ReLU_fu_578_inp_q0 = s0_q0;
assign grp_obj_detector_ReLU_fu_578_tmp_21 = i1_reg_440;
assign grp_obj_detector_ReLU_fu_578_tmp_211 = i1_reg_440;
assign grp_obj_detector_convolve_fu_521_A_q0 = local_A_q0;
assign grp_obj_detector_convolve_fu_521_A_q1 = local_A_q1;
assign grp_obj_detector_convolve_fu_521_B_q0 = local_W0_q0;
assign grp_obj_detector_convolve_fu_521_B_q1 = local_W0_q1;
assign grp_obj_detector_convolve_fu_521_ap_start = grp_obj_detector_convolve_fu_521_ap_start_ap_start_reg;
assign grp_obj_detector_convolve_fu_521_tmp_20 = i_reg_428;
assign grp_obj_detector_convolve_fu_521_tmp_201 = i_reg_428;
assign grp_obj_detector_flatten_fu_540_ap_start = grp_obj_detector_flatten_fu_540_ap_start_ap_start_reg;
assign grp_obj_detector_flatten_fu_540_inp_0_q0 = s2_0_q0;
assign grp_obj_detector_flatten_fu_540_inp_0_q1 = s2_0_q1;
assign grp_obj_detector_flatten_fu_540_inp_10_q0 = s2_10_q0;
assign grp_obj_detector_flatten_fu_540_inp_10_q1 = s2_10_q1;
assign grp_obj_detector_flatten_fu_540_inp_11_q0 = s2_11_q0;
assign grp_obj_detector_flatten_fu_540_inp_11_q1 = s2_11_q1;
assign grp_obj_detector_flatten_fu_540_inp_1_q0 = s2_1_q0;
assign grp_obj_detector_flatten_fu_540_inp_1_q1 = s2_1_q1;
assign grp_obj_detector_flatten_fu_540_inp_2_q0 = s2_2_q0;
assign grp_obj_detector_flatten_fu_540_inp_2_q1 = s2_2_q1;
assign grp_obj_detector_flatten_fu_540_inp_3_q0 = s2_3_q0;
assign grp_obj_detector_flatten_fu_540_inp_3_q1 = s2_3_q1;
assign grp_obj_detector_flatten_fu_540_inp_4_q0 = s2_4_q0;
assign grp_obj_detector_flatten_fu_540_inp_4_q1 = s2_4_q1;
assign grp_obj_detector_flatten_fu_540_inp_5_q0 = s2_5_q0;
assign grp_obj_detector_flatten_fu_540_inp_5_q1 = s2_5_q1;
assign grp_obj_detector_flatten_fu_540_inp_6_q0 = s2_6_q0;
assign grp_obj_detector_flatten_fu_540_inp_6_q1 = s2_6_q1;
assign grp_obj_detector_flatten_fu_540_inp_7_q0 = s2_7_q0;
assign grp_obj_detector_flatten_fu_540_inp_7_q1 = s2_7_q1;
assign grp_obj_detector_flatten_fu_540_inp_8_q0 = s2_8_q0;
assign grp_obj_detector_flatten_fu_540_inp_8_q1 = s2_8_q1;
assign grp_obj_detector_flatten_fu_540_inp_9_q0 = s2_9_q0;
assign grp_obj_detector_flatten_fu_540_inp_9_q1 = s2_9_q1;
assign grp_obj_detector_maxpool_fu_557_ap_start = grp_obj_detector_maxpool_fu_557_ap_start_ap_start_reg;
assign grp_obj_detector_maxpool_fu_557_inp_q0 = s1_q0;
assign grp_obj_detector_maxpool_fu_557_inp_q1 = s1_q1;
assign grp_obj_detector_maxpool_fu_557_tmp_24 = i2_reg_452;
assign grp_obj_detector_maxpool_fu_557_tmp_241 = i2_reg_452;
assign grp_obj_detector_softmax_fu_532_ap_start = grp_obj_detector_softmax_fu_532_ap_start_ap_start_reg;
assign grp_obj_detector_softmax_fu_532_inp_0_read = cost_0_reg_464;
assign grp_obj_detector_softmax_fu_532_inp_1_read = cost_1_reg_487;
assign i_1_fu_742_p2 = (i_reg_428 + ap_const_lv3_1);
assign i_2_fu_754_p2 = (i1_reg_440 + ap_const_lv3_1);
assign i_3_fu_766_p2 = (i2_reg_452 + ap_const_lv3_1);
assign i_4_fu_778_p2 = (i_i_phi_fu_480_p4 + ap_const_lv10_1);
assign i_5_fu_796_p2 = (i_i1_phi_fu_503_p4 + ap_const_lv10_1);
assign indvar_next1_fu_698_p2 = (indvar1_phi_fu_408_p4 + ap_const_lv8_1);
assign indvar_next2_fu_725_p2 = (indvar2_phi_fu_420_p4 + ap_const_lv11_1);
assign indvar_next3_fu_846_p2 = (indvar3_reg_510 + ap_const_lv2_1);
assign indvar_next_fu_671_p2 = (indvar_phi_fu_396_p4 + ap_const_lv10_1);
assign local_A_address1 = grp_obj_detector_convolve_fu_521_A_address1;
assign local_A_d0 = HP0_addr_read_reg_897;
assign local_W0_address1 = grp_obj_detector_convolve_fu_521_B_address1;
assign local_W0_d0 = HP1_addr_read_reg_917;
assign local_W1_d0 = HP2_addr_read_reg_937;
assign local_res_load_phi_fu_856_p3 = ((tmp_43_fu_852_p1[0:0]===1'b1)? local_res_1_reg_1019: local_res_0_reg_1014);
assign obj_detector_AXILiteS_s_axi_U_ap_dummy_ce = ap_const_logic_1;
assign obj_detector_HP0_m_axi_U_ap_dummy_ce = ap_const_logic_1;
assign obj_detector_HP1_m_axi_U_ap_dummy_ce = ap_const_logic_1;
assign obj_detector_HP2_m_axi_U_ap_dummy_ce = ap_const_logic_1;
assign obj_detector_HP3_m_axi_U_ap_dummy_ce = ap_const_logic_1;
assign obj_detector_control_s_axi_U_ap_dummy_ce = ap_const_logic_1;
assign p_addr7_fu_811_p2 = (tmp_i1_trn_cast_fu_807_p1 + ap_const_lv11_360);
assign s0_address1 = grp_obj_detector_convolve_fu_521_conv_address1;
assign s0_d0 = grp_obj_detector_convolve_fu_521_conv_d0;
assign s0_d1 = grp_obj_detector_convolve_fu_521_conv_d1;
assign s1_address1 = grp_obj_detector_maxpool_fu_557_inp_address1;
assign s1_d0 = grp_obj_detector_ReLU_fu_578_out_r_d0;
assign s2_0_address1 = grp_obj_detector_flatten_fu_540_inp_0_address1;
assign s2_0_d0 = grp_obj_detector_maxpool_fu_557_out_0_d0;
assign s2_10_address1 = grp_obj_detector_flatten_fu_540_inp_10_address1;
assign s2_10_d0 = grp_obj_detector_maxpool_fu_557_out_10_d0;
assign s2_11_address1 = grp_obj_detector_flatten_fu_540_inp_11_address1;
assign s2_11_d0 = grp_obj_detector_maxpool_fu_557_out_11_d0;
assign s2_1_address1 = grp_obj_detector_flatten_fu_540_inp_1_address1;
assign s2_1_d0 = grp_obj_detector_maxpool_fu_557_out_1_d0;
assign s2_2_address1 = grp_obj_detector_flatten_fu_540_inp_2_address1;
assign s2_2_d0 = grp_obj_detector_maxpool_fu_557_out_2_d0;
assign s2_3_address1 = grp_obj_detector_flatten_fu_540_inp_3_address1;
assign s2_3_d0 = grp_obj_detector_maxpool_fu_557_out_3_d0;
assign s2_4_address1 = grp_obj_detector_flatten_fu_540_inp_4_address1;
assign s2_4_d0 = grp_obj_detector_maxpool_fu_557_out_4_d0;
assign s2_5_address1 = grp_obj_detector_flatten_fu_540_inp_5_address1;
assign s2_5_d0 = grp_obj_detector_maxpool_fu_557_out_5_d0;
assign s2_6_address1 = grp_obj_detector_flatten_fu_540_inp_6_address1;
assign s2_6_d0 = grp_obj_detector_maxpool_fu_557_out_6_d0;
assign s2_7_address1 = grp_obj_detector_flatten_fu_540_inp_7_address1;
assign s2_7_d0 = grp_obj_detector_maxpool_fu_557_out_7_d0;
assign s2_8_address1 = grp_obj_detector_flatten_fu_540_inp_8_address1;
assign s2_8_d0 = grp_obj_detector_maxpool_fu_557_out_8_d0;
assign s2_9_address1 = grp_obj_detector_flatten_fu_540_inp_9_address1;
assign s2_9_d0 = grp_obj_detector_maxpool_fu_557_out_9_d0;
assign s3_address1 = grp_obj_detector_flatten_fu_540_out_r_address1;
assign s3_d0 = grp_obj_detector_flatten_fu_540_out_r_d0;
assign s3_d1 = grp_obj_detector_flatten_fu_540_out_r_d1;
assign tmp_287_fu_704_p1 = ap_reg_ppstg_indvar1_reg_404_pp1_it1;
assign tmp_288_fu_731_p1 = ap_reg_ppstg_indvar2_reg_416_pp2_it1;
assign tmp_289_fu_817_p1 = p_addr7_fu_811_p2;
assign tmp_39_fu_655_p1 = tmp_38_reg_877;
assign tmp_40_fu_682_p1 = tmp_37_reg_872;
assign tmp_41_fu_709_p1 = tmp_36_reg_867;
assign tmp_42_fu_830_p1 = tmp_reg_862;
assign tmp_43_fu_852_p1 = indvar3_reg_510[0:0];
assign tmp_i1_fu_802_p1 = i_i1_phi_fu_503_p4;
assign tmp_i1_trn_cast_fu_807_p1 = i_i1_phi_fu_503_p4;
assign tmp_i_fu_784_p1 = i_i_phi_fu_480_p4;
assign tmp_s_fu_677_p1 = ap_reg_ppstg_indvar_reg_392_pp0_it1;


endmodule //obj_detector

